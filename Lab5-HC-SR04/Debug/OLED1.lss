
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000070ec  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004070ec  004070ec  000170ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  004070f4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000388  204009d0  00407ac4  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400d58  00407e4c  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402d58  00409e4c  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001a14d  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003b50  00000000  00000000  0003aba4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00006199  00000000  00000000  0003e6f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000009b0  00000000  00000000  0004488d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a20  00000000  00000000  0004523d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000aad1  00000000  00000000  00045c5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000fc89  00000000  00000000  0005072e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009058e  00000000  00000000  000603b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002158  00000000  00000000  000f0948  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	58 2d 40 20 fd 12 40 00 f9 12 40 00 f9 12 40 00     X-@ ..@...@...@.
  400010:	f9 12 40 00 f9 12 40 00 f9 12 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	f9 12 40 00 f9 12 40 00 00 00 00 00 f9 12 40 00     ..@...@.......@.
  40003c:	f9 12 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ..@...@...@...@.
  40004c:	ad 18 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ..@...@...@...@.
  40005c:	f9 12 40 00 f9 12 40 00 00 00 00 00 5d 0e 40 00     ..@...@.....].@.
  40006c:	71 0e 40 00 85 0e 40 00 f9 12 40 00 f9 12 40 00     q.@...@...@...@.
  40007c:	f9 12 40 00 99 0e 40 00 ad 0e 40 00 f9 12 40 00     ..@...@...@...@.
  40008c:	f9 12 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ..@...@...@...@.
  40009c:	45 18 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     E.@...@...@...@.
  4000ac:	f9 12 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ..@...@...@...@.
  4000bc:	f9 12 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ..@...@...@...@.
  4000cc:	f9 12 40 00 00 00 00 00 f9 12 40 00 00 00 00 00     ..@.......@.....
  4000dc:	f9 12 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ..@...@...@...@.
  4000ec:	f9 12 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ..@...@...@...@.
  4000fc:	f9 12 40 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ..@...@...@...@.
  40010c:	f9 12 40 00 f9 12 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 f9 12 40 00 f9 12 40 00 f9 12 40 00     ......@...@...@.
  40012c:	f9 12 40 00 f9 12 40 00 00 00 00 00 f9 12 40 00     ..@...@.......@.
  40013c:	f9 12 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	004070f4 	.word	0x004070f4

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	004070f4 	.word	0x004070f4
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	004070f4 	.word	0x004070f4
  4001a8:	00000000 	.word	0x00000000

004001ac <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4001ac:	4b03      	ldr	r3, [pc, #12]	; (4001bc <rtt_init+0x10>)
  4001ae:	681b      	ldr	r3, [r3, #0]
  4001b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  4001b4:	4319      	orrs	r1, r3
  4001b6:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  4001b8:	2000      	movs	r0, #0
  4001ba:	4770      	bx	lr
  4001bc:	204009ec 	.word	0x204009ec

004001c0 <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  4001c0:	b941      	cbnz	r1, 4001d4 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4001c2:	4a09      	ldr	r2, [pc, #36]	; (4001e8 <rtt_sel_source+0x28>)
  4001c4:	6813      	ldr	r3, [r2, #0]
  4001c6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  4001ca:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001cc:	6802      	ldr	r2, [r0, #0]
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6003      	str	r3, [r0, #0]
  4001d2:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4001d4:	4a04      	ldr	r2, [pc, #16]	; (4001e8 <rtt_sel_source+0x28>)
  4001d6:	6813      	ldr	r3, [r2, #0]
  4001d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4001dc:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001de:	6802      	ldr	r2, [r0, #0]
  4001e0:	4313      	orrs	r3, r2
  4001e2:	6003      	str	r3, [r0, #0]
  4001e4:	4770      	bx	lr
  4001e6:	bf00      	nop
  4001e8:	204009ec 	.word	0x204009ec

004001ec <rtt_enable_interrupt>:
 */
void rtt_enable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp;

	temp = p_rtt->RTT_MR;
  4001ec:	6802      	ldr	r2, [r0, #0]
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4001ee:	4b03      	ldr	r3, [pc, #12]	; (4001fc <rtt_enable_interrupt+0x10>)
  4001f0:	681b      	ldr	r3, [r3, #0]
  4001f2:	4319      	orrs	r1, r3
  4001f4:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  4001f6:	6001      	str	r1, [r0, #0]
  4001f8:	4770      	bx	lr
  4001fa:	bf00      	nop
  4001fc:	204009ec 	.word	0x204009ec

00400200 <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  400200:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  400202:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  400206:	4b02      	ldr	r3, [pc, #8]	; (400210 <rtt_disable_interrupt+0x10>)
  400208:	681b      	ldr	r3, [r3, #0]
  40020a:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  40020c:	6001      	str	r1, [r0, #0]
  40020e:	4770      	bx	lr
  400210:	204009ec 	.word	0x204009ec

00400214 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400214:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400216:	6883      	ldr	r3, [r0, #8]
  400218:	429a      	cmp	r2, r3
  40021a:	d003      	beq.n	400224 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  40021c:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40021e:	6883      	ldr	r3, [r0, #8]
  400220:	4293      	cmp	r3, r2
  400222:	d1fb      	bne.n	40021c <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400224:	4618      	mov	r0, r3
  400226:	4770      	bx	lr

00400228 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400228:	68c0      	ldr	r0, [r0, #12]
}
  40022a:	4770      	bx	lr

0040022c <rtt_write_alarm_time>:
 * \param ul_alarm_time Alarm time,Alarm time = ALMV + 1.
 *
 * \retval 0 Configuration is done.
 */
uint32_t rtt_write_alarm_time(Rtt *p_rtt, uint32_t ul_alarm_time)
{
  40022c:	b570      	push	{r4, r5, r6, lr}
  40022e:	4606      	mov	r6, r0
  400230:	460d      	mov	r5, r1
	uint32_t flag;

	flag = p_rtt->RTT_MR & RTT_MR_ALMIEN;
  400232:	6804      	ldr	r4, [r0, #0]
  400234:	f404 3480 	and.w	r4, r4, #65536	; 0x10000

	rtt_disable_interrupt(RTT, RTT_MR_ALMIEN);
  400238:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40023c:	4809      	ldr	r0, [pc, #36]	; (400264 <rtt_write_alarm_time+0x38>)
  40023e:	4b0a      	ldr	r3, [pc, #40]	; (400268 <rtt_write_alarm_time+0x3c>)
  400240:	4798      	blx	r3

	/**
	 * Alarm time = ALMV + 1,If the incoming parameter 
	 * is 0, the ALMV is set to 0xFFFFFFFF.
	*/
	if(ul_alarm_time == 0) {
  400242:	b92d      	cbnz	r5, 400250 <rtt_write_alarm_time+0x24>
		p_rtt->RTT_AR = 0xFFFFFFFF;
  400244:	f04f 33ff 	mov.w	r3, #4294967295
  400248:	6073      	str	r3, [r6, #4]
	}
	else {
		p_rtt->RTT_AR = ul_alarm_time - 1;
	}

	if (flag) {
  40024a:	b924      	cbnz	r4, 400256 <rtt_write_alarm_time+0x2a>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
	}

	return 0;
}
  40024c:	2000      	movs	r0, #0
  40024e:	bd70      	pop	{r4, r5, r6, pc}
		p_rtt->RTT_AR = ul_alarm_time - 1;
  400250:	3d01      	subs	r5, #1
  400252:	6075      	str	r5, [r6, #4]
  400254:	e7f9      	b.n	40024a <rtt_write_alarm_time+0x1e>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  400256:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  40025a:	4802      	ldr	r0, [pc, #8]	; (400264 <rtt_write_alarm_time+0x38>)
  40025c:	4b03      	ldr	r3, [pc, #12]	; (40026c <rtt_write_alarm_time+0x40>)
  40025e:	4798      	blx	r3
  400260:	e7f4      	b.n	40024c <rtt_write_alarm_time+0x20>
  400262:	bf00      	nop
  400264:	400e1830 	.word	0x400e1830
  400268:	00400201 	.word	0x00400201
  40026c:	004001ed 	.word	0x004001ed

00400270 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400270:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  400272:	4b07      	ldr	r3, [pc, #28]	; (400290 <spi_enable_clock+0x20>)
  400274:	4298      	cmp	r0, r3
  400276:	d003      	beq.n	400280 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400278:	4b06      	ldr	r3, [pc, #24]	; (400294 <spi_enable_clock+0x24>)
  40027a:	4298      	cmp	r0, r3
  40027c:	d004      	beq.n	400288 <spi_enable_clock+0x18>
  40027e:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400280:	2015      	movs	r0, #21
  400282:	4b05      	ldr	r3, [pc, #20]	; (400298 <spi_enable_clock+0x28>)
  400284:	4798      	blx	r3
  400286:	bd08      	pop	{r3, pc}
  400288:	202a      	movs	r0, #42	; 0x2a
  40028a:	4b03      	ldr	r3, [pc, #12]	; (400298 <spi_enable_clock+0x28>)
  40028c:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40028e:	e7f6      	b.n	40027e <spi_enable_clock+0xe>
  400290:	40008000 	.word	0x40008000
  400294:	40058000 	.word	0x40058000
  400298:	00400fe1 	.word	0x00400fe1

0040029c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  40029c:	6843      	ldr	r3, [r0, #4]
  40029e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4002a2:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4002a4:	6843      	ldr	r3, [r0, #4]
  4002a6:	0409      	lsls	r1, r1, #16
  4002a8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4002ac:	4319      	orrs	r1, r3
  4002ae:	6041      	str	r1, [r0, #4]
  4002b0:	4770      	bx	lr

004002b2 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4002b2:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4002b4:	f643 2499 	movw	r4, #15001	; 0x3a99
  4002b8:	6905      	ldr	r5, [r0, #16]
  4002ba:	f015 0f02 	tst.w	r5, #2
  4002be:	d103      	bne.n	4002c8 <spi_write+0x16>
		if (!timeout--) {
  4002c0:	3c01      	subs	r4, #1
  4002c2:	d1f9      	bne.n	4002b8 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4002c4:	2001      	movs	r0, #1
  4002c6:	e00c      	b.n	4002e2 <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4002c8:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4002ca:	f014 0f02 	tst.w	r4, #2
  4002ce:	d006      	beq.n	4002de <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4002d0:	0412      	lsls	r2, r2, #16
  4002d2:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4002d6:	4311      	orrs	r1, r2
		if (uc_last) {
  4002d8:	b10b      	cbz	r3, 4002de <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4002da:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4002de:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4002e0:	2000      	movs	r0, #0
}
  4002e2:	bc30      	pop	{r4, r5}
  4002e4:	4770      	bx	lr

004002e6 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4002e6:	b932      	cbnz	r2, 4002f6 <spi_set_clock_polarity+0x10>
  4002e8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4002ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ee:	f023 0301 	bic.w	r3, r3, #1
  4002f2:	6303      	str	r3, [r0, #48]	; 0x30
  4002f4:	4770      	bx	lr
  4002f6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4002fa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002fc:	f043 0301 	orr.w	r3, r3, #1
  400300:	6303      	str	r3, [r0, #48]	; 0x30
  400302:	4770      	bx	lr

00400304 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400304:	b932      	cbnz	r2, 400314 <spi_set_clock_phase+0x10>
  400306:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  40030a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40030c:	f023 0302 	bic.w	r3, r3, #2
  400310:	6303      	str	r3, [r0, #48]	; 0x30
  400312:	4770      	bx	lr
  400314:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400318:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40031a:	f043 0302 	orr.w	r3, r3, #2
  40031e:	6303      	str	r3, [r0, #48]	; 0x30
  400320:	4770      	bx	lr

00400322 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  400322:	2a04      	cmp	r2, #4
  400324:	d003      	beq.n	40032e <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400326:	b16a      	cbz	r2, 400344 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400328:	2a08      	cmp	r2, #8
  40032a:	d016      	beq.n	40035a <spi_configure_cs_behavior+0x38>
  40032c:	4770      	bx	lr
  40032e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400332:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400334:	f023 0308 	bic.w	r3, r3, #8
  400338:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  40033a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40033c:	f043 0304 	orr.w	r3, r3, #4
  400340:	6303      	str	r3, [r0, #48]	; 0x30
  400342:	4770      	bx	lr
  400344:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400348:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40034a:	f023 0308 	bic.w	r3, r3, #8
  40034e:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  400350:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400352:	f023 0304 	bic.w	r3, r3, #4
  400356:	6303      	str	r3, [r0, #48]	; 0x30
  400358:	4770      	bx	lr
  40035a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40035e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400360:	f043 0308 	orr.w	r3, r3, #8
  400364:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  400366:	e7e1      	b.n	40032c <spi_configure_cs_behavior+0xa>

00400368 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400368:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40036c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40036e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400372:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400374:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400376:	431a      	orrs	r2, r3
  400378:	630a      	str	r2, [r1, #48]	; 0x30
  40037a:	4770      	bx	lr

0040037c <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40037c:	1e43      	subs	r3, r0, #1
  40037e:	4419      	add	r1, r3
  400380:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400384:	1e43      	subs	r3, r0, #1
  400386:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400388:	bf94      	ite	ls
  40038a:	b200      	sxthls	r0, r0
		return -1;
  40038c:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400390:	4770      	bx	lr

00400392 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400392:	b17a      	cbz	r2, 4003b4 <spi_set_baudrate_div+0x22>
{
  400394:	b410      	push	{r4}
  400396:	4614      	mov	r4, r2
  400398:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40039c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40039e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4003a2:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4003a4:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4003a6:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4003aa:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4003ac:	2000      	movs	r0, #0
}
  4003ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  4003b2:	4770      	bx	lr
        return -1;
  4003b4:	f04f 30ff 	mov.w	r0, #4294967295
  4003b8:	4770      	bx	lr

004003ba <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4003ba:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4003bc:	0189      	lsls	r1, r1, #6
  4003be:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4003c0:	2402      	movs	r4, #2
  4003c2:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4003c4:	f04f 31ff 	mov.w	r1, #4294967295
  4003c8:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  4003ca:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  4003cc:	605a      	str	r2, [r3, #4]
}
  4003ce:	f85d 4b04 	ldr.w	r4, [sp], #4
  4003d2:	4770      	bx	lr

004003d4 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4003d4:	0189      	lsls	r1, r1, #6
  4003d6:	2305      	movs	r3, #5
  4003d8:	5043      	str	r3, [r0, r1]
  4003da:	4770      	bx	lr

004003dc <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4003dc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4003e0:	61ca      	str	r2, [r1, #28]
  4003e2:	4770      	bx	lr

004003e4 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4003e4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  4003e8:	624a      	str	r2, [r1, #36]	; 0x24
  4003ea:	4770      	bx	lr

004003ec <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4003ec:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4003f0:	6a08      	ldr	r0, [r1, #32]
}
  4003f2:	4770      	bx	lr

004003f4 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4003f4:	b4f0      	push	{r4, r5, r6, r7}
  4003f6:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4003f8:	2402      	movs	r4, #2
  4003fa:	9401      	str	r4, [sp, #4]
  4003fc:	2408      	movs	r4, #8
  4003fe:	9402      	str	r4, [sp, #8]
  400400:	2420      	movs	r4, #32
  400402:	9403      	str	r4, [sp, #12]
  400404:	2480      	movs	r4, #128	; 0x80
  400406:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400408:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  40040a:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  40040c:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  40040e:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  400412:	d814      	bhi.n	40043e <tc_find_mck_divisor+0x4a>
  400414:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  400416:	42a0      	cmp	r0, r4
  400418:	d217      	bcs.n	40044a <tc_find_mck_divisor+0x56>
  40041a:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  40041c:	af01      	add	r7, sp, #4
  40041e:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  400422:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  400426:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400428:	4284      	cmp	r4, r0
  40042a:	d30a      	bcc.n	400442 <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  40042c:	4286      	cmp	r6, r0
  40042e:	d90d      	bls.n	40044c <tc_find_mck_divisor+0x58>
			ul_index++) {
  400430:	3501      	adds	r5, #1
	for (ul_index = 0;
  400432:	2d05      	cmp	r5, #5
  400434:	d1f3      	bne.n	40041e <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  400436:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400438:	b006      	add	sp, #24
  40043a:	bcf0      	pop	{r4, r5, r6, r7}
  40043c:	4770      	bx	lr
			return 0;
  40043e:	2000      	movs	r0, #0
  400440:	e7fa      	b.n	400438 <tc_find_mck_divisor+0x44>
  400442:	2000      	movs	r0, #0
  400444:	e7f8      	b.n	400438 <tc_find_mck_divisor+0x44>
	return 1;
  400446:	2001      	movs	r0, #1
  400448:	e7f6      	b.n	400438 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  40044a:	2500      	movs	r5, #0
	if (p_uldiv) {
  40044c:	b12a      	cbz	r2, 40045a <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  40044e:	a906      	add	r1, sp, #24
  400450:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400454:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400458:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  40045a:	2b00      	cmp	r3, #0
  40045c:	d0f3      	beq.n	400446 <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  40045e:	601d      	str	r5, [r3, #0]
	return 1;
  400460:	2001      	movs	r0, #1
  400462:	e7e9      	b.n	400438 <tc_find_mck_divisor+0x44>

00400464 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  400464:	4b01      	ldr	r3, [pc, #4]	; (40046c <gfx_mono_set_framebuffer+0x8>)
  400466:	6018      	str	r0, [r3, #0]
  400468:	4770      	bx	lr
  40046a:	bf00      	nop
  40046c:	204009f0 	.word	0x204009f0

00400470 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400470:	4b02      	ldr	r3, [pc, #8]	; (40047c <gfx_mono_framebuffer_put_byte+0xc>)
  400472:	681b      	ldr	r3, [r3, #0]
  400474:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  400478:	5442      	strb	r2, [r0, r1]
  40047a:	4770      	bx	lr
  40047c:	204009f0 	.word	0x204009f0

00400480 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400480:	4b02      	ldr	r3, [pc, #8]	; (40048c <gfx_mono_framebuffer_get_byte+0xc>)
  400482:	681b      	ldr	r3, [r3, #0]
  400484:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  400488:	5c40      	ldrb	r0, [r0, r1]
  40048a:	4770      	bx	lr
  40048c:	204009f0 	.word	0x204009f0

00400490 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400490:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400494:	1884      	adds	r4, r0, r2
  400496:	2c80      	cmp	r4, #128	; 0x80
  400498:	dd02      	ble.n	4004a0 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40049a:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  40049e:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4004a0:	b322      	cbz	r2, 4004ec <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4004a2:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4004a4:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  4004a8:	2601      	movs	r6, #1
  4004aa:	fa06 f101 	lsl.w	r1, r6, r1
  4004ae:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  4004b0:	2b01      	cmp	r3, #1
  4004b2:	d01d      	beq.n	4004f0 <gfx_mono_generic_draw_horizontal_line+0x60>
  4004b4:	2b00      	cmp	r3, #0
  4004b6:	d035      	beq.n	400524 <gfx_mono_generic_draw_horizontal_line+0x94>
  4004b8:	2b02      	cmp	r3, #2
  4004ba:	d117      	bne.n	4004ec <gfx_mono_generic_draw_horizontal_line+0x5c>
  4004bc:	3801      	subs	r0, #1
  4004be:	b2c7      	uxtb	r7, r0
  4004c0:	19d4      	adds	r4, r2, r7
  4004c2:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  4004c4:	f8df a090 	ldr.w	sl, [pc, #144]	; 400558 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  4004c8:	f04f 0900 	mov.w	r9, #0
  4004cc:	f8df 808c 	ldr.w	r8, [pc, #140]	; 40055c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4004d0:	4621      	mov	r1, r4
  4004d2:	4628      	mov	r0, r5
  4004d4:	47d0      	blx	sl
			temp ^= pixelmask;
  4004d6:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4004da:	464b      	mov	r3, r9
  4004dc:	b2d2      	uxtb	r2, r2
  4004de:	4621      	mov	r1, r4
  4004e0:	4628      	mov	r0, r5
  4004e2:	47c0      	blx	r8
  4004e4:	3c01      	subs	r4, #1
  4004e6:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4004e8:	42bc      	cmp	r4, r7
  4004ea:	d1f1      	bne.n	4004d0 <gfx_mono_generic_draw_horizontal_line+0x40>
  4004ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4004f0:	3801      	subs	r0, #1
  4004f2:	b2c7      	uxtb	r7, r0
  4004f4:	19d4      	adds	r4, r2, r7
  4004f6:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4004f8:	f8df a05c 	ldr.w	sl, [pc, #92]	; 400558 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  4004fc:	f04f 0900 	mov.w	r9, #0
  400500:	f8df 8058 	ldr.w	r8, [pc, #88]	; 40055c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400504:	4621      	mov	r1, r4
  400506:	4628      	mov	r0, r5
  400508:	47d0      	blx	sl
			temp |= pixelmask;
  40050a:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40050e:	464b      	mov	r3, r9
  400510:	b2d2      	uxtb	r2, r2
  400512:	4621      	mov	r1, r4
  400514:	4628      	mov	r0, r5
  400516:	47c0      	blx	r8
  400518:	3c01      	subs	r4, #1
  40051a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40051c:	42bc      	cmp	r4, r7
  40051e:	d1f1      	bne.n	400504 <gfx_mono_generic_draw_horizontal_line+0x74>
  400520:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400524:	3801      	subs	r0, #1
  400526:	b2c7      	uxtb	r7, r0
  400528:	19d4      	adds	r4, r2, r7
  40052a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40052c:	f8df 8028 	ldr.w	r8, [pc, #40]	; 400558 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400530:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  400532:	f8df 9028 	ldr.w	r9, [pc, #40]	; 40055c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400536:	4621      	mov	r1, r4
  400538:	4628      	mov	r0, r5
  40053a:	47c0      	blx	r8
			temp &= ~pixelmask;
  40053c:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400540:	2300      	movs	r3, #0
  400542:	b2d2      	uxtb	r2, r2
  400544:	4621      	mov	r1, r4
  400546:	4628      	mov	r0, r5
  400548:	47c8      	blx	r9
  40054a:	3c01      	subs	r4, #1
  40054c:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40054e:	42bc      	cmp	r4, r7
  400550:	d1f1      	bne.n	400536 <gfx_mono_generic_draw_horizontal_line+0xa6>
  400552:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400556:	bf00      	nop
  400558:	00400791 	.word	0x00400791
  40055c:	0040068d 	.word	0x0040068d

00400560 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400560:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400564:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  400568:	b18b      	cbz	r3, 40058e <gfx_mono_generic_draw_filled_rect+0x2e>
  40056a:	461c      	mov	r4, r3
  40056c:	4690      	mov	r8, r2
  40056e:	4606      	mov	r6, r0
  400570:	1e4d      	subs	r5, r1, #1
  400572:	b2ed      	uxtb	r5, r5
  400574:	442c      	add	r4, r5
  400576:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  400578:	f8df 9018 	ldr.w	r9, [pc, #24]	; 400594 <gfx_mono_generic_draw_filled_rect+0x34>
  40057c:	463b      	mov	r3, r7
  40057e:	4642      	mov	r2, r8
  400580:	4621      	mov	r1, r4
  400582:	4630      	mov	r0, r6
  400584:	47c8      	blx	r9
  400586:	3c01      	subs	r4, #1
  400588:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  40058a:	42ac      	cmp	r4, r5
  40058c:	d1f6      	bne.n	40057c <gfx_mono_generic_draw_filled_rect+0x1c>
  40058e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400592:	bf00      	nop
  400594:	00400491 	.word	0x00400491

00400598 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  400598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40059c:	b083      	sub	sp, #12
  40059e:	4604      	mov	r4, r0
  4005a0:	4688      	mov	r8, r1
  4005a2:	4691      	mov	r9, r2
  4005a4:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4005a6:	7a5b      	ldrb	r3, [r3, #9]
  4005a8:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4005ac:	2100      	movs	r1, #0
  4005ae:	9100      	str	r1, [sp, #0]
  4005b0:	4649      	mov	r1, r9
  4005b2:	4640      	mov	r0, r8
  4005b4:	4d21      	ldr	r5, [pc, #132]	; (40063c <gfx_mono_draw_char+0xa4>)
  4005b6:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  4005b8:	f89b 3000 	ldrb.w	r3, [fp]
  4005bc:	b113      	cbz	r3, 4005c4 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  4005be:	b003      	add	sp, #12
  4005c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  4005c4:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4005c8:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  4005ca:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  4005ce:	bf18      	it	ne
  4005d0:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  4005d2:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  4005d6:	f89b 700a 	ldrb.w	r7, [fp, #10]
  4005da:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  4005dc:	fb17 f70a 	smulbb	r7, r7, sl
  4005e0:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  4005e4:	f8db 3004 	ldr.w	r3, [fp, #4]
  4005e8:	fa13 f787 	uxtah	r7, r3, r7
  4005ec:	e01f      	b.n	40062e <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  4005ee:	0064      	lsls	r4, r4, #1
  4005f0:	b2e4      	uxtb	r4, r4
  4005f2:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  4005f4:	b2eb      	uxtb	r3, r5
  4005f6:	429e      	cmp	r6, r3
  4005f8:	d910      	bls.n	40061c <gfx_mono_draw_char+0x84>
  4005fa:	b2eb      	uxtb	r3, r5
  4005fc:	eb08 0003 	add.w	r0, r8, r3
  400600:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400602:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400606:	bf08      	it	eq
  400608:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  40060c:	f014 0f80 	tst.w	r4, #128	; 0x80
  400610:	d0ed      	beq.n	4005ee <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  400612:	2201      	movs	r2, #1
  400614:	4649      	mov	r1, r9
  400616:	4b0a      	ldr	r3, [pc, #40]	; (400640 <gfx_mono_draw_char+0xa8>)
  400618:	4798      	blx	r3
  40061a:	e7e8      	b.n	4005ee <gfx_mono_draw_char+0x56>
		inc_y += 1;
  40061c:	f109 0901 	add.w	r9, r9, #1
  400620:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400624:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400628:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  40062c:	d0c7      	beq.n	4005be <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40062e:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  400632:	2e00      	cmp	r6, #0
  400634:	d0f2      	beq.n	40061c <gfx_mono_draw_char+0x84>
  400636:	2500      	movs	r5, #0
  400638:	462c      	mov	r4, r5
  40063a:	e7de      	b.n	4005fa <gfx_mono_draw_char+0x62>
  40063c:	00400561 	.word	0x00400561
  400640:	0040072d 	.word	0x0040072d

00400644 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400644:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400648:	4604      	mov	r4, r0
  40064a:	4690      	mov	r8, r2
  40064c:	461d      	mov	r5, r3
  40064e:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  400650:	4f0d      	ldr	r7, [pc, #52]	; (400688 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  400652:	460e      	mov	r6, r1
  400654:	e008      	b.n	400668 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  400656:	7a6a      	ldrb	r2, [r5, #9]
  400658:	3201      	adds	r2, #1
  40065a:	4442      	add	r2, r8
  40065c:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  400660:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  400662:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  400666:	b16b      	cbz	r3, 400684 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  400668:	7820      	ldrb	r0, [r4, #0]
  40066a:	280a      	cmp	r0, #10
  40066c:	d0f3      	beq.n	400656 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  40066e:	280d      	cmp	r0, #13
  400670:	d0f7      	beq.n	400662 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  400672:	462b      	mov	r3, r5
  400674:	4642      	mov	r2, r8
  400676:	4649      	mov	r1, r9
  400678:	47b8      	blx	r7
			x += font->width;
  40067a:	7a2b      	ldrb	r3, [r5, #8]
  40067c:	4499      	add	r9, r3
  40067e:	fa5f f989 	uxtb.w	r9, r9
  400682:	e7ee      	b.n	400662 <gfx_mono_draw_string+0x1e>
}
  400684:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400688:	00400599 	.word	0x00400599

0040068c <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  40068c:	b570      	push	{r4, r5, r6, lr}
  40068e:	4604      	mov	r4, r0
  400690:	460d      	mov	r5, r1
  400692:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  400694:	b91b      	cbnz	r3, 40069e <gfx_mono_ssd1306_put_byte+0x12>
  400696:	4b0d      	ldr	r3, [pc, #52]	; (4006cc <gfx_mono_ssd1306_put_byte+0x40>)
  400698:	4798      	blx	r3
  40069a:	42b0      	cmp	r0, r6
  40069c:	d015      	beq.n	4006ca <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  40069e:	4632      	mov	r2, r6
  4006a0:	4629      	mov	r1, r5
  4006a2:	4620      	mov	r0, r4
  4006a4:	4b0a      	ldr	r3, [pc, #40]	; (4006d0 <gfx_mono_ssd1306_put_byte+0x44>)
  4006a6:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4006a8:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4006ac:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4006b0:	4c08      	ldr	r4, [pc, #32]	; (4006d4 <gfx_mono_ssd1306_put_byte+0x48>)
  4006b2:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  4006b4:	f3c5 1002 	ubfx	r0, r5, #4, #3
  4006b8:	f040 0010 	orr.w	r0, r0, #16
  4006bc:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  4006be:	f005 000f 	and.w	r0, r5, #15
  4006c2:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  4006c4:	4630      	mov	r0, r6
  4006c6:	4b04      	ldr	r3, [pc, #16]	; (4006d8 <gfx_mono_ssd1306_put_byte+0x4c>)
  4006c8:	4798      	blx	r3
  4006ca:	bd70      	pop	{r4, r5, r6, pc}
  4006cc:	00400481 	.word	0x00400481
  4006d0:	00400471 	.word	0x00400471
  4006d4:	0040079d 	.word	0x0040079d
  4006d8:	004009bd 	.word	0x004009bd

004006dc <gfx_mono_ssd1306_init>:
{
  4006dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  4006e0:	480d      	ldr	r0, [pc, #52]	; (400718 <gfx_mono_ssd1306_init+0x3c>)
  4006e2:	4b0e      	ldr	r3, [pc, #56]	; (40071c <gfx_mono_ssd1306_init+0x40>)
  4006e4:	4798      	blx	r3
	ssd1306_init();
  4006e6:	4b0e      	ldr	r3, [pc, #56]	; (400720 <gfx_mono_ssd1306_init+0x44>)
  4006e8:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  4006ea:	2040      	movs	r0, #64	; 0x40
  4006ec:	4b0d      	ldr	r3, [pc, #52]	; (400724 <gfx_mono_ssd1306_init+0x48>)
  4006ee:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4006f0:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4006f2:	f04f 0801 	mov.w	r8, #1
  4006f6:	462f      	mov	r7, r5
  4006f8:	4e0b      	ldr	r6, [pc, #44]	; (400728 <gfx_mono_ssd1306_init+0x4c>)
{
  4006fa:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4006fc:	4643      	mov	r3, r8
  4006fe:	463a      	mov	r2, r7
  400700:	b2e1      	uxtb	r1, r4
  400702:	4628      	mov	r0, r5
  400704:	47b0      	blx	r6
  400706:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400708:	2c80      	cmp	r4, #128	; 0x80
  40070a:	d1f7      	bne.n	4006fc <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  40070c:	3501      	adds	r5, #1
  40070e:	b2ed      	uxtb	r5, r5
  400710:	2d04      	cmp	r5, #4
  400712:	d1f2      	bne.n	4006fa <gfx_mono_ssd1306_init+0x1e>
  400714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400718:	204009f4 	.word	0x204009f4
  40071c:	00400465 	.word	0x00400465
  400720:	004007dd 	.word	0x004007dd
  400724:	0040079d 	.word	0x0040079d
  400728:	0040068d 	.word	0x0040068d

0040072c <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  40072c:	09c3      	lsrs	r3, r0, #7
  40072e:	d12a      	bne.n	400786 <gfx_mono_ssd1306_draw_pixel+0x5a>
  400730:	291f      	cmp	r1, #31
  400732:	d828      	bhi.n	400786 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400734:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400738:	4614      	mov	r4, r2
  40073a:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  40073c:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  40073e:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  400742:	2201      	movs	r2, #1
  400744:	fa02 f701 	lsl.w	r7, r2, r1
  400748:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  40074c:	4601      	mov	r1, r0
  40074e:	4630      	mov	r0, r6
  400750:	4b0d      	ldr	r3, [pc, #52]	; (400788 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  400752:	4798      	blx	r3
  400754:	4602      	mov	r2, r0
	switch (color) {
  400756:	2c01      	cmp	r4, #1
  400758:	d009      	beq.n	40076e <gfx_mono_ssd1306_draw_pixel+0x42>
  40075a:	b164      	cbz	r4, 400776 <gfx_mono_ssd1306_draw_pixel+0x4a>
  40075c:	2c02      	cmp	r4, #2
  40075e:	d00e      	beq.n	40077e <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  400760:	2300      	movs	r3, #0
  400762:	4629      	mov	r1, r5
  400764:	4630      	mov	r0, r6
  400766:	4c09      	ldr	r4, [pc, #36]	; (40078c <gfx_mono_ssd1306_draw_pixel+0x60>)
  400768:	47a0      	blx	r4
  40076a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  40076e:	ea48 0200 	orr.w	r2, r8, r0
  400772:	b2d2      	uxtb	r2, r2
		break;
  400774:	e7f4      	b.n	400760 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  400776:	ea20 0207 	bic.w	r2, r0, r7
  40077a:	b2d2      	uxtb	r2, r2
		break;
  40077c:	e7f0      	b.n	400760 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  40077e:	ea88 0200 	eor.w	r2, r8, r0
  400782:	b2d2      	uxtb	r2, r2
		break;
  400784:	e7ec      	b.n	400760 <gfx_mono_ssd1306_draw_pixel+0x34>
  400786:	4770      	bx	lr
  400788:	00400481 	.word	0x00400481
  40078c:	0040068d 	.word	0x0040068d

00400790 <gfx_mono_ssd1306_get_byte>:
{
  400790:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  400792:	4b01      	ldr	r3, [pc, #4]	; (400798 <gfx_mono_ssd1306_get_byte+0x8>)
  400794:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  400796:	bd08      	pop	{r3, pc}
  400798:	00400481 	.word	0x00400481

0040079c <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  40079c:	b538      	push	{r3, r4, r5, lr}
  40079e:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4007a0:	2208      	movs	r2, #8
  4007a2:	4b09      	ldr	r3, [pc, #36]	; (4007c8 <ssd1306_write_command+0x2c>)
  4007a4:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4007a6:	4c09      	ldr	r4, [pc, #36]	; (4007cc <ssd1306_write_command+0x30>)
  4007a8:	2101      	movs	r1, #1
  4007aa:	4620      	mov	r0, r4
  4007ac:	4b08      	ldr	r3, [pc, #32]	; (4007d0 <ssd1306_write_command+0x34>)
  4007ae:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  4007b0:	2301      	movs	r3, #1
  4007b2:	461a      	mov	r2, r3
  4007b4:	4629      	mov	r1, r5
  4007b6:	4620      	mov	r0, r4
  4007b8:	4c06      	ldr	r4, [pc, #24]	; (4007d4 <ssd1306_write_command+0x38>)
  4007ba:	47a0      	blx	r4
	delay_us(10);
  4007bc:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4007c0:	4b05      	ldr	r3, [pc, #20]	; (4007d8 <ssd1306_write_command+0x3c>)
  4007c2:	4798      	blx	r3
  4007c4:	bd38      	pop	{r3, r4, r5, pc}
  4007c6:	bf00      	nop
  4007c8:	400e1000 	.word	0x400e1000
  4007cc:	40008000 	.word	0x40008000
  4007d0:	0040029d 	.word	0x0040029d
  4007d4:	004002b3 	.word	0x004002b3
  4007d8:	20400001 	.word	0x20400001

004007dc <ssd1306_init>:
{
  4007dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4007e0:	4d66      	ldr	r5, [pc, #408]	; (40097c <ssd1306_init+0x1a0>)
  4007e2:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  4007e6:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4007e8:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4007ec:	4b64      	ldr	r3, [pc, #400]	; (400980 <ssd1306_init+0x1a4>)
  4007ee:	2708      	movs	r7, #8
  4007f0:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4007f2:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4007f6:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4007f8:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  4007fc:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  4007fe:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400800:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400804:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400806:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40080a:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40080c:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  40080e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400812:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400814:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400816:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40081a:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40081c:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40081e:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400822:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400824:	f022 0208 	bic.w	r2, r2, #8
  400828:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40082a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40082c:	f022 0208 	bic.w	r2, r2, #8
  400830:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  400832:	601f      	str	r7, [r3, #0]
  400834:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400836:	631f      	str	r7, [r3, #48]	; 0x30
  400838:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40083a:	f8df 817c 	ldr.w	r8, [pc, #380]	; 4009b8 <ssd1306_init+0x1dc>
  40083e:	2300      	movs	r3, #0
  400840:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400844:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400848:	4640      	mov	r0, r8
  40084a:	4c4e      	ldr	r4, [pc, #312]	; (400984 <ssd1306_init+0x1a8>)
  40084c:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40084e:	2300      	movs	r3, #0
  400850:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400854:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400858:	4640      	mov	r0, r8
  40085a:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  40085c:	2300      	movs	r3, #0
  40085e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400862:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400866:	4640      	mov	r0, r8
  400868:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40086a:	2300      	movs	r3, #0
  40086c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400870:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400874:	4640      	mov	r0, r8
  400876:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400878:	2300      	movs	r3, #0
  40087a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  40087e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400882:	4640      	mov	r0, r8
  400884:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400886:	2300      	movs	r3, #0
  400888:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  40088c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400890:	4640      	mov	r0, r8
  400892:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400894:	4c3c      	ldr	r4, [pc, #240]	; (400988 <ssd1306_init+0x1ac>)
  400896:	f04f 0902 	mov.w	r9, #2
  40089a:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  40089e:	f04f 0880 	mov.w	r8, #128	; 0x80
  4008a2:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4008a6:	6863      	ldr	r3, [r4, #4]
  4008a8:	f043 0301 	orr.w	r3, r3, #1
  4008ac:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  4008ae:	463a      	mov	r2, r7
  4008b0:	2101      	movs	r1, #1
  4008b2:	4620      	mov	r0, r4
  4008b4:	4b35      	ldr	r3, [pc, #212]	; (40098c <ssd1306_init+0x1b0>)
  4008b6:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  4008b8:	2200      	movs	r2, #0
  4008ba:	2101      	movs	r1, #1
  4008bc:	4620      	mov	r0, r4
  4008be:	4b34      	ldr	r3, [pc, #208]	; (400990 <ssd1306_init+0x1b4>)
  4008c0:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  4008c2:	2200      	movs	r2, #0
  4008c4:	2101      	movs	r1, #1
  4008c6:	4620      	mov	r0, r4
  4008c8:	4b32      	ldr	r3, [pc, #200]	; (400994 <ssd1306_init+0x1b8>)
  4008ca:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  4008cc:	6863      	ldr	r3, [r4, #4]
  4008ce:	f023 0302 	bic.w	r3, r3, #2
  4008d2:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  4008d4:	2200      	movs	r2, #0
  4008d6:	2101      	movs	r1, #1
  4008d8:	4620      	mov	r0, r4
  4008da:	4b2f      	ldr	r3, [pc, #188]	; (400998 <ssd1306_init+0x1bc>)
  4008dc:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  4008de:	6863      	ldr	r3, [r4, #4]
  4008e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4008e4:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4008e6:	6863      	ldr	r3, [r4, #4]
  4008e8:	f043 0310 	orr.w	r3, r3, #16
  4008ec:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  4008ee:	492b      	ldr	r1, [pc, #172]	; (40099c <ssd1306_init+0x1c0>)
  4008f0:	482b      	ldr	r0, [pc, #172]	; (4009a0 <ssd1306_init+0x1c4>)
  4008f2:	4b2c      	ldr	r3, [pc, #176]	; (4009a4 <ssd1306_init+0x1c8>)
  4008f4:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  4008f6:	b2c2      	uxtb	r2, r0
  4008f8:	2101      	movs	r1, #1
  4008fa:	4620      	mov	r0, r4
  4008fc:	4b2a      	ldr	r3, [pc, #168]	; (4009a8 <ssd1306_init+0x1cc>)
  4008fe:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400900:	4620      	mov	r0, r4
  400902:	4b2a      	ldr	r3, [pc, #168]	; (4009ac <ssd1306_init+0x1d0>)
  400904:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400906:	2301      	movs	r3, #1
  400908:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40090a:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  40090c:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400910:	4c27      	ldr	r4, [pc, #156]	; (4009b0 <ssd1306_init+0x1d4>)
  400912:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400914:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400916:	f640 30b8 	movw	r0, #3000	; 0xbb8
  40091a:	47a0      	blx	r4
  40091c:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  40091e:	20a8      	movs	r0, #168	; 0xa8
  400920:	4c24      	ldr	r4, [pc, #144]	; (4009b4 <ssd1306_init+0x1d8>)
  400922:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400924:	201f      	movs	r0, #31
  400926:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400928:	20d3      	movs	r0, #211	; 0xd3
  40092a:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  40092c:	2000      	movs	r0, #0
  40092e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400930:	2040      	movs	r0, #64	; 0x40
  400932:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400934:	20a1      	movs	r0, #161	; 0xa1
  400936:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400938:	20c8      	movs	r0, #200	; 0xc8
  40093a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  40093c:	20da      	movs	r0, #218	; 0xda
  40093e:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400940:	4648      	mov	r0, r9
  400942:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400944:	2081      	movs	r0, #129	; 0x81
  400946:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400948:	208f      	movs	r0, #143	; 0x8f
  40094a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  40094c:	20a4      	movs	r0, #164	; 0xa4
  40094e:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400950:	20a6      	movs	r0, #166	; 0xa6
  400952:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400954:	20d5      	movs	r0, #213	; 0xd5
  400956:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400958:	4640      	mov	r0, r8
  40095a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  40095c:	208d      	movs	r0, #141	; 0x8d
  40095e:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400960:	2014      	movs	r0, #20
  400962:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400964:	20db      	movs	r0, #219	; 0xdb
  400966:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400968:	2040      	movs	r0, #64	; 0x40
  40096a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  40096c:	20d9      	movs	r0, #217	; 0xd9
  40096e:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400970:	20f1      	movs	r0, #241	; 0xf1
  400972:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400974:	20af      	movs	r0, #175	; 0xaf
  400976:	47a0      	blx	r4
  400978:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40097c:	400e1200 	.word	0x400e1200
  400980:	400e1000 	.word	0x400e1000
  400984:	00400cc1 	.word	0x00400cc1
  400988:	40008000 	.word	0x40008000
  40098c:	00400323 	.word	0x00400323
  400990:	004002e7 	.word	0x004002e7
  400994:	00400305 	.word	0x00400305
  400998:	00400369 	.word	0x00400369
  40099c:	08f0d180 	.word	0x08f0d180
  4009a0:	001e8480 	.word	0x001e8480
  4009a4:	0040037d 	.word	0x0040037d
  4009a8:	00400393 	.word	0x00400393
  4009ac:	00400271 	.word	0x00400271
  4009b0:	20400001 	.word	0x20400001
  4009b4:	0040079d 	.word	0x0040079d
  4009b8:	400e1400 	.word	0x400e1400

004009bc <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  4009bc:	b538      	push	{r3, r4, r5, lr}
  4009be:	4605      	mov	r5, r0
  4009c0:	2208      	movs	r2, #8
  4009c2:	4b09      	ldr	r3, [pc, #36]	; (4009e8 <ssd1306_write_data+0x2c>)
  4009c4:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4009c6:	4c09      	ldr	r4, [pc, #36]	; (4009ec <ssd1306_write_data+0x30>)
  4009c8:	2101      	movs	r1, #1
  4009ca:	4620      	mov	r0, r4
  4009cc:	4b08      	ldr	r3, [pc, #32]	; (4009f0 <ssd1306_write_data+0x34>)
  4009ce:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  4009d0:	2301      	movs	r3, #1
  4009d2:	461a      	mov	r2, r3
  4009d4:	4629      	mov	r1, r5
  4009d6:	4620      	mov	r0, r4
  4009d8:	4c06      	ldr	r4, [pc, #24]	; (4009f4 <ssd1306_write_data+0x38>)
  4009da:	47a0      	blx	r4
	delay_us(10);
  4009dc:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4009e0:	4b05      	ldr	r3, [pc, #20]	; (4009f8 <ssd1306_write_data+0x3c>)
  4009e2:	4798      	blx	r3
  4009e4:	bd38      	pop	{r3, r4, r5, pc}
  4009e6:	bf00      	nop
  4009e8:	400e1000 	.word	0x400e1000
  4009ec:	40008000 	.word	0x40008000
  4009f0:	0040029d 	.word	0x0040029d
  4009f4:	004002b3 	.word	0x004002b3
  4009f8:	20400001 	.word	0x20400001

004009fc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4009fc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4009fe:	4810      	ldr	r0, [pc, #64]	; (400a40 <sysclk_init+0x44>)
  400a00:	4b10      	ldr	r3, [pc, #64]	; (400a44 <sysclk_init+0x48>)
  400a02:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400a04:	213e      	movs	r1, #62	; 0x3e
  400a06:	2000      	movs	r0, #0
  400a08:	4b0f      	ldr	r3, [pc, #60]	; (400a48 <sysclk_init+0x4c>)
  400a0a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400a0c:	4c0f      	ldr	r4, [pc, #60]	; (400a4c <sysclk_init+0x50>)
  400a0e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400a10:	2800      	cmp	r0, #0
  400a12:	d0fc      	beq.n	400a0e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400a14:	4b0e      	ldr	r3, [pc, #56]	; (400a50 <sysclk_init+0x54>)
  400a16:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400a18:	4a0e      	ldr	r2, [pc, #56]	; (400a54 <sysclk_init+0x58>)
  400a1a:	4b0f      	ldr	r3, [pc, #60]	; (400a58 <sysclk_init+0x5c>)
  400a1c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400a1e:	4c0f      	ldr	r4, [pc, #60]	; (400a5c <sysclk_init+0x60>)
  400a20:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400a22:	2800      	cmp	r0, #0
  400a24:	d0fc      	beq.n	400a20 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400a26:	2002      	movs	r0, #2
  400a28:	4b0d      	ldr	r3, [pc, #52]	; (400a60 <sysclk_init+0x64>)
  400a2a:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400a2c:	2000      	movs	r0, #0
  400a2e:	4b0d      	ldr	r3, [pc, #52]	; (400a64 <sysclk_init+0x68>)
  400a30:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400a32:	4b0d      	ldr	r3, [pc, #52]	; (400a68 <sysclk_init+0x6c>)
  400a34:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400a36:	4802      	ldr	r0, [pc, #8]	; (400a40 <sysclk_init+0x44>)
  400a38:	4b02      	ldr	r3, [pc, #8]	; (400a44 <sysclk_init+0x48>)
  400a3a:	4798      	blx	r3
  400a3c:	bd10      	pop	{r4, pc}
  400a3e:	bf00      	nop
  400a40:	11e1a300 	.word	0x11e1a300
  400a44:	004014d1 	.word	0x004014d1
  400a48:	00400f5d 	.word	0x00400f5d
  400a4c:	00400fb1 	.word	0x00400fb1
  400a50:	00400fc1 	.word	0x00400fc1
  400a54:	20183f01 	.word	0x20183f01
  400a58:	400e0600 	.word	0x400e0600
  400a5c:	00400fd1 	.word	0x00400fd1
  400a60:	00400ec1 	.word	0x00400ec1
  400a64:	00400ef9 	.word	0x00400ef9
  400a68:	004013c5 	.word	0x004013c5

00400a6c <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400a6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400a6e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400a72:	4b48      	ldr	r3, [pc, #288]	; (400b94 <board_init+0x128>)
  400a74:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400a76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a7a:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400a7e:	4b46      	ldr	r3, [pc, #280]	; (400b98 <board_init+0x12c>)
  400a80:	2200      	movs	r2, #0
  400a82:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400a86:	695a      	ldr	r2, [r3, #20]
  400a88:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400a8c:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400a8e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a92:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400a96:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400a9a:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400a9e:	f007 0007 	and.w	r0, r7, #7
  400aa2:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400aa4:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400aa8:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400aac:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400ab0:	f3bf 8f4f 	dsb	sy
  400ab4:	f04f 34ff 	mov.w	r4, #4294967295
  400ab8:	fa04 fc00 	lsl.w	ip, r4, r0
  400abc:	fa06 f000 	lsl.w	r0, r6, r0
  400ac0:	fa04 f40e 	lsl.w	r4, r4, lr
  400ac4:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400ac8:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400aca:	463a      	mov	r2, r7
  400acc:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400ace:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400ad2:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400ad6:	3a01      	subs	r2, #1
  400ad8:	4423      	add	r3, r4
  400ada:	f1b2 3fff 	cmp.w	r2, #4294967295
  400ade:	d1f6      	bne.n	400ace <board_init+0x62>
        } while(sets--);
  400ae0:	3e01      	subs	r6, #1
  400ae2:	4460      	add	r0, ip
  400ae4:	f1b6 3fff 	cmp.w	r6, #4294967295
  400ae8:	d1ef      	bne.n	400aca <board_init+0x5e>
  400aea:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400aee:	4b2a      	ldr	r3, [pc, #168]	; (400b98 <board_init+0x12c>)
  400af0:	695a      	ldr	r2, [r3, #20]
  400af2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400af6:	615a      	str	r2, [r3, #20]
  400af8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400afc:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b00:	4a26      	ldr	r2, [pc, #152]	; (400b9c <board_init+0x130>)
  400b02:	4927      	ldr	r1, [pc, #156]	; (400ba0 <board_init+0x134>)
  400b04:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b06:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400b0a:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400b0c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b10:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400b14:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400b18:	f022 0201 	bic.w	r2, r2, #1
  400b1c:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400b20:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400b24:	f022 0201 	bic.w	r2, r2, #1
  400b28:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400b2c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b30:	f3bf 8f6f 	isb	sy
  400b34:	200a      	movs	r0, #10
  400b36:	4c1b      	ldr	r4, [pc, #108]	; (400ba4 <board_init+0x138>)
  400b38:	47a0      	blx	r4
  400b3a:	200b      	movs	r0, #11
  400b3c:	47a0      	blx	r4
  400b3e:	200c      	movs	r0, #12
  400b40:	47a0      	blx	r4
  400b42:	2010      	movs	r0, #16
  400b44:	47a0      	blx	r4
  400b46:	2011      	movs	r0, #17
  400b48:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400b4a:	4b17      	ldr	r3, [pc, #92]	; (400ba8 <board_init+0x13c>)
  400b4c:	f44f 7280 	mov.w	r2, #256	; 0x100
  400b50:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400b52:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400b56:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400b58:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400b5c:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400b60:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400b62:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400b66:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400b68:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b6c:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400b6e:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400b70:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400b74:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400b76:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400b7a:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400b7c:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400b7e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400b82:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400b84:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400b88:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400b8c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400b90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400b92:	bf00      	nop
  400b94:	400e1850 	.word	0x400e1850
  400b98:	e000ed00 	.word	0xe000ed00
  400b9c:	400e0c00 	.word	0x400e0c00
  400ba0:	5a00080c 	.word	0x5a00080c
  400ba4:	00400fe1 	.word	0x00400fe1
  400ba8:	400e1200 	.word	0x400e1200

00400bac <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400bac:	6301      	str	r1, [r0, #48]	; 0x30
  400bae:	4770      	bx	lr

00400bb0 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400bb0:	6341      	str	r1, [r0, #52]	; 0x34
  400bb2:	4770      	bx	lr

00400bb4 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400bb4:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400bb8:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400bbc:	d105      	bne.n	400bca <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400bbe:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400bc0:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400bc2:	bf14      	ite	ne
  400bc4:	2001      	movne	r0, #1
  400bc6:	2000      	moveq	r0, #0
  400bc8:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400bca:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400bcc:	e7f8      	b.n	400bc0 <pio_get+0xc>

00400bce <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400bce:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400bd0:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400bd4:	d03a      	beq.n	400c4c <pio_set_peripheral+0x7e>
  400bd6:	d813      	bhi.n	400c00 <pio_set_peripheral+0x32>
  400bd8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400bdc:	d025      	beq.n	400c2a <pio_set_peripheral+0x5c>
  400bde:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400be2:	d10a      	bne.n	400bfa <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400be4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400be6:	4313      	orrs	r3, r2
  400be8:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400bea:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400bec:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400bee:	400b      	ands	r3, r1
  400bf0:	ea23 0302 	bic.w	r3, r3, r2
  400bf4:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400bf6:	6042      	str	r2, [r0, #4]
  400bf8:	4770      	bx	lr
	switch (ul_type) {
  400bfa:	2900      	cmp	r1, #0
  400bfc:	d1fb      	bne.n	400bf6 <pio_set_peripheral+0x28>
  400bfe:	4770      	bx	lr
  400c00:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400c04:	d021      	beq.n	400c4a <pio_set_peripheral+0x7c>
  400c06:	d809      	bhi.n	400c1c <pio_set_peripheral+0x4e>
  400c08:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c0c:	d1f3      	bne.n	400bf6 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c0e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c10:	4313      	orrs	r3, r2
  400c12:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c14:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c16:	4313      	orrs	r3, r2
  400c18:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c1a:	e7ec      	b.n	400bf6 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400c1c:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c20:	d013      	beq.n	400c4a <pio_set_peripheral+0x7c>
  400c22:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c26:	d010      	beq.n	400c4a <pio_set_peripheral+0x7c>
  400c28:	e7e5      	b.n	400bf6 <pio_set_peripheral+0x28>
{
  400c2a:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c2c:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c2e:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400c30:	43d3      	mvns	r3, r2
  400c32:	4021      	ands	r1, r4
  400c34:	461c      	mov	r4, r3
  400c36:	4019      	ands	r1, r3
  400c38:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c3a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c3c:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c3e:	400b      	ands	r3, r1
  400c40:	4023      	ands	r3, r4
  400c42:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400c44:	6042      	str	r2, [r0, #4]
}
  400c46:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c4a:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c4c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c4e:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400c50:	400b      	ands	r3, r1
  400c52:	ea23 0302 	bic.w	r3, r3, r2
  400c56:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c58:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c5a:	4313      	orrs	r3, r2
  400c5c:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c5e:	e7ca      	b.n	400bf6 <pio_set_peripheral+0x28>

00400c60 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400c60:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c62:	f012 0f01 	tst.w	r2, #1
  400c66:	d10d      	bne.n	400c84 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400c68:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400c6a:	f012 0f0a 	tst.w	r2, #10
  400c6e:	d00b      	beq.n	400c88 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400c70:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400c72:	f012 0f02 	tst.w	r2, #2
  400c76:	d109      	bne.n	400c8c <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400c78:	f012 0f08 	tst.w	r2, #8
  400c7c:	d008      	beq.n	400c90 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400c7e:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400c82:	e005      	b.n	400c90 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400c84:	6641      	str	r1, [r0, #100]	; 0x64
  400c86:	e7f0      	b.n	400c6a <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400c88:	6241      	str	r1, [r0, #36]	; 0x24
  400c8a:	e7f2      	b.n	400c72 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400c8c:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400c90:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400c92:	6001      	str	r1, [r0, #0]
  400c94:	4770      	bx	lr

00400c96 <pio_set_output>:
{
  400c96:	b410      	push	{r4}
  400c98:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400c9a:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400c9c:	b94c      	cbnz	r4, 400cb2 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400c9e:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400ca0:	b14b      	cbz	r3, 400cb6 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400ca2:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400ca4:	b94a      	cbnz	r2, 400cba <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400ca6:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400ca8:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400caa:	6001      	str	r1, [r0, #0]
}
  400cac:	f85d 4b04 	ldr.w	r4, [sp], #4
  400cb0:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400cb2:	6641      	str	r1, [r0, #100]	; 0x64
  400cb4:	e7f4      	b.n	400ca0 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400cb6:	6541      	str	r1, [r0, #84]	; 0x54
  400cb8:	e7f4      	b.n	400ca4 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400cba:	6301      	str	r1, [r0, #48]	; 0x30
  400cbc:	e7f4      	b.n	400ca8 <pio_set_output+0x12>
	...

00400cc0 <pio_configure>:
{
  400cc0:	b570      	push	{r4, r5, r6, lr}
  400cc2:	b082      	sub	sp, #8
  400cc4:	4605      	mov	r5, r0
  400cc6:	4616      	mov	r6, r2
  400cc8:	461c      	mov	r4, r3
	switch (ul_type) {
  400cca:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400cce:	d014      	beq.n	400cfa <pio_configure+0x3a>
  400cd0:	d90a      	bls.n	400ce8 <pio_configure+0x28>
  400cd2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400cd6:	d024      	beq.n	400d22 <pio_configure+0x62>
  400cd8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400cdc:	d021      	beq.n	400d22 <pio_configure+0x62>
  400cde:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400ce2:	d017      	beq.n	400d14 <pio_configure+0x54>
		return 0;
  400ce4:	2000      	movs	r0, #0
  400ce6:	e01a      	b.n	400d1e <pio_configure+0x5e>
	switch (ul_type) {
  400ce8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400cec:	d005      	beq.n	400cfa <pio_configure+0x3a>
  400cee:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400cf2:	d002      	beq.n	400cfa <pio_configure+0x3a>
  400cf4:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400cf8:	d1f4      	bne.n	400ce4 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400cfa:	4632      	mov	r2, r6
  400cfc:	4628      	mov	r0, r5
  400cfe:	4b11      	ldr	r3, [pc, #68]	; (400d44 <pio_configure+0x84>)
  400d00:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d02:	f014 0f01 	tst.w	r4, #1
  400d06:	d102      	bne.n	400d0e <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400d08:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400d0a:	2001      	movs	r0, #1
  400d0c:	e007      	b.n	400d1e <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400d0e:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400d10:	2001      	movs	r0, #1
  400d12:	e004      	b.n	400d1e <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400d14:	461a      	mov	r2, r3
  400d16:	4631      	mov	r1, r6
  400d18:	4b0b      	ldr	r3, [pc, #44]	; (400d48 <pio_configure+0x88>)
  400d1a:	4798      	blx	r3
	return 1;
  400d1c:	2001      	movs	r0, #1
}
  400d1e:	b002      	add	sp, #8
  400d20:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400d22:	f004 0301 	and.w	r3, r4, #1
  400d26:	9300      	str	r3, [sp, #0]
  400d28:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400d2c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d30:	bf14      	ite	ne
  400d32:	2200      	movne	r2, #0
  400d34:	2201      	moveq	r2, #1
  400d36:	4631      	mov	r1, r6
  400d38:	4628      	mov	r0, r5
  400d3a:	4c04      	ldr	r4, [pc, #16]	; (400d4c <pio_configure+0x8c>)
  400d3c:	47a0      	blx	r4
	return 1;
  400d3e:	2001      	movs	r0, #1
		break;
  400d40:	e7ed      	b.n	400d1e <pio_configure+0x5e>
  400d42:	bf00      	nop
  400d44:	00400bcf 	.word	0x00400bcf
  400d48:	00400c61 	.word	0x00400c61
  400d4c:	00400c97 	.word	0x00400c97

00400d50 <pio_get_output_data_status>:
	if ((p_pio->PIO_ODSR & ul_mask) == 0) {
  400d50:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400d52:	420b      	tst	r3, r1
}
  400d54:	bf14      	ite	ne
  400d56:	2001      	movne	r0, #1
  400d58:	2000      	moveq	r0, #0
  400d5a:	4770      	bx	lr

00400d5c <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400d5c:	f012 0f10 	tst.w	r2, #16
  400d60:	d012      	beq.n	400d88 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400d62:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400d66:	f012 0f20 	tst.w	r2, #32
  400d6a:	d007      	beq.n	400d7c <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400d6c:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400d70:	f012 0f40 	tst.w	r2, #64	; 0x40
  400d74:	d005      	beq.n	400d82 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400d76:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400d7a:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400d7c:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400d80:	e7f6      	b.n	400d70 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400d82:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400d86:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400d88:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400d8c:	4770      	bx	lr

00400d8e <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400d8e:	6401      	str	r1, [r0, #64]	; 0x40
  400d90:	4770      	bx	lr

00400d92 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400d92:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400d94:	4770      	bx	lr

00400d96 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400d96:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400d98:	4770      	bx	lr
	...

00400d9c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400da0:	4604      	mov	r4, r0
  400da2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400da4:	4b0e      	ldr	r3, [pc, #56]	; (400de0 <pio_handler_process+0x44>)
  400da6:	4798      	blx	r3
  400da8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400daa:	4620      	mov	r0, r4
  400dac:	4b0d      	ldr	r3, [pc, #52]	; (400de4 <pio_handler_process+0x48>)
  400dae:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400db0:	4005      	ands	r5, r0
  400db2:	d013      	beq.n	400ddc <pio_handler_process+0x40>
  400db4:	4c0c      	ldr	r4, [pc, #48]	; (400de8 <pio_handler_process+0x4c>)
  400db6:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400dba:	e003      	b.n	400dc4 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400dbc:	42b4      	cmp	r4, r6
  400dbe:	d00d      	beq.n	400ddc <pio_handler_process+0x40>
  400dc0:	3410      	adds	r4, #16
		while (status != 0) {
  400dc2:	b15d      	cbz	r5, 400ddc <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400dc4:	6820      	ldr	r0, [r4, #0]
  400dc6:	4540      	cmp	r0, r8
  400dc8:	d1f8      	bne.n	400dbc <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400dca:	6861      	ldr	r1, [r4, #4]
  400dcc:	4229      	tst	r1, r5
  400dce:	d0f5      	beq.n	400dbc <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400dd0:	68e3      	ldr	r3, [r4, #12]
  400dd2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400dd4:	6863      	ldr	r3, [r4, #4]
  400dd6:	ea25 0503 	bic.w	r5, r5, r3
  400dda:	e7ef      	b.n	400dbc <pio_handler_process+0x20>
  400ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400de0:	00400d93 	.word	0x00400d93
  400de4:	00400d97 	.word	0x00400d97
  400de8:	20400bf4 	.word	0x20400bf4

00400dec <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400dee:	4c18      	ldr	r4, [pc, #96]	; (400e50 <pio_handler_set+0x64>)
  400df0:	6826      	ldr	r6, [r4, #0]
  400df2:	2e06      	cmp	r6, #6
  400df4:	d82a      	bhi.n	400e4c <pio_handler_set+0x60>
  400df6:	f04f 0c00 	mov.w	ip, #0
  400dfa:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400dfc:	4f15      	ldr	r7, [pc, #84]	; (400e54 <pio_handler_set+0x68>)
  400dfe:	e004      	b.n	400e0a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400e00:	3401      	adds	r4, #1
  400e02:	b2e4      	uxtb	r4, r4
  400e04:	46a4      	mov	ip, r4
  400e06:	42a6      	cmp	r6, r4
  400e08:	d309      	bcc.n	400e1e <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400e0a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e0c:	0125      	lsls	r5, r4, #4
  400e0e:	597d      	ldr	r5, [r7, r5]
  400e10:	428d      	cmp	r5, r1
  400e12:	d1f5      	bne.n	400e00 <pio_handler_set+0x14>
  400e14:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400e18:	686d      	ldr	r5, [r5, #4]
  400e1a:	4295      	cmp	r5, r2
  400e1c:	d1f0      	bne.n	400e00 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400e1e:	4d0d      	ldr	r5, [pc, #52]	; (400e54 <pio_handler_set+0x68>)
  400e20:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400e24:	eb05 040e 	add.w	r4, r5, lr
  400e28:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400e2c:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400e2e:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400e30:	9906      	ldr	r1, [sp, #24]
  400e32:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400e34:	3601      	adds	r6, #1
  400e36:	4566      	cmp	r6, ip
  400e38:	d005      	beq.n	400e46 <pio_handler_set+0x5a>
  400e3a:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400e3c:	461a      	mov	r2, r3
  400e3e:	4b06      	ldr	r3, [pc, #24]	; (400e58 <pio_handler_set+0x6c>)
  400e40:	4798      	blx	r3

	return 0;
  400e42:	2000      	movs	r0, #0
  400e44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400e46:	4902      	ldr	r1, [pc, #8]	; (400e50 <pio_handler_set+0x64>)
  400e48:	600e      	str	r6, [r1, #0]
  400e4a:	e7f6      	b.n	400e3a <pio_handler_set+0x4e>
		return 1;
  400e4c:	2001      	movs	r0, #1
}
  400e4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400e50:	20400c64 	.word	0x20400c64
  400e54:	20400bf4 	.word	0x20400bf4
  400e58:	00400d5d 	.word	0x00400d5d

00400e5c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400e5c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400e5e:	210a      	movs	r1, #10
  400e60:	4801      	ldr	r0, [pc, #4]	; (400e68 <PIOA_Handler+0xc>)
  400e62:	4b02      	ldr	r3, [pc, #8]	; (400e6c <PIOA_Handler+0x10>)
  400e64:	4798      	blx	r3
  400e66:	bd08      	pop	{r3, pc}
  400e68:	400e0e00 	.word	0x400e0e00
  400e6c:	00400d9d 	.word	0x00400d9d

00400e70 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400e70:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400e72:	210b      	movs	r1, #11
  400e74:	4801      	ldr	r0, [pc, #4]	; (400e7c <PIOB_Handler+0xc>)
  400e76:	4b02      	ldr	r3, [pc, #8]	; (400e80 <PIOB_Handler+0x10>)
  400e78:	4798      	blx	r3
  400e7a:	bd08      	pop	{r3, pc}
  400e7c:	400e1000 	.word	0x400e1000
  400e80:	00400d9d 	.word	0x00400d9d

00400e84 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400e84:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400e86:	210c      	movs	r1, #12
  400e88:	4801      	ldr	r0, [pc, #4]	; (400e90 <PIOC_Handler+0xc>)
  400e8a:	4b02      	ldr	r3, [pc, #8]	; (400e94 <PIOC_Handler+0x10>)
  400e8c:	4798      	blx	r3
  400e8e:	bd08      	pop	{r3, pc}
  400e90:	400e1200 	.word	0x400e1200
  400e94:	00400d9d 	.word	0x00400d9d

00400e98 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400e98:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400e9a:	2110      	movs	r1, #16
  400e9c:	4801      	ldr	r0, [pc, #4]	; (400ea4 <PIOD_Handler+0xc>)
  400e9e:	4b02      	ldr	r3, [pc, #8]	; (400ea8 <PIOD_Handler+0x10>)
  400ea0:	4798      	blx	r3
  400ea2:	bd08      	pop	{r3, pc}
  400ea4:	400e1400 	.word	0x400e1400
  400ea8:	00400d9d 	.word	0x00400d9d

00400eac <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400eac:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400eae:	2111      	movs	r1, #17
  400eb0:	4801      	ldr	r0, [pc, #4]	; (400eb8 <PIOE_Handler+0xc>)
  400eb2:	4b02      	ldr	r3, [pc, #8]	; (400ebc <PIOE_Handler+0x10>)
  400eb4:	4798      	blx	r3
  400eb6:	bd08      	pop	{r3, pc}
  400eb8:	400e1600 	.word	0x400e1600
  400ebc:	00400d9d 	.word	0x00400d9d

00400ec0 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400ec0:	2803      	cmp	r0, #3
  400ec2:	d011      	beq.n	400ee8 <pmc_mck_set_division+0x28>
  400ec4:	2804      	cmp	r0, #4
  400ec6:	d012      	beq.n	400eee <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400ec8:	2802      	cmp	r0, #2
  400eca:	bf0c      	ite	eq
  400ecc:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400ed0:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400ed2:	4a08      	ldr	r2, [pc, #32]	; (400ef4 <pmc_mck_set_division+0x34>)
  400ed4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400ed6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400eda:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400edc:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400ede:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400ee0:	f013 0f08 	tst.w	r3, #8
  400ee4:	d0fb      	beq.n	400ede <pmc_mck_set_division+0x1e>
}
  400ee6:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400ee8:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400eec:	e7f1      	b.n	400ed2 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400eee:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400ef2:	e7ee      	b.n	400ed2 <pmc_mck_set_division+0x12>
  400ef4:	400e0600 	.word	0x400e0600

00400ef8 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400ef8:	4a17      	ldr	r2, [pc, #92]	; (400f58 <pmc_switch_mck_to_pllack+0x60>)
  400efa:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400efc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400f00:	4318      	orrs	r0, r3
  400f02:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f04:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f06:	f013 0f08 	tst.w	r3, #8
  400f0a:	d10a      	bne.n	400f22 <pmc_switch_mck_to_pllack+0x2a>
  400f0c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f10:	4911      	ldr	r1, [pc, #68]	; (400f58 <pmc_switch_mck_to_pllack+0x60>)
  400f12:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f14:	f012 0f08 	tst.w	r2, #8
  400f18:	d103      	bne.n	400f22 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f1a:	3b01      	subs	r3, #1
  400f1c:	d1f9      	bne.n	400f12 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400f1e:	2001      	movs	r0, #1
  400f20:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400f22:	4a0d      	ldr	r2, [pc, #52]	; (400f58 <pmc_switch_mck_to_pllack+0x60>)
  400f24:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f26:	f023 0303 	bic.w	r3, r3, #3
  400f2a:	f043 0302 	orr.w	r3, r3, #2
  400f2e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f30:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f32:	f013 0f08 	tst.w	r3, #8
  400f36:	d10a      	bne.n	400f4e <pmc_switch_mck_to_pllack+0x56>
  400f38:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f3c:	4906      	ldr	r1, [pc, #24]	; (400f58 <pmc_switch_mck_to_pllack+0x60>)
  400f3e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f40:	f012 0f08 	tst.w	r2, #8
  400f44:	d105      	bne.n	400f52 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f46:	3b01      	subs	r3, #1
  400f48:	d1f9      	bne.n	400f3e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400f4a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400f4c:	4770      	bx	lr
	return 0;
  400f4e:	2000      	movs	r0, #0
  400f50:	4770      	bx	lr
  400f52:	2000      	movs	r0, #0
  400f54:	4770      	bx	lr
  400f56:	bf00      	nop
  400f58:	400e0600 	.word	0x400e0600

00400f5c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400f5c:	b9a0      	cbnz	r0, 400f88 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400f5e:	480e      	ldr	r0, [pc, #56]	; (400f98 <pmc_switch_mainck_to_xtal+0x3c>)
  400f60:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400f62:	0209      	lsls	r1, r1, #8
  400f64:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400f66:	4a0d      	ldr	r2, [pc, #52]	; (400f9c <pmc_switch_mainck_to_xtal+0x40>)
  400f68:	401a      	ands	r2, r3
  400f6a:	4b0d      	ldr	r3, [pc, #52]	; (400fa0 <pmc_switch_mainck_to_xtal+0x44>)
  400f6c:	4313      	orrs	r3, r2
  400f6e:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400f70:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400f72:	4602      	mov	r2, r0
  400f74:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f76:	f013 0f01 	tst.w	r3, #1
  400f7a:	d0fb      	beq.n	400f74 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400f7c:	4a06      	ldr	r2, [pc, #24]	; (400f98 <pmc_switch_mainck_to_xtal+0x3c>)
  400f7e:	6a11      	ldr	r1, [r2, #32]
  400f80:	4b08      	ldr	r3, [pc, #32]	; (400fa4 <pmc_switch_mainck_to_xtal+0x48>)
  400f82:	430b      	orrs	r3, r1
  400f84:	6213      	str	r3, [r2, #32]
  400f86:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400f88:	4903      	ldr	r1, [pc, #12]	; (400f98 <pmc_switch_mainck_to_xtal+0x3c>)
  400f8a:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400f8c:	4a06      	ldr	r2, [pc, #24]	; (400fa8 <pmc_switch_mainck_to_xtal+0x4c>)
  400f8e:	401a      	ands	r2, r3
  400f90:	4b06      	ldr	r3, [pc, #24]	; (400fac <pmc_switch_mainck_to_xtal+0x50>)
  400f92:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400f94:	620b      	str	r3, [r1, #32]
  400f96:	4770      	bx	lr
  400f98:	400e0600 	.word	0x400e0600
  400f9c:	ffc8fffc 	.word	0xffc8fffc
  400fa0:	00370001 	.word	0x00370001
  400fa4:	01370000 	.word	0x01370000
  400fa8:	fec8fffc 	.word	0xfec8fffc
  400fac:	01370002 	.word	0x01370002

00400fb0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400fb0:	4b02      	ldr	r3, [pc, #8]	; (400fbc <pmc_osc_is_ready_mainck+0xc>)
  400fb2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400fb4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400fb8:	4770      	bx	lr
  400fba:	bf00      	nop
  400fbc:	400e0600 	.word	0x400e0600

00400fc0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400fc0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400fc4:	4b01      	ldr	r3, [pc, #4]	; (400fcc <pmc_disable_pllack+0xc>)
  400fc6:	629a      	str	r2, [r3, #40]	; 0x28
  400fc8:	4770      	bx	lr
  400fca:	bf00      	nop
  400fcc:	400e0600 	.word	0x400e0600

00400fd0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400fd0:	4b02      	ldr	r3, [pc, #8]	; (400fdc <pmc_is_locked_pllack+0xc>)
  400fd2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400fd4:	f000 0002 	and.w	r0, r0, #2
  400fd8:	4770      	bx	lr
  400fda:	bf00      	nop
  400fdc:	400e0600 	.word	0x400e0600

00400fe0 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400fe0:	283f      	cmp	r0, #63	; 0x3f
  400fe2:	d81e      	bhi.n	401022 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400fe4:	281f      	cmp	r0, #31
  400fe6:	d80c      	bhi.n	401002 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400fe8:	4b11      	ldr	r3, [pc, #68]	; (401030 <pmc_enable_periph_clk+0x50>)
  400fea:	699a      	ldr	r2, [r3, #24]
  400fec:	2301      	movs	r3, #1
  400fee:	4083      	lsls	r3, r0
  400ff0:	4393      	bics	r3, r2
  400ff2:	d018      	beq.n	401026 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400ff4:	2301      	movs	r3, #1
  400ff6:	fa03 f000 	lsl.w	r0, r3, r0
  400ffa:	4b0d      	ldr	r3, [pc, #52]	; (401030 <pmc_enable_periph_clk+0x50>)
  400ffc:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400ffe:	2000      	movs	r0, #0
  401000:	4770      	bx	lr
		ul_id -= 32;
  401002:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401004:	4b0a      	ldr	r3, [pc, #40]	; (401030 <pmc_enable_periph_clk+0x50>)
  401006:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40100a:	2301      	movs	r3, #1
  40100c:	4083      	lsls	r3, r0
  40100e:	4393      	bics	r3, r2
  401010:	d00b      	beq.n	40102a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  401012:	2301      	movs	r3, #1
  401014:	fa03 f000 	lsl.w	r0, r3, r0
  401018:	4b05      	ldr	r3, [pc, #20]	; (401030 <pmc_enable_periph_clk+0x50>)
  40101a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40101e:	2000      	movs	r0, #0
  401020:	4770      	bx	lr
		return 1;
  401022:	2001      	movs	r0, #1
  401024:	4770      	bx	lr
	return 0;
  401026:	2000      	movs	r0, #0
  401028:	4770      	bx	lr
  40102a:	2000      	movs	r0, #0
}
  40102c:	4770      	bx	lr
  40102e:	bf00      	nop
  401030:	400e0600 	.word	0x400e0600

00401034 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  401034:	4770      	bx	lr
	...

00401038 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  401038:	4a10      	ldr	r2, [pc, #64]	; (40107c <pmc_enable_waitmode+0x44>)
  40103a:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  40103c:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401040:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  401044:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  401046:	6a11      	ldr	r1, [r2, #32]
  401048:	4b0d      	ldr	r3, [pc, #52]	; (401080 <pmc_enable_waitmode+0x48>)
  40104a:	430b      	orrs	r3, r1
  40104c:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40104e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401050:	f013 0f08 	tst.w	r3, #8
  401054:	d0fb      	beq.n	40104e <pmc_enable_waitmode+0x16>
  401056:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  40105a:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  40105c:	3b01      	subs	r3, #1
  40105e:	d1fc      	bne.n	40105a <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  401060:	4a06      	ldr	r2, [pc, #24]	; (40107c <pmc_enable_waitmode+0x44>)
  401062:	6a13      	ldr	r3, [r2, #32]
  401064:	f013 0f08 	tst.w	r3, #8
  401068:	d0fb      	beq.n	401062 <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  40106a:	4a04      	ldr	r2, [pc, #16]	; (40107c <pmc_enable_waitmode+0x44>)
  40106c:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  40106e:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401072:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  401076:	6713      	str	r3, [r2, #112]	; 0x70
  401078:	4770      	bx	lr
  40107a:	bf00      	nop
  40107c:	400e0600 	.word	0x400e0600
  401080:	00370004 	.word	0x00370004

00401084 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  401084:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  401088:	1e43      	subs	r3, r0, #1
  40108a:	2b04      	cmp	r3, #4
  40108c:	f200 8107 	bhi.w	40129e <pmc_sleep+0x21a>
  401090:	e8df f013 	tbh	[pc, r3, lsl #1]
  401094:	00050005 	.word	0x00050005
  401098:	00150015 	.word	0x00150015
  40109c:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  40109e:	4a81      	ldr	r2, [pc, #516]	; (4012a4 <pmc_sleep+0x220>)
  4010a0:	6913      	ldr	r3, [r2, #16]
  4010a2:	f023 0304 	bic.w	r3, r3, #4
  4010a6:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  4010a8:	2201      	movs	r2, #1
  4010aa:	4b7f      	ldr	r3, [pc, #508]	; (4012a8 <pmc_sleep+0x224>)
  4010ac:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4010ae:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  4010b2:	b662      	cpsie	i
  __ASM volatile ("dsb");
  4010b4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  4010b8:	bf30      	wfi
  4010ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4010be:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  4010c0:	2803      	cmp	r0, #3
  4010c2:	bf0c      	ite	eq
  4010c4:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  4010c6:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  4010ca:	4b78      	ldr	r3, [pc, #480]	; (4012ac <pmc_sleep+0x228>)
  4010cc:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  4010ce:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4010d0:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  4010d4:	2200      	movs	r2, #0
  4010d6:	4b74      	ldr	r3, [pc, #464]	; (4012a8 <pmc_sleep+0x224>)
  4010d8:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  4010da:	2201      	movs	r2, #1
  4010dc:	4b74      	ldr	r3, [pc, #464]	; (4012b0 <pmc_sleep+0x22c>)
  4010de:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  4010e0:	4b74      	ldr	r3, [pc, #464]	; (4012b4 <pmc_sleep+0x230>)
  4010e2:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  4010e4:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  4010e6:	4a74      	ldr	r2, [pc, #464]	; (4012b8 <pmc_sleep+0x234>)
  4010e8:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  4010ec:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  4010ee:	4a73      	ldr	r2, [pc, #460]	; (4012bc <pmc_sleep+0x238>)
  4010f0:	433a      	orrs	r2, r7
  4010f2:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  4010f4:	f005 0903 	and.w	r9, r5, #3
  4010f8:	f1b9 0f01 	cmp.w	r9, #1
  4010fc:	f240 8089 	bls.w	401212 <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  401100:	f025 0103 	bic.w	r1, r5, #3
  401104:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  401108:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40110a:	461a      	mov	r2, r3
  40110c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40110e:	f013 0f08 	tst.w	r3, #8
  401112:	d0fb      	beq.n	40110c <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401114:	f011 0f70 	tst.w	r1, #112	; 0x70
  401118:	d008      	beq.n	40112c <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  40111a:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  40111e:	4b65      	ldr	r3, [pc, #404]	; (4012b4 <pmc_sleep+0x230>)
  401120:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401122:	461a      	mov	r2, r3
  401124:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401126:	f013 0f08 	tst.w	r3, #8
  40112a:	d0fb      	beq.n	401124 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  40112c:	4b64      	ldr	r3, [pc, #400]	; (4012c0 <pmc_sleep+0x23c>)
  40112e:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401130:	4a60      	ldr	r2, [pc, #384]	; (4012b4 <pmc_sleep+0x230>)
  401132:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401134:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  401138:	d0fb      	beq.n	401132 <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  40113a:	4a5e      	ldr	r2, [pc, #376]	; (4012b4 <pmc_sleep+0x230>)
  40113c:	6a11      	ldr	r1, [r2, #32]
  40113e:	4b61      	ldr	r3, [pc, #388]	; (4012c4 <pmc_sleep+0x240>)
  401140:	400b      	ands	r3, r1
  401142:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401146:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401148:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40114a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40114e:	d0fb      	beq.n	401148 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  401150:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401154:	4a58      	ldr	r2, [pc, #352]	; (4012b8 <pmc_sleep+0x234>)
  401156:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  401158:	2c04      	cmp	r4, #4
  40115a:	d05c      	beq.n	401216 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  40115c:	4c52      	ldr	r4, [pc, #328]	; (4012a8 <pmc_sleep+0x224>)
  40115e:	2301      	movs	r3, #1
  401160:	7023      	strb	r3, [r4, #0]
  401162:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401166:	b662      	cpsie	i

		pmc_enable_waitmode();
  401168:	4b57      	ldr	r3, [pc, #348]	; (4012c8 <pmc_sleep+0x244>)
  40116a:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  40116c:	b672      	cpsid	i
  40116e:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  401172:	2300      	movs	r3, #0
  401174:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  401176:	f017 0f02 	tst.w	r7, #2
  40117a:	d055      	beq.n	401228 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40117c:	4a4d      	ldr	r2, [pc, #308]	; (4012b4 <pmc_sleep+0x230>)
  40117e:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401180:	4952      	ldr	r1, [pc, #328]	; (4012cc <pmc_sleep+0x248>)
  401182:	4019      	ands	r1, r3
  401184:	4b52      	ldr	r3, [pc, #328]	; (4012d0 <pmc_sleep+0x24c>)
  401186:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401188:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40118a:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  40118c:	4b51      	ldr	r3, [pc, #324]	; (4012d4 <pmc_sleep+0x250>)
  40118e:	400b      	ands	r3, r1
  401190:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401194:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  401196:	4b50      	ldr	r3, [pc, #320]	; (4012d8 <pmc_sleep+0x254>)
  401198:	4033      	ands	r3, r6
  40119a:	2b00      	cmp	r3, #0
  40119c:	d06e      	beq.n	40127c <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  40119e:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  4011a2:	4b44      	ldr	r3, [pc, #272]	; (4012b4 <pmc_sleep+0x230>)
  4011a4:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  4011a6:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  4011a8:	f1b9 0f02 	cmp.w	r9, #2
  4011ac:	d104      	bne.n	4011b8 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  4011ae:	4a41      	ldr	r2, [pc, #260]	; (4012b4 <pmc_sleep+0x230>)
  4011b0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011b2:	f013 0f02 	tst.w	r3, #2
  4011b6:	d0fb      	beq.n	4011b0 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  4011b8:	4a3e      	ldr	r2, [pc, #248]	; (4012b4 <pmc_sleep+0x230>)
  4011ba:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4011bc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  4011c0:	f005 0070 	and.w	r0, r5, #112	; 0x70
  4011c4:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4011c6:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4011c8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011ca:	f013 0f08 	tst.w	r3, #8
  4011ce:	d0fb      	beq.n	4011c8 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  4011d0:	4b39      	ldr	r3, [pc, #228]	; (4012b8 <pmc_sleep+0x234>)
  4011d2:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  4011d6:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  4011da:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4011dc:	461a      	mov	r2, r3
  4011de:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011e0:	f013 0f08 	tst.w	r3, #8
  4011e4:	d0fb      	beq.n	4011de <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  4011e6:	4a33      	ldr	r2, [pc, #204]	; (4012b4 <pmc_sleep+0x230>)
  4011e8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011ea:	420b      	tst	r3, r1
  4011ec:	d0fc      	beq.n	4011e8 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  4011ee:	2200      	movs	r2, #0
  4011f0:	4b2f      	ldr	r3, [pc, #188]	; (4012b0 <pmc_sleep+0x22c>)
  4011f2:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  4011f4:	4b39      	ldr	r3, [pc, #228]	; (4012dc <pmc_sleep+0x258>)
  4011f6:	681b      	ldr	r3, [r3, #0]
  4011f8:	b11b      	cbz	r3, 401202 <pmc_sleep+0x17e>
			callback_clocks_restored();
  4011fa:	4798      	blx	r3
			callback_clocks_restored = NULL;
  4011fc:	2200      	movs	r2, #0
  4011fe:	4b37      	ldr	r3, [pc, #220]	; (4012dc <pmc_sleep+0x258>)
  401200:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  401202:	2201      	movs	r2, #1
  401204:	4b28      	ldr	r3, [pc, #160]	; (4012a8 <pmc_sleep+0x224>)
  401206:	701a      	strb	r2, [r3, #0]
  401208:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40120c:	b662      	cpsie	i
  40120e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  401212:	4629      	mov	r1, r5
  401214:	e77e      	b.n	401114 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401216:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  40121a:	6a11      	ldr	r1, [r2, #32]
  40121c:	4b30      	ldr	r3, [pc, #192]	; (4012e0 <pmc_sleep+0x25c>)
  40121e:	400b      	ands	r3, r1
  401220:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401224:	6213      	str	r3, [r2, #32]
  401226:	e799      	b.n	40115c <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  401228:	f017 0f01 	tst.w	r7, #1
  40122c:	d0b3      	beq.n	401196 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  40122e:	4b21      	ldr	r3, [pc, #132]	; (4012b4 <pmc_sleep+0x230>)
  401230:	6a1b      	ldr	r3, [r3, #32]
  401232:	f013 0f01 	tst.w	r3, #1
  401236:	d10b      	bne.n	401250 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401238:	491e      	ldr	r1, [pc, #120]	; (4012b4 <pmc_sleep+0x230>)
  40123a:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  40123c:	4a29      	ldr	r2, [pc, #164]	; (4012e4 <pmc_sleep+0x260>)
  40123e:	401a      	ands	r2, r3
  401240:	4b29      	ldr	r3, [pc, #164]	; (4012e8 <pmc_sleep+0x264>)
  401242:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401244:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401246:	460a      	mov	r2, r1
  401248:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40124a:	f013 0f01 	tst.w	r3, #1
  40124e:	d0fb      	beq.n	401248 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  401250:	4b18      	ldr	r3, [pc, #96]	; (4012b4 <pmc_sleep+0x230>)
  401252:	6a1b      	ldr	r3, [r3, #32]
  401254:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401258:	d108      	bne.n	40126c <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40125a:	4a16      	ldr	r2, [pc, #88]	; (4012b4 <pmc_sleep+0x230>)
  40125c:	6a11      	ldr	r1, [r2, #32]
  40125e:	4b23      	ldr	r3, [pc, #140]	; (4012ec <pmc_sleep+0x268>)
  401260:	430b      	orrs	r3, r1
  401262:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401264:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401266:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40126a:	d0fb      	beq.n	401264 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40126c:	4a11      	ldr	r2, [pc, #68]	; (4012b4 <pmc_sleep+0x230>)
  40126e:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  401270:	4b18      	ldr	r3, [pc, #96]	; (4012d4 <pmc_sleep+0x250>)
  401272:	400b      	ands	r3, r1
  401274:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401278:	6213      	str	r3, [r2, #32]
  40127a:	e78c      	b.n	401196 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  40127c:	2100      	movs	r1, #0
  40127e:	e793      	b.n	4011a8 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  401280:	4a08      	ldr	r2, [pc, #32]	; (4012a4 <pmc_sleep+0x220>)
  401282:	6913      	ldr	r3, [r2, #16]
  401284:	f043 0304 	orr.w	r3, r3, #4
  401288:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  40128a:	4a19      	ldr	r2, [pc, #100]	; (4012f0 <pmc_sleep+0x26c>)
  40128c:	4b19      	ldr	r3, [pc, #100]	; (4012f4 <pmc_sleep+0x270>)
  40128e:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  401290:	2201      	movs	r2, #1
  401292:	4b05      	ldr	r3, [pc, #20]	; (4012a8 <pmc_sleep+0x224>)
  401294:	701a      	strb	r2, [r3, #0]
  401296:	f3bf 8f5f 	dmb	sy
  40129a:	b662      	cpsie	i
  __ASM volatile ("wfi");
  40129c:	bf30      	wfi
  40129e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4012a2:	bf00      	nop
  4012a4:	e000ed00 	.word	0xe000ed00
  4012a8:	20400018 	.word	0x20400018
  4012ac:	00401035 	.word	0x00401035
  4012b0:	20400c68 	.word	0x20400c68
  4012b4:	400e0600 	.word	0x400e0600
  4012b8:	400e0c00 	.word	0x400e0c00
  4012bc:	00370008 	.word	0x00370008
  4012c0:	00400fc1 	.word	0x00400fc1
  4012c4:	fec8ffff 	.word	0xfec8ffff
  4012c8:	00401039 	.word	0x00401039
  4012cc:	fec8fffc 	.word	0xfec8fffc
  4012d0:	01370002 	.word	0x01370002
  4012d4:	ffc8ff87 	.word	0xffc8ff87
  4012d8:	07ff0000 	.word	0x07ff0000
  4012dc:	20400c6c 	.word	0x20400c6c
  4012e0:	ffc8fffe 	.word	0xffc8fffe
  4012e4:	ffc8fffc 	.word	0xffc8fffc
  4012e8:	00370001 	.word	0x00370001
  4012ec:	01370000 	.word	0x01370000
  4012f0:	a5000004 	.word	0xa5000004
  4012f4:	400e1810 	.word	0x400e1810

004012f8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4012f8:	e7fe      	b.n	4012f8 <Dummy_Handler>
	...

004012fc <Reset_Handler>:
{
  4012fc:	b500      	push	{lr}
  4012fe:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401300:	4b25      	ldr	r3, [pc, #148]	; (401398 <Reset_Handler+0x9c>)
  401302:	4a26      	ldr	r2, [pc, #152]	; (40139c <Reset_Handler+0xa0>)
  401304:	429a      	cmp	r2, r3
  401306:	d010      	beq.n	40132a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401308:	4b25      	ldr	r3, [pc, #148]	; (4013a0 <Reset_Handler+0xa4>)
  40130a:	4a23      	ldr	r2, [pc, #140]	; (401398 <Reset_Handler+0x9c>)
  40130c:	429a      	cmp	r2, r3
  40130e:	d20c      	bcs.n	40132a <Reset_Handler+0x2e>
  401310:	3b01      	subs	r3, #1
  401312:	1a9b      	subs	r3, r3, r2
  401314:	f023 0303 	bic.w	r3, r3, #3
  401318:	3304      	adds	r3, #4
  40131a:	4413      	add	r3, r2
  40131c:	491f      	ldr	r1, [pc, #124]	; (40139c <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  40131e:	f851 0b04 	ldr.w	r0, [r1], #4
  401322:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401326:	429a      	cmp	r2, r3
  401328:	d1f9      	bne.n	40131e <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  40132a:	4b1e      	ldr	r3, [pc, #120]	; (4013a4 <Reset_Handler+0xa8>)
  40132c:	4a1e      	ldr	r2, [pc, #120]	; (4013a8 <Reset_Handler+0xac>)
  40132e:	429a      	cmp	r2, r3
  401330:	d20a      	bcs.n	401348 <Reset_Handler+0x4c>
  401332:	3b01      	subs	r3, #1
  401334:	1a9b      	subs	r3, r3, r2
  401336:	f023 0303 	bic.w	r3, r3, #3
  40133a:	3304      	adds	r3, #4
  40133c:	4413      	add	r3, r2
                *pDest++ = 0;
  40133e:	2100      	movs	r1, #0
  401340:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401344:	4293      	cmp	r3, r2
  401346:	d1fb      	bne.n	401340 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401348:	4a18      	ldr	r2, [pc, #96]	; (4013ac <Reset_Handler+0xb0>)
  40134a:	4b19      	ldr	r3, [pc, #100]	; (4013b0 <Reset_Handler+0xb4>)
  40134c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401350:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401352:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401356:	fab3 f383 	clz	r3, r3
  40135a:	095b      	lsrs	r3, r3, #5
  40135c:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40135e:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401360:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401364:	2200      	movs	r2, #0
  401366:	4b13      	ldr	r3, [pc, #76]	; (4013b4 <Reset_Handler+0xb8>)
  401368:	701a      	strb	r2, [r3, #0]
	return flags;
  40136a:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  40136c:	4a12      	ldr	r2, [pc, #72]	; (4013b8 <Reset_Handler+0xbc>)
  40136e:	6813      	ldr	r3, [r2, #0]
  401370:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401374:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401376:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40137a:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40137e:	b129      	cbz	r1, 40138c <Reset_Handler+0x90>
		cpu_irq_enable();
  401380:	2201      	movs	r2, #1
  401382:	4b0c      	ldr	r3, [pc, #48]	; (4013b4 <Reset_Handler+0xb8>)
  401384:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401386:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40138a:	b662      	cpsie	i
        __libc_init_array();
  40138c:	4b0b      	ldr	r3, [pc, #44]	; (4013bc <Reset_Handler+0xc0>)
  40138e:	4798      	blx	r3
        main();
  401390:	4b0b      	ldr	r3, [pc, #44]	; (4013c0 <Reset_Handler+0xc4>)
  401392:	4798      	blx	r3
  401394:	e7fe      	b.n	401394 <Reset_Handler+0x98>
  401396:	bf00      	nop
  401398:	20400000 	.word	0x20400000
  40139c:	004070f4 	.word	0x004070f4
  4013a0:	204009d0 	.word	0x204009d0
  4013a4:	20400d58 	.word	0x20400d58
  4013a8:	204009d0 	.word	0x204009d0
  4013ac:	e000ed00 	.word	0xe000ed00
  4013b0:	00400000 	.word	0x00400000
  4013b4:	20400018 	.word	0x20400018
  4013b8:	e000ed88 	.word	0xe000ed88
  4013bc:	0040234d 	.word	0x0040234d
  4013c0:	004018d1 	.word	0x004018d1

004013c4 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4013c4:	4b3b      	ldr	r3, [pc, #236]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  4013c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4013c8:	f003 0303 	and.w	r3, r3, #3
  4013cc:	2b01      	cmp	r3, #1
  4013ce:	d01d      	beq.n	40140c <SystemCoreClockUpdate+0x48>
  4013d0:	b183      	cbz	r3, 4013f4 <SystemCoreClockUpdate+0x30>
  4013d2:	2b02      	cmp	r3, #2
  4013d4:	d036      	beq.n	401444 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4013d6:	4b37      	ldr	r3, [pc, #220]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  4013d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4013da:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4013de:	2b70      	cmp	r3, #112	; 0x70
  4013e0:	d05f      	beq.n	4014a2 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4013e2:	4b34      	ldr	r3, [pc, #208]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  4013e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4013e6:	4934      	ldr	r1, [pc, #208]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  4013e8:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4013ec:	680b      	ldr	r3, [r1, #0]
  4013ee:	40d3      	lsrs	r3, r2
  4013f0:	600b      	str	r3, [r1, #0]
  4013f2:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4013f4:	4b31      	ldr	r3, [pc, #196]	; (4014bc <SystemCoreClockUpdate+0xf8>)
  4013f6:	695b      	ldr	r3, [r3, #20]
  4013f8:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4013fc:	bf14      	ite	ne
  4013fe:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401402:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401406:	4b2c      	ldr	r3, [pc, #176]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  401408:	601a      	str	r2, [r3, #0]
  40140a:	e7e4      	b.n	4013d6 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  40140c:	4b29      	ldr	r3, [pc, #164]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  40140e:	6a1b      	ldr	r3, [r3, #32]
  401410:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401414:	d003      	beq.n	40141e <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401416:	4a2a      	ldr	r2, [pc, #168]	; (4014c0 <SystemCoreClockUpdate+0xfc>)
  401418:	4b27      	ldr	r3, [pc, #156]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  40141a:	601a      	str	r2, [r3, #0]
  40141c:	e7db      	b.n	4013d6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40141e:	4a29      	ldr	r2, [pc, #164]	; (4014c4 <SystemCoreClockUpdate+0x100>)
  401420:	4b25      	ldr	r3, [pc, #148]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  401422:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401424:	4b23      	ldr	r3, [pc, #140]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  401426:	6a1b      	ldr	r3, [r3, #32]
  401428:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40142c:	2b10      	cmp	r3, #16
  40142e:	d005      	beq.n	40143c <SystemCoreClockUpdate+0x78>
  401430:	2b20      	cmp	r3, #32
  401432:	d1d0      	bne.n	4013d6 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401434:	4a22      	ldr	r2, [pc, #136]	; (4014c0 <SystemCoreClockUpdate+0xfc>)
  401436:	4b20      	ldr	r3, [pc, #128]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  401438:	601a      	str	r2, [r3, #0]
          break;
  40143a:	e7cc      	b.n	4013d6 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  40143c:	4a22      	ldr	r2, [pc, #136]	; (4014c8 <SystemCoreClockUpdate+0x104>)
  40143e:	4b1e      	ldr	r3, [pc, #120]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  401440:	601a      	str	r2, [r3, #0]
          break;
  401442:	e7c8      	b.n	4013d6 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401444:	4b1b      	ldr	r3, [pc, #108]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  401446:	6a1b      	ldr	r3, [r3, #32]
  401448:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40144c:	d016      	beq.n	40147c <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  40144e:	4a1c      	ldr	r2, [pc, #112]	; (4014c0 <SystemCoreClockUpdate+0xfc>)
  401450:	4b19      	ldr	r3, [pc, #100]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  401452:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401454:	4b17      	ldr	r3, [pc, #92]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  401456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401458:	f003 0303 	and.w	r3, r3, #3
  40145c:	2b02      	cmp	r3, #2
  40145e:	d1ba      	bne.n	4013d6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401460:	4a14      	ldr	r2, [pc, #80]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  401462:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401464:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401466:	4814      	ldr	r0, [pc, #80]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401468:	f3c1 410a 	ubfx	r1, r1, #16, #11
  40146c:	6803      	ldr	r3, [r0, #0]
  40146e:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401472:	b2d2      	uxtb	r2, r2
  401474:	fbb3 f3f2 	udiv	r3, r3, r2
  401478:	6003      	str	r3, [r0, #0]
  40147a:	e7ac      	b.n	4013d6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40147c:	4a11      	ldr	r2, [pc, #68]	; (4014c4 <SystemCoreClockUpdate+0x100>)
  40147e:	4b0e      	ldr	r3, [pc, #56]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  401480:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401482:	4b0c      	ldr	r3, [pc, #48]	; (4014b4 <SystemCoreClockUpdate+0xf0>)
  401484:	6a1b      	ldr	r3, [r3, #32]
  401486:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40148a:	2b10      	cmp	r3, #16
  40148c:	d005      	beq.n	40149a <SystemCoreClockUpdate+0xd6>
  40148e:	2b20      	cmp	r3, #32
  401490:	d1e0      	bne.n	401454 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401492:	4a0b      	ldr	r2, [pc, #44]	; (4014c0 <SystemCoreClockUpdate+0xfc>)
  401494:	4b08      	ldr	r3, [pc, #32]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  401496:	601a      	str	r2, [r3, #0]
          break;
  401498:	e7dc      	b.n	401454 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40149a:	4a0b      	ldr	r2, [pc, #44]	; (4014c8 <SystemCoreClockUpdate+0x104>)
  40149c:	4b06      	ldr	r3, [pc, #24]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  40149e:	601a      	str	r2, [r3, #0]
          break;
  4014a0:	e7d8      	b.n	401454 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  4014a2:	4a05      	ldr	r2, [pc, #20]	; (4014b8 <SystemCoreClockUpdate+0xf4>)
  4014a4:	6813      	ldr	r3, [r2, #0]
  4014a6:	4909      	ldr	r1, [pc, #36]	; (4014cc <SystemCoreClockUpdate+0x108>)
  4014a8:	fba1 1303 	umull	r1, r3, r1, r3
  4014ac:	085b      	lsrs	r3, r3, #1
  4014ae:	6013      	str	r3, [r2, #0]
  4014b0:	4770      	bx	lr
  4014b2:	bf00      	nop
  4014b4:	400e0600 	.word	0x400e0600
  4014b8:	2040001c 	.word	0x2040001c
  4014bc:	400e1810 	.word	0x400e1810
  4014c0:	00b71b00 	.word	0x00b71b00
  4014c4:	003d0900 	.word	0x003d0900
  4014c8:	007a1200 	.word	0x007a1200
  4014cc:	aaaaaaab 	.word	0xaaaaaaab

004014d0 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4014d0:	4b16      	ldr	r3, [pc, #88]	; (40152c <system_init_flash+0x5c>)
  4014d2:	4298      	cmp	r0, r3
  4014d4:	d913      	bls.n	4014fe <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4014d6:	4b16      	ldr	r3, [pc, #88]	; (401530 <system_init_flash+0x60>)
  4014d8:	4298      	cmp	r0, r3
  4014da:	d915      	bls.n	401508 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4014dc:	4b15      	ldr	r3, [pc, #84]	; (401534 <system_init_flash+0x64>)
  4014de:	4298      	cmp	r0, r3
  4014e0:	d916      	bls.n	401510 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4014e2:	4b15      	ldr	r3, [pc, #84]	; (401538 <system_init_flash+0x68>)
  4014e4:	4298      	cmp	r0, r3
  4014e6:	d917      	bls.n	401518 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4014e8:	4b14      	ldr	r3, [pc, #80]	; (40153c <system_init_flash+0x6c>)
  4014ea:	4298      	cmp	r0, r3
  4014ec:	d918      	bls.n	401520 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4014ee:	4b14      	ldr	r3, [pc, #80]	; (401540 <system_init_flash+0x70>)
  4014f0:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4014f2:	bf94      	ite	ls
  4014f4:	4a13      	ldrls	r2, [pc, #76]	; (401544 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4014f6:	4a14      	ldrhi	r2, [pc, #80]	; (401548 <system_init_flash+0x78>)
  4014f8:	4b14      	ldr	r3, [pc, #80]	; (40154c <system_init_flash+0x7c>)
  4014fa:	601a      	str	r2, [r3, #0]
  4014fc:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4014fe:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401502:	4b12      	ldr	r3, [pc, #72]	; (40154c <system_init_flash+0x7c>)
  401504:	601a      	str	r2, [r3, #0]
  401506:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401508:	4a11      	ldr	r2, [pc, #68]	; (401550 <system_init_flash+0x80>)
  40150a:	4b10      	ldr	r3, [pc, #64]	; (40154c <system_init_flash+0x7c>)
  40150c:	601a      	str	r2, [r3, #0]
  40150e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401510:	4a10      	ldr	r2, [pc, #64]	; (401554 <system_init_flash+0x84>)
  401512:	4b0e      	ldr	r3, [pc, #56]	; (40154c <system_init_flash+0x7c>)
  401514:	601a      	str	r2, [r3, #0]
  401516:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401518:	4a0f      	ldr	r2, [pc, #60]	; (401558 <system_init_flash+0x88>)
  40151a:	4b0c      	ldr	r3, [pc, #48]	; (40154c <system_init_flash+0x7c>)
  40151c:	601a      	str	r2, [r3, #0]
  40151e:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401520:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401524:	4b09      	ldr	r3, [pc, #36]	; (40154c <system_init_flash+0x7c>)
  401526:	601a      	str	r2, [r3, #0]
  401528:	4770      	bx	lr
  40152a:	bf00      	nop
  40152c:	015ef3bf 	.word	0x015ef3bf
  401530:	02bde77f 	.word	0x02bde77f
  401534:	041cdb3f 	.word	0x041cdb3f
  401538:	057bceff 	.word	0x057bceff
  40153c:	06dac2bf 	.word	0x06dac2bf
  401540:	0839b67f 	.word	0x0839b67f
  401544:	04000500 	.word	0x04000500
  401548:	04000600 	.word	0x04000600
  40154c:	400e0c00 	.word	0x400e0c00
  401550:	04000100 	.word	0x04000100
  401554:	04000200 	.word	0x04000200
  401558:	04000300 	.word	0x04000300

0040155c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  40155c:	4b0a      	ldr	r3, [pc, #40]	; (401588 <_sbrk+0x2c>)
  40155e:	681b      	ldr	r3, [r3, #0]
  401560:	b153      	cbz	r3, 401578 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401562:	4b09      	ldr	r3, [pc, #36]	; (401588 <_sbrk+0x2c>)
  401564:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401566:	181a      	adds	r2, r3, r0
  401568:	4908      	ldr	r1, [pc, #32]	; (40158c <_sbrk+0x30>)
  40156a:	4291      	cmp	r1, r2
  40156c:	db08      	blt.n	401580 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40156e:	4610      	mov	r0, r2
  401570:	4a05      	ldr	r2, [pc, #20]	; (401588 <_sbrk+0x2c>)
  401572:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401574:	4618      	mov	r0, r3
  401576:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401578:	4a05      	ldr	r2, [pc, #20]	; (401590 <_sbrk+0x34>)
  40157a:	4b03      	ldr	r3, [pc, #12]	; (401588 <_sbrk+0x2c>)
  40157c:	601a      	str	r2, [r3, #0]
  40157e:	e7f0      	b.n	401562 <_sbrk+0x6>
		return (caddr_t) -1;	
  401580:	f04f 30ff 	mov.w	r0, #4294967295
}
  401584:	4770      	bx	lr
  401586:	bf00      	nop
  401588:	20400c70 	.word	0x20400c70
  40158c:	2045fffc 	.word	0x2045fffc
  401590:	20402f58 	.word	0x20402f58

00401594 <echo_callback>:
void but1_callback(void) {
	but1_press_flag = 1;
}


void echo_callback(void) {
  401594:	b508      	push	{r3, lr}
	if (!pio_get(ECHO_PIO, PIO_INPUT, ECHO_PIO_IDX_MASK)) {
  401596:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  40159a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40159e:	4808      	ldr	r0, [pc, #32]	; (4015c0 <echo_callback+0x2c>)
  4015a0:	4b08      	ldr	r3, [pc, #32]	; (4015c4 <echo_callback+0x30>)
  4015a2:	4798      	blx	r3
  4015a4:	b918      	cbnz	r0, 4015ae <echo_callback+0x1a>
		fall_flag = 1;
  4015a6:	2201      	movs	r2, #1
  4015a8:	4b07      	ldr	r3, [pc, #28]	; (4015c8 <echo_callback+0x34>)
  4015aa:	601a      	str	r2, [r3, #0]
  4015ac:	bd08      	pop	{r3, pc}
	} 
	
	else if (pio_get(ECHO_PIO, PIO_INPUT, ECHO_PIO_IDX_MASK)) {
  4015ae:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  4015b2:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4015b6:	4802      	ldr	r0, [pc, #8]	; (4015c0 <echo_callback+0x2c>)
  4015b8:	4b02      	ldr	r3, [pc, #8]	; (4015c4 <echo_callback+0x30>)
  4015ba:	4798      	blx	r3
  4015bc:	bd08      	pop	{r3, pc}
  4015be:	bf00      	nop
  4015c0:	400e1400 	.word	0x400e1400
  4015c4:	00400bb5 	.word	0x00400bb5
  4015c8:	20400c74 	.word	0x20400c74

004015cc <trig_pulse>:
void trig_pulse(Pio *pio, uint32_t mask) {
  4015cc:	b538      	push	{r3, r4, r5, lr}
  4015ce:	4604      	mov	r4, r0
  4015d0:	460d      	mov	r5, r1
	pio_set(pio, mask);
  4015d2:	4b05      	ldr	r3, [pc, #20]	; (4015e8 <trig_pulse+0x1c>)
  4015d4:	4798      	blx	r3
	delay_us(10);
  4015d6:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4015da:	4b04      	ldr	r3, [pc, #16]	; (4015ec <trig_pulse+0x20>)
  4015dc:	4798      	blx	r3
	pio_clear(pio, mask);
  4015de:	4629      	mov	r1, r5
  4015e0:	4620      	mov	r0, r4
  4015e2:	4b03      	ldr	r3, [pc, #12]	; (4015f0 <trig_pulse+0x24>)
  4015e4:	4798      	blx	r3
  4015e6:	bd38      	pop	{r3, r4, r5, pc}
  4015e8:	00400bad 	.word	0x00400bad
  4015ec:	20400001 	.word	0x20400001
  4015f0:	00400bb1 	.word	0x00400bb1

004015f4 <pin_toggle>:
}

void pin_toggle(Pio *pio, uint32_t mask) {
  4015f4:	b538      	push	{r3, r4, r5, lr}
  4015f6:	4604      	mov	r4, r0
  4015f8:	460d      	mov	r5, r1
	if(pio_get_output_data_status(pio, mask))
  4015fa:	4b06      	ldr	r3, [pc, #24]	; (401614 <pin_toggle+0x20>)
  4015fc:	4798      	blx	r3
  4015fe:	b920      	cbnz	r0, 40160a <pin_toggle+0x16>
	pio_clear(pio, mask);
	else
	pio_set(pio,mask);
  401600:	4629      	mov	r1, r5
  401602:	4620      	mov	r0, r4
  401604:	4b04      	ldr	r3, [pc, #16]	; (401618 <pin_toggle+0x24>)
  401606:	4798      	blx	r3
  401608:	bd38      	pop	{r3, r4, r5, pc}
	pio_clear(pio, mask);
  40160a:	4629      	mov	r1, r5
  40160c:	4620      	mov	r0, r4
  40160e:	4b03      	ldr	r3, [pc, #12]	; (40161c <pin_toggle+0x28>)
  401610:	4798      	blx	r3
  401612:	bd38      	pop	{r3, r4, r5, pc}
  401614:	00400d51 	.word	0x00400d51
  401618:	00400bad 	.word	0x00400bad
  40161c:	00400bb1 	.word	0x00400bb1

00401620 <output_init>:
void output_init(Pio *p_pio, const uint32_t ul_mask, uint32_t ul_id, int estado) {
  401620:	b570      	push	{r4, r5, r6, lr}
  401622:	b082      	sub	sp, #8
  401624:	4604      	mov	r4, r0
  401626:	460d      	mov	r5, r1
  401628:	461e      	mov	r6, r3
	pmc_enable_periph_clk(ul_id);
  40162a:	4610      	mov	r0, r2
  40162c:	4b05      	ldr	r3, [pc, #20]	; (401644 <output_init+0x24>)
  40162e:	4798      	blx	r3
	pio_set_output(p_pio, ul_mask, estado, 0, 0);
  401630:	2300      	movs	r3, #0
  401632:	9300      	str	r3, [sp, #0]
  401634:	4632      	mov	r2, r6
  401636:	4629      	mov	r1, r5
  401638:	4620      	mov	r0, r4
  40163a:	4c03      	ldr	r4, [pc, #12]	; (401648 <output_init+0x28>)
  40163c:	47a0      	blx	r4
};
  40163e:	b002      	add	sp, #8
  401640:	bd70      	pop	{r4, r5, r6, pc}
  401642:	bf00      	nop
  401644:	00400fe1 	.word	0x00400fe1
  401648:	00400c97 	.word	0x00400c97

0040164c <input_init>:

// BUT1_PIO -- p_pio
// BUT1_IDX_MASK -- ul_mask
// BUT1_PIO_ID -- ul_id

void input_init(Pio *p_pio, const uint32_t ul_mask, uint32_t ul_id, void (*p_handler) (), int only_rise) {
  40164c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401650:	b082      	sub	sp, #8
  401652:	4605      	mov	r5, r0
  401654:	460e      	mov	r6, r1
  401656:	4614      	mov	r4, r2
  401658:	461f      	mov	r7, r3
	pmc_enable_periph_clk(ul_id);
  40165a:	4610      	mov	r0, r2
  40165c:	4b1a      	ldr	r3, [pc, #104]	; (4016c8 <input_init+0x7c>)
  40165e:	4798      	blx	r3

	// Configura PIO para lidar com o pino do botão como entrada
	// com pull-up
	//pio_configure(p_pio, PIO_INPUT, ul_mask, PIO_PULLUP | PIO_DEBOUNCE);
	// sem pull-up
	pio_configure(p_pio, PIO_INPUT, ul_mask, PIO_DEFAULT);
  401660:	2300      	movs	r3, #0
  401662:	4632      	mov	r2, r6
  401664:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401668:	4628      	mov	r0, r5
  40166a:	f8df 8074 	ldr.w	r8, [pc, #116]	; 4016e0 <input_init+0x94>
  40166e:	47c0      	blx	r8
	//pio_set_debounce_filter(p_pio, ul_mask, 60);

	// Configura interrupção no pino referente ao botao e associa
	// função de callback caso uma interrupção for gerada
	// a função de callback é a: but_callback()
	pio_handler_set(p_pio,
  401670:	9b08      	ldr	r3, [sp, #32]
  401672:	2b00      	cmp	r3, #0
  401674:	9700      	str	r7, [sp, #0]
  401676:	bf14      	ite	ne
  401678:	2370      	movne	r3, #112	; 0x70
  40167a:	2340      	moveq	r3, #64	; 0x40
  40167c:	4632      	mov	r2, r6
  40167e:	4621      	mov	r1, r4
  401680:	4628      	mov	r0, r5
  401682:	4f12      	ldr	r7, [pc, #72]	; (4016cc <input_init+0x80>)
  401684:	47b8      	blx	r7
		only_rise ? PIO_IT_RISE_EDGE : PIO_IT_EDGE,
		p_handler
	);

	// Ativa interrupção e limpa primeira IRQ gerada na ativacao
	pio_enable_interrupt(p_pio, ul_mask);
  401686:	4631      	mov	r1, r6
  401688:	4628      	mov	r0, r5
  40168a:	4b11      	ldr	r3, [pc, #68]	; (4016d0 <input_init+0x84>)
  40168c:	4798      	blx	r3
	pio_get_interrupt_status(p_pio);
  40168e:	4628      	mov	r0, r5
  401690:	4b10      	ldr	r3, [pc, #64]	; (4016d4 <input_init+0x88>)
  401692:	4798      	blx	r3
	
	// Configura NVIC para receber interrupcoes do PIO do botao
	// com prioridade 4 (quanto mais próximo de 0 maior)
	NVIC_EnableIRQ(ul_id);
  401694:	b262      	sxtb	r2, r4
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401696:	0950      	lsrs	r0, r2, #5
  401698:	b2e4      	uxtb	r4, r4
  40169a:	f004 011f 	and.w	r1, r4, #31
  40169e:	2301      	movs	r3, #1
  4016a0:	408b      	lsls	r3, r1
  4016a2:	490d      	ldr	r1, [pc, #52]	; (4016d8 <input_init+0x8c>)
  4016a4:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
  4016a8:	2a00      	cmp	r2, #0
  4016aa:	db07      	blt.n	4016bc <input_init+0x70>
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4016ac:	4b0a      	ldr	r3, [pc, #40]	; (4016d8 <input_init+0x8c>)
  4016ae:	4413      	add	r3, r2
  4016b0:	2280      	movs	r2, #128	; 0x80
  4016b2:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
	NVIC_SetPriority(ul_id, 4); // Prioridade 4
}
  4016b6:	b002      	add	sp, #8
  4016b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  4016bc:	f004 040f 	and.w	r4, r4, #15
  4016c0:	4b06      	ldr	r3, [pc, #24]	; (4016dc <input_init+0x90>)
  4016c2:	2280      	movs	r2, #128	; 0x80
  4016c4:	551a      	strb	r2, [r3, r4]
  4016c6:	e7f6      	b.n	4016b6 <input_init+0x6a>
  4016c8:	00400fe1 	.word	0x00400fe1
  4016cc:	00400ded 	.word	0x00400ded
  4016d0:	00400d8f 	.word	0x00400d8f
  4016d4:	00400d93 	.word	0x00400d93
  4016d8:	e000e100 	.word	0xe000e100
  4016dc:	e000ed14 	.word	0xe000ed14
  4016e0:	00400cc1 	.word	0x00400cc1

004016e4 <TC_init>:

void TC_init(Tc * TC, int ID_TC, int TC_CHANNEL, int freq){
  4016e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4016e8:	b085      	sub	sp, #20
  4016ea:	4606      	mov	r6, r0
  4016ec:	460c      	mov	r4, r1
  4016ee:	4617      	mov	r7, r2
  4016f0:	4698      	mov	r8, r3
	uint32_t ul_div;
	uint32_t ul_tcclks;
	uint32_t ul_sysclk = sysclk_get_cpu_hz();

	/* Configura o PMC */
	pmc_enable_periph_clk(ID_TC);
  4016f2:	4608      	mov	r0, r1
  4016f4:	4b1c      	ldr	r3, [pc, #112]	; (401768 <TC_init+0x84>)
  4016f6:	4798      	blx	r3

	/** Configura o TC para operar em  freq hz e interrupçcão no RC compare */
	tc_find_mck_divisor(freq, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  4016f8:	4d1c      	ldr	r5, [pc, #112]	; (40176c <TC_init+0x88>)
  4016fa:	9500      	str	r5, [sp, #0]
  4016fc:	ab02      	add	r3, sp, #8
  4016fe:	aa03      	add	r2, sp, #12
  401700:	4629      	mov	r1, r5
  401702:	4640      	mov	r0, r8
  401704:	f8df 9080 	ldr.w	r9, [pc, #128]	; 401788 <TC_init+0xa4>
  401708:	47c8      	blx	r9
	tc_init(TC, TC_CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  40170a:	9a02      	ldr	r2, [sp, #8]
  40170c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  401710:	4639      	mov	r1, r7
  401712:	4630      	mov	r0, r6
  401714:	4b16      	ldr	r3, [pc, #88]	; (401770 <TC_init+0x8c>)
  401716:	4798      	blx	r3
	tc_write_rc(TC, TC_CHANNEL, (ul_sysclk / ul_div) / freq);
  401718:	9a03      	ldr	r2, [sp, #12]
  40171a:	fbb5 f2f2 	udiv	r2, r5, r2
  40171e:	fbb2 f2f8 	udiv	r2, r2, r8
  401722:	4639      	mov	r1, r7
  401724:	4630      	mov	r0, r6
  401726:	4b13      	ldr	r3, [pc, #76]	; (401774 <TC_init+0x90>)
  401728:	4798      	blx	r3

	/* Configura NVIC*/
	NVIC_SetPriority(ID_TC, 4);
  40172a:	b263      	sxtb	r3, r4
  if(IRQn < 0) {
  40172c:	2b00      	cmp	r3, #0
  40172e:	db13      	blt.n	401758 <TC_init+0x74>
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401730:	4a11      	ldr	r2, [pc, #68]	; (401778 <TC_init+0x94>)
  401732:	2180      	movs	r1, #128	; 0x80
  401734:	54d1      	strb	r1, [r2, r3]
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401736:	095b      	lsrs	r3, r3, #5
  401738:	f004 041f 	and.w	r4, r4, #31
  40173c:	2201      	movs	r2, #1
  40173e:	fa02 f404 	lsl.w	r4, r2, r4
  401742:	4a0e      	ldr	r2, [pc, #56]	; (40177c <TC_init+0x98>)
  401744:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
	NVIC_EnableIRQ((IRQn_Type) ID_TC);
	tc_enable_interrupt(TC, TC_CHANNEL, TC_IER_CPCS);
  401748:	2210      	movs	r2, #16
  40174a:	4639      	mov	r1, r7
  40174c:	4630      	mov	r0, r6
  40174e:	4b0c      	ldr	r3, [pc, #48]	; (401780 <TC_init+0x9c>)
  401750:	4798      	blx	r3
}
  401752:	b005      	add	sp, #20
  401754:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  401758:	f004 010f 	and.w	r1, r4, #15
  40175c:	4a09      	ldr	r2, [pc, #36]	; (401784 <TC_init+0xa0>)
  40175e:	440a      	add	r2, r1
  401760:	2180      	movs	r1, #128	; 0x80
  401762:	7611      	strb	r1, [r2, #24]
  401764:	e7e7      	b.n	401736 <TC_init+0x52>
  401766:	bf00      	nop
  401768:	00400fe1 	.word	0x00400fe1
  40176c:	11e1a300 	.word	0x11e1a300
  401770:	004003bb 	.word	0x004003bb
  401774:	004003dd 	.word	0x004003dd
  401778:	e000e400 	.word	0xe000e400
  40177c:	e000e100 	.word	0xe000e100
  401780:	004003e5 	.word	0x004003e5
  401784:	e000ecfc 	.word	0xe000ecfc
  401788:	004003f5 	.word	0x004003f5

0040178c <RTT_init>:

void RTT_init(float freqPrescale, uint32_t IrqNPulses, uint32_t rttIRQSource) {
  40178c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401790:	ed2d 8b02 	vpush	{d8}
  401794:	b082      	sub	sp, #8
  401796:	ee08 0a10 	vmov	s16, r0
  40179a:	4688      	mov	r8, r1
  40179c:	4617      	mov	r7, r2

	uint16_t pllPreScale = (int) (((float) 32768) / freqPrescale);
	
	rtt_sel_source(RTT, false);
  40179e:	4c20      	ldr	r4, [pc, #128]	; (401820 <RTT_init+0x94>)
  4017a0:	2100      	movs	r1, #0
  4017a2:	4620      	mov	r0, r4
  4017a4:	4b1f      	ldr	r3, [pc, #124]	; (401824 <RTT_init+0x98>)
  4017a6:	4798      	blx	r3
	uint16_t pllPreScale = (int) (((float) 32768) / freqPrescale);
  4017a8:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 401828 <RTT_init+0x9c>
  4017ac:	eec7 7a08 	vdiv.f32	s15, s14, s16
  4017b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  4017b4:	edcd 7a01 	vstr	s15, [sp, #4]
	rtt_init(RTT, pllPreScale);
  4017b8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
  4017bc:	4620      	mov	r0, r4
  4017be:	4b1b      	ldr	r3, [pc, #108]	; (40182c <RTT_init+0xa0>)
  4017c0:	4798      	blx	r3
	
	if (rttIRQSource & RTT_MR_ALMIEN) {
  4017c2:	f417 3f80 	tst.w	r7, #65536	; 0x10000
  4017c6:	d116      	bne.n	4017f6 <RTT_init+0x6a>
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  4017c8:	4b19      	ldr	r3, [pc, #100]	; (401830 <RTT_init+0xa4>)
  4017ca:	2208      	movs	r2, #8
  4017cc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4017d0:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4017d4:	2180      	movs	r1, #128	; 0x80
  4017d6:	f883 1303 	strb.w	r1, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4017da:	601a      	str	r2, [r3, #0]
	NVIC_ClearPendingIRQ(RTT_IRQn);
	NVIC_SetPriority(RTT_IRQn, 4);
	NVIC_EnableIRQ(RTT_IRQn);

	/* Enable RTT interrupt */
	if (rttIRQSource & (RTT_MR_RTTINCIEN | RTT_MR_ALMIEN))
  4017dc:	f417 3f40 	tst.w	r7, #196608	; 0x30000
  4017e0:	d119      	bne.n	401816 <RTT_init+0x8a>
		rtt_enable_interrupt(RTT, rttIRQSource);
	else
		rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN | RTT_MR_ALMIEN);
  4017e2:	f44f 3140 	mov.w	r1, #196608	; 0x30000
  4017e6:	480e      	ldr	r0, [pc, #56]	; (401820 <RTT_init+0x94>)
  4017e8:	4b12      	ldr	r3, [pc, #72]	; (401834 <RTT_init+0xa8>)
  4017ea:	4798      	blx	r3
	
  4017ec:	b002      	add	sp, #8
  4017ee:	ecbd 8b02 	vpop	{d8}
  4017f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ul_previous_time = rtt_read_timer_value(RTT);
  4017f6:	4620      	mov	r0, r4
  4017f8:	4b0f      	ldr	r3, [pc, #60]	; (401838 <RTT_init+0xac>)
  4017fa:	4798      	blx	r3
  4017fc:	4604      	mov	r4, r0
		while (ul_previous_time == rtt_read_timer_value(RTT));
  4017fe:	4e08      	ldr	r6, [pc, #32]	; (401820 <RTT_init+0x94>)
  401800:	4d0d      	ldr	r5, [pc, #52]	; (401838 <RTT_init+0xac>)
  401802:	4630      	mov	r0, r6
  401804:	47a8      	blx	r5
  401806:	4284      	cmp	r4, r0
  401808:	d0fb      	beq.n	401802 <RTT_init+0x76>
		rtt_write_alarm_time(RTT, IrqNPulses+ul_previous_time);
  40180a:	eb04 0108 	add.w	r1, r4, r8
  40180e:	4804      	ldr	r0, [pc, #16]	; (401820 <RTT_init+0x94>)
  401810:	4b0a      	ldr	r3, [pc, #40]	; (40183c <RTT_init+0xb0>)
  401812:	4798      	blx	r3
  401814:	e7d8      	b.n	4017c8 <RTT_init+0x3c>
		rtt_enable_interrupt(RTT, rttIRQSource);
  401816:	4639      	mov	r1, r7
  401818:	4801      	ldr	r0, [pc, #4]	; (401820 <RTT_init+0x94>)
  40181a:	4b09      	ldr	r3, [pc, #36]	; (401840 <RTT_init+0xb4>)
  40181c:	4798      	blx	r3
  40181e:	e7e5      	b.n	4017ec <RTT_init+0x60>
  401820:	400e1830 	.word	0x400e1830
  401824:	004001c1 	.word	0x004001c1
  401828:	47000000 	.word	0x47000000
  40182c:	004001ad 	.word	0x004001ad
  401830:	e000e100 	.word	0xe000e100
  401834:	00400201 	.word	0x00400201
  401838:	00400215 	.word	0x00400215
  40183c:	0040022d 	.word	0x0040022d
  401840:	004001ed 	.word	0x004001ed

00401844 <TC0_Handler>:
void TC0_Handler(void) {
  401844:	b510      	push	{r4, lr}
  401846:	b082      	sub	sp, #8
	volatile uint32_t status = tc_get_status(TC0, 0);
  401848:	2100      	movs	r1, #0
  40184a:	480f      	ldr	r0, [pc, #60]	; (401888 <TC0_Handler+0x44>)
  40184c:	4b0f      	ldr	r3, [pc, #60]	; (40188c <TC0_Handler+0x48>)
  40184e:	4798      	blx	r3
  401850:	9001      	str	r0, [sp, #4]
	trig_pulse(TRIG_PIO, TRIG_PIO_IDX_MASK);
  401852:	4c0f      	ldr	r4, [pc, #60]	; (401890 <TC0_Handler+0x4c>)
  401854:	2140      	movs	r1, #64	; 0x40
  401856:	4620      	mov	r0, r4
  401858:	4b0e      	ldr	r3, [pc, #56]	; (401894 <TC0_Handler+0x50>)
  40185a:	4798      	blx	r3
	pin_toggle(LED_PIO, LED_PIO_IDX_MASK);
  40185c:	2101      	movs	r1, #1
  40185e:	4620      	mov	r0, r4
  401860:	4b0d      	ldr	r3, [pc, #52]	; (401898 <TC0_Handler+0x54>)
  401862:	4798      	blx	r3
	delay_us(280);
  401864:	f243 7051 	movw	r0, #14161	; 0x3751
  401868:	4b0c      	ldr	r3, [pc, #48]	; (40189c <TC0_Handler+0x58>)
  40186a:	4798      	blx	r3
	RTT_init(RTT_FREQ, rtt_alarm, RTT_MR_ALMIEN);
  40186c:	4b0c      	ldr	r3, [pc, #48]	; (4018a0 <TC0_Handler+0x5c>)
  40186e:	edd3 7a00 	vldr	s15, [r3]
  401872:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401876:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  40187a:	ee17 1a90 	vmov	r1, s15
  40187e:	4809      	ldr	r0, [pc, #36]	; (4018a4 <TC0_Handler+0x60>)
  401880:	4b09      	ldr	r3, [pc, #36]	; (4018a8 <TC0_Handler+0x64>)
  401882:	4798      	blx	r3
}
  401884:	b002      	add	sp, #8
  401886:	bd10      	pop	{r4, pc}
  401888:	4000c000 	.word	0x4000c000
  40188c:	004003ed 	.word	0x004003ed
  401890:	400e0e00 	.word	0x400e0e00
  401894:	004015cd 	.word	0x004015cd
  401898:	004015f5 	.word	0x004015f5
  40189c:	20400001 	.word	0x20400001
  4018a0:	20400020 	.word	0x20400020
  4018a4:	46fa0000 	.word	0x46fa0000
  4018a8:	0040178d 	.word	0x0040178d

004018ac <RTT_Handler>:
void RTT_Handler(void) {
  4018ac:	b508      	push	{r3, lr}
	ul_status = rtt_get_status(RTT);
  4018ae:	4805      	ldr	r0, [pc, #20]	; (4018c4 <RTT_Handler+0x18>)
  4018b0:	4b05      	ldr	r3, [pc, #20]	; (4018c8 <RTT_Handler+0x1c>)
  4018b2:	4798      	blx	r3
	if ((ul_status & RTT_SR_ALMS) == RTT_SR_ALMS) {
  4018b4:	f010 0f01 	tst.w	r0, #1
  4018b8:	d003      	beq.n	4018c2 <RTT_Handler+0x16>
		timeout++;
  4018ba:	4a04      	ldr	r2, [pc, #16]	; (4018cc <RTT_Handler+0x20>)
  4018bc:	6813      	ldr	r3, [r2, #0]
  4018be:	3301      	adds	r3, #1
  4018c0:	6013      	str	r3, [r2, #0]
  4018c2:	bd08      	pop	{r3, pc}
  4018c4:	400e1830 	.word	0x400e1830
  4018c8:	00400229 	.word	0x00400229
  4018cc:	20400c78 	.word	0x20400c78

004018d0 <main>:
	}
}


int main (void)
{
  4018d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4018d4:	ed2d 8b02 	vpush	{d8}
  4018d8:	b083      	sub	sp, #12
	board_init();
  4018da:	4b50      	ldr	r3, [pc, #320]	; (401a1c <main+0x14c>)
  4018dc:	4798      	blx	r3
	sysclk_init();
  4018de:	4b50      	ldr	r3, [pc, #320]	; (401a20 <main+0x150>)
  4018e0:	4798      	blx	r3
	
	// Disable the watchdog
	WDT->WDT_MR = WDT_MR_WDDIS;
  4018e2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4018e6:	4b4f      	ldr	r3, [pc, #316]	; (401a24 <main+0x154>)
  4018e8:	605a      	str	r2, [r3, #4]
	delay_init();

	// Init OLED
	gfx_mono_ssd1306_init();
  4018ea:	4b4f      	ldr	r3, [pc, #316]	; (401a28 <main+0x158>)
  4018ec:	4798      	blx	r3
	
	// Init trigger and led
	output_init(TRIG_PIO, TRIG_PIO_IDX_MASK, TRIG_PIO_ID, 0);
  4018ee:	4d4f      	ldr	r5, [pc, #316]	; (401a2c <main+0x15c>)
  4018f0:	2300      	movs	r3, #0
  4018f2:	220a      	movs	r2, #10
  4018f4:	2140      	movs	r1, #64	; 0x40
  4018f6:	4628      	mov	r0, r5
  4018f8:	4c4d      	ldr	r4, [pc, #308]	; (401a30 <main+0x160>)
  4018fa:	47a0      	blx	r4
	output_init(LED_PIO, LED_PIO_IDX_MASK, LED_PIO_ID, 1);
  4018fc:	2301      	movs	r3, #1
  4018fe:	220a      	movs	r2, #10
  401900:	4619      	mov	r1, r3
  401902:	4628      	mov	r0, r5
  401904:	47a0      	blx	r4
	
	// Init echo
	input_init(ECHO_PIO, ECHO_PIO_IDX_MASK, ECHO_PIO_ID, echo_callback, 0);
  401906:	2400      	movs	r4, #0
  401908:	9400      	str	r4, [sp, #0]
  40190a:	4b4a      	ldr	r3, [pc, #296]	; (401a34 <main+0x164>)
  40190c:	2210      	movs	r2, #16
  40190e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401912:	4849      	ldr	r0, [pc, #292]	; (401a38 <main+0x168>)
  401914:	4d49      	ldr	r5, [pc, #292]	; (401a3c <main+0x16c>)
  401916:	47a8      	blx	r5
	
	
	// TC to activate trigger
	TC_init(TC0, ID_TC0, 0, 2);
  401918:	4d49      	ldr	r5, [pc, #292]	; (401a40 <main+0x170>)
  40191a:	2302      	movs	r3, #2
  40191c:	4622      	mov	r2, r4
  40191e:	2117      	movs	r1, #23
  401920:	4628      	mov	r0, r5
  401922:	4e48      	ldr	r6, [pc, #288]	; (401a44 <main+0x174>)
  401924:	47b0      	blx	r6
	tc_start(TC0, 0);
  401926:	4621      	mov	r1, r4
  401928:	4628      	mov	r0, r5
  40192a:	4b47      	ldr	r3, [pc, #284]	; (401a48 <main+0x178>)
  40192c:	4798      	blx	r3
		if (fall_flag){
			rtt_result = rtt_read_timer_value(RTT);
			seconds = (double) rtt_result/(RTT_FREQ*2);
			distance = (double) SPEED*seconds*100;
			
			if (distance <= 400 && distance >= 2){
  40192e:	f04f 0800 	mov.w	r8, #0
  401932:	f8df 9168 	ldr.w	r9, [pc, #360]	; 401a9c <main+0x1cc>
  401936:	e068      	b.n	401a0a <main+0x13a>
				gfx_mono_draw_string("             ", 0, 0, &sysfont);
  401938:	4b44      	ldr	r3, [pc, #272]	; (401a4c <main+0x17c>)
  40193a:	2200      	movs	r2, #0
  40193c:	4611      	mov	r1, r2
  40193e:	4844      	ldr	r0, [pc, #272]	; (401a50 <main+0x180>)
  401940:	4d44      	ldr	r5, [pc, #272]	; (401a54 <main+0x184>)
  401942:	47a8      	blx	r5
				sprintf(str, "%.2lf cm", distance);
  401944:	4632      	mov	r2, r6
  401946:	463b      	mov	r3, r7
  401948:	4943      	ldr	r1, [pc, #268]	; (401a58 <main+0x188>)
  40194a:	4844      	ldr	r0, [pc, #272]	; (401a5c <main+0x18c>)
  40194c:	f8df b150 	ldr.w	fp, [pc, #336]	; 401aa0 <main+0x1d0>
  401950:	47d8      	blx	fp
				gfx_mono_draw_string(str, 0, 0, &sysfont);
  401952:	4b3e      	ldr	r3, [pc, #248]	; (401a4c <main+0x17c>)
  401954:	2200      	movs	r2, #0
  401956:	4611      	mov	r1, r2
  401958:	4840      	ldr	r0, [pc, #256]	; (401a5c <main+0x18c>)
  40195a:	47a8      	blx	r5
				
				timeout = 0;
  40195c:	2300      	movs	r3, #0
  40195e:	6023      	str	r3, [r4, #0]
  401960:	e02f      	b.n	4019c2 <main+0xf2>
			}
			
			if (distance > 400 || distance < 2){
				timeout++;
  401962:	6823      	ldr	r3, [r4, #0]
  401964:	3301      	adds	r3, #1
  401966:	6023      	str	r3, [r4, #0]
			}
			
			fall_flag = 0;
  401968:	2200      	movs	r2, #0
  40196a:	4b3d      	ldr	r3, [pc, #244]	; (401a60 <main+0x190>)
  40196c:	601a      	str	r2, [r3, #0]
		}
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  40196e:	2002      	movs	r0, #2
  401970:	4b3c      	ldr	r3, [pc, #240]	; (401a64 <main+0x194>)
  401972:	4798      	blx	r3
	  
		if (timeout >= 5) {
  401974:	6823      	ldr	r3, [r4, #0]
  401976:	2b04      	cmp	r3, #4
  401978:	dc35      	bgt.n	4019e6 <main+0x116>
		if (fall_flag){
  40197a:	4b39      	ldr	r3, [pc, #228]	; (401a60 <main+0x190>)
  40197c:	681b      	ldr	r3, [r3, #0]
  40197e:	2b00      	cmp	r3, #0
  401980:	d0f5      	beq.n	40196e <main+0x9e>
			rtt_result = rtt_read_timer_value(RTT);
  401982:	4839      	ldr	r0, [pc, #228]	; (401a68 <main+0x198>)
  401984:	4b39      	ldr	r3, [pc, #228]	; (401a6c <main+0x19c>)
  401986:	4798      	blx	r3
			seconds = (double) rtt_result/(RTT_FREQ*2);
  401988:	4b39      	ldr	r3, [pc, #228]	; (401a70 <main+0x1a0>)
  40198a:	4798      	blx	r3
  40198c:	2200      	movs	r2, #0
  40198e:	4b39      	ldr	r3, [pc, #228]	; (401a74 <main+0x1a4>)
  401990:	4d39      	ldr	r5, [pc, #228]	; (401a78 <main+0x1a8>)
  401992:	47a8      	blx	r5
			distance = (double) SPEED*seconds*100;
  401994:	4d39      	ldr	r5, [pc, #228]	; (401a7c <main+0x1ac>)
  401996:	2200      	movs	r2, #0
  401998:	4b39      	ldr	r3, [pc, #228]	; (401a80 <main+0x1b0>)
  40199a:	47a8      	blx	r5
  40199c:	ec53 2b18 	vmov	r2, r3, d8
  4019a0:	47a8      	blx	r5
  4019a2:	4606      	mov	r6, r0
  4019a4:	460f      	mov	r7, r1
			if (distance <= 400 && distance >= 2){
  4019a6:	4642      	mov	r2, r8
  4019a8:	464b      	mov	r3, r9
  4019aa:	4d36      	ldr	r5, [pc, #216]	; (401a84 <main+0x1b4>)
  4019ac:	47a8      	blx	r5
  4019ae:	b140      	cbz	r0, 4019c2 <main+0xf2>
  4019b0:	2200      	movs	r2, #0
  4019b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  4019b6:	4630      	mov	r0, r6
  4019b8:	4639      	mov	r1, r7
  4019ba:	4d33      	ldr	r5, [pc, #204]	; (401a88 <main+0x1b8>)
  4019bc:	47a8      	blx	r5
  4019be:	2800      	cmp	r0, #0
  4019c0:	d1ba      	bne.n	401938 <main+0x68>
			if (distance > 400 || distance < 2){
  4019c2:	4642      	mov	r2, r8
  4019c4:	464b      	mov	r3, r9
  4019c6:	4630      	mov	r0, r6
  4019c8:	4639      	mov	r1, r7
  4019ca:	4d30      	ldr	r5, [pc, #192]	; (401a8c <main+0x1bc>)
  4019cc:	47a8      	blx	r5
  4019ce:	2800      	cmp	r0, #0
  4019d0:	d1c7      	bne.n	401962 <main+0x92>
  4019d2:	2200      	movs	r2, #0
  4019d4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  4019d8:	4630      	mov	r0, r6
  4019da:	4639      	mov	r1, r7
  4019dc:	4d2c      	ldr	r5, [pc, #176]	; (401a90 <main+0x1c0>)
  4019de:	47a8      	blx	r5
  4019e0:	2800      	cmp	r0, #0
  4019e2:	d0c1      	beq.n	401968 <main+0x98>
  4019e4:	e7bd      	b.n	401962 <main+0x92>
			gfx_mono_draw_string("             ", 0, 0, &sysfont);
  4019e6:	4e19      	ldr	r6, [pc, #100]	; (401a4c <main+0x17c>)
  4019e8:	4633      	mov	r3, r6
  4019ea:	2200      	movs	r2, #0
  4019ec:	4611      	mov	r1, r2
  4019ee:	4818      	ldr	r0, [pc, #96]	; (401a50 <main+0x180>)
  4019f0:	4d18      	ldr	r5, [pc, #96]	; (401a54 <main+0x184>)
  4019f2:	47a8      	blx	r5
			sprintf(str, "ERROR");
  4019f4:	4c19      	ldr	r4, [pc, #100]	; (401a5c <main+0x18c>)
  4019f6:	4b27      	ldr	r3, [pc, #156]	; (401a94 <main+0x1c4>)
  4019f8:	6818      	ldr	r0, [r3, #0]
  4019fa:	6020      	str	r0, [r4, #0]
  4019fc:	889b      	ldrh	r3, [r3, #4]
  4019fe:	80a3      	strh	r3, [r4, #4]
			gfx_mono_draw_string(str, 0,0, &sysfont);
  401a00:	4633      	mov	r3, r6
  401a02:	2200      	movs	r2, #0
  401a04:	4611      	mov	r1, r2
  401a06:	4620      	mov	r0, r4
  401a08:	47a8      	blx	r5
			distance = (double) SPEED*seconds*100;
  401a0a:	f04f 0a00 	mov.w	sl, #0
  401a0e:	f8df b094 	ldr.w	fp, [pc, #148]	; 401aa4 <main+0x1d4>
				timeout++;
  401a12:	4c21      	ldr	r4, [pc, #132]	; (401a98 <main+0x1c8>)
  401a14:	ec4b ab18 	vmov	d8, sl, fp
  401a18:	e7af      	b.n	40197a <main+0xaa>
  401a1a:	bf00      	nop
  401a1c:	00400a6d 	.word	0x00400a6d
  401a20:	004009fd 	.word	0x004009fd
  401a24:	400e1850 	.word	0x400e1850
  401a28:	004006dd 	.word	0x004006dd
  401a2c:	400e0e00 	.word	0x400e0e00
  401a30:	00401621 	.word	0x00401621
  401a34:	00401595 	.word	0x00401595
  401a38:	400e1400 	.word	0x400e1400
  401a3c:	0040164d 	.word	0x0040164d
  401a40:	4000c000 	.word	0x4000c000
  401a44:	004016e5 	.word	0x004016e5
  401a48:	004003d5 	.word	0x004003d5
  401a4c:	2040000c 	.word	0x2040000c
  401a50:	00406e18 	.word	0x00406e18
  401a54:	00400645 	.word	0x00400645
  401a58:	00406e28 	.word	0x00406e28
  401a5c:	20400cb0 	.word	0x20400cb0
  401a60:	20400c74 	.word	0x20400c74
  401a64:	00401085 	.word	0x00401085
  401a68:	400e1830 	.word	0x400e1830
  401a6c:	00400215 	.word	0x00400215
  401a70:	00401d4d 	.word	0x00401d4d
  401a74:	40ef4000 	.word	0x40ef4000
  401a78:	0040206d 	.word	0x0040206d
  401a7c:	00401e19 	.word	0x00401e19
  401a80:	40754000 	.word	0x40754000
  401a84:	00402311 	.word	0x00402311
  401a88:	00402325 	.word	0x00402325
  401a8c:	00402339 	.word	0x00402339
  401a90:	004022fd 	.word	0x004022fd
  401a94:	00406e34 	.word	0x00406e34
  401a98:	20400c78 	.word	0x20400c78
  401a9c:	40790000 	.word	0x40790000
  401aa0:	00402439 	.word	0x00402439
  401aa4:	40590000 	.word	0x40590000

00401aa8 <__aeabi_drsub>:
  401aa8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401aac:	e002      	b.n	401ab4 <__adddf3>
  401aae:	bf00      	nop

00401ab0 <__aeabi_dsub>:
  401ab0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401ab4 <__adddf3>:
  401ab4:	b530      	push	{r4, r5, lr}
  401ab6:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401aba:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401abe:	ea94 0f05 	teq	r4, r5
  401ac2:	bf08      	it	eq
  401ac4:	ea90 0f02 	teqeq	r0, r2
  401ac8:	bf1f      	itttt	ne
  401aca:	ea54 0c00 	orrsne.w	ip, r4, r0
  401ace:	ea55 0c02 	orrsne.w	ip, r5, r2
  401ad2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401ad6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401ada:	f000 80e2 	beq.w	401ca2 <__adddf3+0x1ee>
  401ade:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401ae2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401ae6:	bfb8      	it	lt
  401ae8:	426d      	neglt	r5, r5
  401aea:	dd0c      	ble.n	401b06 <__adddf3+0x52>
  401aec:	442c      	add	r4, r5
  401aee:	ea80 0202 	eor.w	r2, r0, r2
  401af2:	ea81 0303 	eor.w	r3, r1, r3
  401af6:	ea82 0000 	eor.w	r0, r2, r0
  401afa:	ea83 0101 	eor.w	r1, r3, r1
  401afe:	ea80 0202 	eor.w	r2, r0, r2
  401b02:	ea81 0303 	eor.w	r3, r1, r3
  401b06:	2d36      	cmp	r5, #54	; 0x36
  401b08:	bf88      	it	hi
  401b0a:	bd30      	pophi	{r4, r5, pc}
  401b0c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401b10:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401b14:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401b18:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401b1c:	d002      	beq.n	401b24 <__adddf3+0x70>
  401b1e:	4240      	negs	r0, r0
  401b20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401b24:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401b28:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401b2c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401b30:	d002      	beq.n	401b38 <__adddf3+0x84>
  401b32:	4252      	negs	r2, r2
  401b34:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401b38:	ea94 0f05 	teq	r4, r5
  401b3c:	f000 80a7 	beq.w	401c8e <__adddf3+0x1da>
  401b40:	f1a4 0401 	sub.w	r4, r4, #1
  401b44:	f1d5 0e20 	rsbs	lr, r5, #32
  401b48:	db0d      	blt.n	401b66 <__adddf3+0xb2>
  401b4a:	fa02 fc0e 	lsl.w	ip, r2, lr
  401b4e:	fa22 f205 	lsr.w	r2, r2, r5
  401b52:	1880      	adds	r0, r0, r2
  401b54:	f141 0100 	adc.w	r1, r1, #0
  401b58:	fa03 f20e 	lsl.w	r2, r3, lr
  401b5c:	1880      	adds	r0, r0, r2
  401b5e:	fa43 f305 	asr.w	r3, r3, r5
  401b62:	4159      	adcs	r1, r3
  401b64:	e00e      	b.n	401b84 <__adddf3+0xd0>
  401b66:	f1a5 0520 	sub.w	r5, r5, #32
  401b6a:	f10e 0e20 	add.w	lr, lr, #32
  401b6e:	2a01      	cmp	r2, #1
  401b70:	fa03 fc0e 	lsl.w	ip, r3, lr
  401b74:	bf28      	it	cs
  401b76:	f04c 0c02 	orrcs.w	ip, ip, #2
  401b7a:	fa43 f305 	asr.w	r3, r3, r5
  401b7e:	18c0      	adds	r0, r0, r3
  401b80:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401b84:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401b88:	d507      	bpl.n	401b9a <__adddf3+0xe6>
  401b8a:	f04f 0e00 	mov.w	lr, #0
  401b8e:	f1dc 0c00 	rsbs	ip, ip, #0
  401b92:	eb7e 0000 	sbcs.w	r0, lr, r0
  401b96:	eb6e 0101 	sbc.w	r1, lr, r1
  401b9a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401b9e:	d31b      	bcc.n	401bd8 <__adddf3+0x124>
  401ba0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401ba4:	d30c      	bcc.n	401bc0 <__adddf3+0x10c>
  401ba6:	0849      	lsrs	r1, r1, #1
  401ba8:	ea5f 0030 	movs.w	r0, r0, rrx
  401bac:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401bb0:	f104 0401 	add.w	r4, r4, #1
  401bb4:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401bb8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401bbc:	f080 809a 	bcs.w	401cf4 <__adddf3+0x240>
  401bc0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401bc4:	bf08      	it	eq
  401bc6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401bca:	f150 0000 	adcs.w	r0, r0, #0
  401bce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401bd2:	ea41 0105 	orr.w	r1, r1, r5
  401bd6:	bd30      	pop	{r4, r5, pc}
  401bd8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401bdc:	4140      	adcs	r0, r0
  401bde:	eb41 0101 	adc.w	r1, r1, r1
  401be2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401be6:	f1a4 0401 	sub.w	r4, r4, #1
  401bea:	d1e9      	bne.n	401bc0 <__adddf3+0x10c>
  401bec:	f091 0f00 	teq	r1, #0
  401bf0:	bf04      	itt	eq
  401bf2:	4601      	moveq	r1, r0
  401bf4:	2000      	moveq	r0, #0
  401bf6:	fab1 f381 	clz	r3, r1
  401bfa:	bf08      	it	eq
  401bfc:	3320      	addeq	r3, #32
  401bfe:	f1a3 030b 	sub.w	r3, r3, #11
  401c02:	f1b3 0220 	subs.w	r2, r3, #32
  401c06:	da0c      	bge.n	401c22 <__adddf3+0x16e>
  401c08:	320c      	adds	r2, #12
  401c0a:	dd08      	ble.n	401c1e <__adddf3+0x16a>
  401c0c:	f102 0c14 	add.w	ip, r2, #20
  401c10:	f1c2 020c 	rsb	r2, r2, #12
  401c14:	fa01 f00c 	lsl.w	r0, r1, ip
  401c18:	fa21 f102 	lsr.w	r1, r1, r2
  401c1c:	e00c      	b.n	401c38 <__adddf3+0x184>
  401c1e:	f102 0214 	add.w	r2, r2, #20
  401c22:	bfd8      	it	le
  401c24:	f1c2 0c20 	rsble	ip, r2, #32
  401c28:	fa01 f102 	lsl.w	r1, r1, r2
  401c2c:	fa20 fc0c 	lsr.w	ip, r0, ip
  401c30:	bfdc      	itt	le
  401c32:	ea41 010c 	orrle.w	r1, r1, ip
  401c36:	4090      	lslle	r0, r2
  401c38:	1ae4      	subs	r4, r4, r3
  401c3a:	bfa2      	ittt	ge
  401c3c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401c40:	4329      	orrge	r1, r5
  401c42:	bd30      	popge	{r4, r5, pc}
  401c44:	ea6f 0404 	mvn.w	r4, r4
  401c48:	3c1f      	subs	r4, #31
  401c4a:	da1c      	bge.n	401c86 <__adddf3+0x1d2>
  401c4c:	340c      	adds	r4, #12
  401c4e:	dc0e      	bgt.n	401c6e <__adddf3+0x1ba>
  401c50:	f104 0414 	add.w	r4, r4, #20
  401c54:	f1c4 0220 	rsb	r2, r4, #32
  401c58:	fa20 f004 	lsr.w	r0, r0, r4
  401c5c:	fa01 f302 	lsl.w	r3, r1, r2
  401c60:	ea40 0003 	orr.w	r0, r0, r3
  401c64:	fa21 f304 	lsr.w	r3, r1, r4
  401c68:	ea45 0103 	orr.w	r1, r5, r3
  401c6c:	bd30      	pop	{r4, r5, pc}
  401c6e:	f1c4 040c 	rsb	r4, r4, #12
  401c72:	f1c4 0220 	rsb	r2, r4, #32
  401c76:	fa20 f002 	lsr.w	r0, r0, r2
  401c7a:	fa01 f304 	lsl.w	r3, r1, r4
  401c7e:	ea40 0003 	orr.w	r0, r0, r3
  401c82:	4629      	mov	r1, r5
  401c84:	bd30      	pop	{r4, r5, pc}
  401c86:	fa21 f004 	lsr.w	r0, r1, r4
  401c8a:	4629      	mov	r1, r5
  401c8c:	bd30      	pop	{r4, r5, pc}
  401c8e:	f094 0f00 	teq	r4, #0
  401c92:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401c96:	bf06      	itte	eq
  401c98:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401c9c:	3401      	addeq	r4, #1
  401c9e:	3d01      	subne	r5, #1
  401ca0:	e74e      	b.n	401b40 <__adddf3+0x8c>
  401ca2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401ca6:	bf18      	it	ne
  401ca8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401cac:	d029      	beq.n	401d02 <__adddf3+0x24e>
  401cae:	ea94 0f05 	teq	r4, r5
  401cb2:	bf08      	it	eq
  401cb4:	ea90 0f02 	teqeq	r0, r2
  401cb8:	d005      	beq.n	401cc6 <__adddf3+0x212>
  401cba:	ea54 0c00 	orrs.w	ip, r4, r0
  401cbe:	bf04      	itt	eq
  401cc0:	4619      	moveq	r1, r3
  401cc2:	4610      	moveq	r0, r2
  401cc4:	bd30      	pop	{r4, r5, pc}
  401cc6:	ea91 0f03 	teq	r1, r3
  401cca:	bf1e      	ittt	ne
  401ccc:	2100      	movne	r1, #0
  401cce:	2000      	movne	r0, #0
  401cd0:	bd30      	popne	{r4, r5, pc}
  401cd2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401cd6:	d105      	bne.n	401ce4 <__adddf3+0x230>
  401cd8:	0040      	lsls	r0, r0, #1
  401cda:	4149      	adcs	r1, r1
  401cdc:	bf28      	it	cs
  401cde:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401ce2:	bd30      	pop	{r4, r5, pc}
  401ce4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401ce8:	bf3c      	itt	cc
  401cea:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401cee:	bd30      	popcc	{r4, r5, pc}
  401cf0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401cf4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401cf8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401cfc:	f04f 0000 	mov.w	r0, #0
  401d00:	bd30      	pop	{r4, r5, pc}
  401d02:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401d06:	bf1a      	itte	ne
  401d08:	4619      	movne	r1, r3
  401d0a:	4610      	movne	r0, r2
  401d0c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401d10:	bf1c      	itt	ne
  401d12:	460b      	movne	r3, r1
  401d14:	4602      	movne	r2, r0
  401d16:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401d1a:	bf06      	itte	eq
  401d1c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401d20:	ea91 0f03 	teqeq	r1, r3
  401d24:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401d28:	bd30      	pop	{r4, r5, pc}
  401d2a:	bf00      	nop

00401d2c <__aeabi_ui2d>:
  401d2c:	f090 0f00 	teq	r0, #0
  401d30:	bf04      	itt	eq
  401d32:	2100      	moveq	r1, #0
  401d34:	4770      	bxeq	lr
  401d36:	b530      	push	{r4, r5, lr}
  401d38:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401d3c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401d40:	f04f 0500 	mov.w	r5, #0
  401d44:	f04f 0100 	mov.w	r1, #0
  401d48:	e750      	b.n	401bec <__adddf3+0x138>
  401d4a:	bf00      	nop

00401d4c <__aeabi_i2d>:
  401d4c:	f090 0f00 	teq	r0, #0
  401d50:	bf04      	itt	eq
  401d52:	2100      	moveq	r1, #0
  401d54:	4770      	bxeq	lr
  401d56:	b530      	push	{r4, r5, lr}
  401d58:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401d5c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401d60:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401d64:	bf48      	it	mi
  401d66:	4240      	negmi	r0, r0
  401d68:	f04f 0100 	mov.w	r1, #0
  401d6c:	e73e      	b.n	401bec <__adddf3+0x138>
  401d6e:	bf00      	nop

00401d70 <__aeabi_f2d>:
  401d70:	0042      	lsls	r2, r0, #1
  401d72:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401d76:	ea4f 0131 	mov.w	r1, r1, rrx
  401d7a:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401d7e:	bf1f      	itttt	ne
  401d80:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401d84:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401d88:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401d8c:	4770      	bxne	lr
  401d8e:	f092 0f00 	teq	r2, #0
  401d92:	bf14      	ite	ne
  401d94:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401d98:	4770      	bxeq	lr
  401d9a:	b530      	push	{r4, r5, lr}
  401d9c:	f44f 7460 	mov.w	r4, #896	; 0x380
  401da0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401da4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401da8:	e720      	b.n	401bec <__adddf3+0x138>
  401daa:	bf00      	nop

00401dac <__aeabi_ul2d>:
  401dac:	ea50 0201 	orrs.w	r2, r0, r1
  401db0:	bf08      	it	eq
  401db2:	4770      	bxeq	lr
  401db4:	b530      	push	{r4, r5, lr}
  401db6:	f04f 0500 	mov.w	r5, #0
  401dba:	e00a      	b.n	401dd2 <__aeabi_l2d+0x16>

00401dbc <__aeabi_l2d>:
  401dbc:	ea50 0201 	orrs.w	r2, r0, r1
  401dc0:	bf08      	it	eq
  401dc2:	4770      	bxeq	lr
  401dc4:	b530      	push	{r4, r5, lr}
  401dc6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401dca:	d502      	bpl.n	401dd2 <__aeabi_l2d+0x16>
  401dcc:	4240      	negs	r0, r0
  401dce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401dd2:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401dd6:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401dda:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401dde:	f43f aedc 	beq.w	401b9a <__adddf3+0xe6>
  401de2:	f04f 0203 	mov.w	r2, #3
  401de6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401dea:	bf18      	it	ne
  401dec:	3203      	addne	r2, #3
  401dee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401df2:	bf18      	it	ne
  401df4:	3203      	addne	r2, #3
  401df6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401dfa:	f1c2 0320 	rsb	r3, r2, #32
  401dfe:	fa00 fc03 	lsl.w	ip, r0, r3
  401e02:	fa20 f002 	lsr.w	r0, r0, r2
  401e06:	fa01 fe03 	lsl.w	lr, r1, r3
  401e0a:	ea40 000e 	orr.w	r0, r0, lr
  401e0e:	fa21 f102 	lsr.w	r1, r1, r2
  401e12:	4414      	add	r4, r2
  401e14:	e6c1      	b.n	401b9a <__adddf3+0xe6>
  401e16:	bf00      	nop

00401e18 <__aeabi_dmul>:
  401e18:	b570      	push	{r4, r5, r6, lr}
  401e1a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401e1e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401e22:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401e26:	bf1d      	ittte	ne
  401e28:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401e2c:	ea94 0f0c 	teqne	r4, ip
  401e30:	ea95 0f0c 	teqne	r5, ip
  401e34:	f000 f8de 	bleq	401ff4 <__aeabi_dmul+0x1dc>
  401e38:	442c      	add	r4, r5
  401e3a:	ea81 0603 	eor.w	r6, r1, r3
  401e3e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401e42:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401e46:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401e4a:	bf18      	it	ne
  401e4c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401e50:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401e54:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401e58:	d038      	beq.n	401ecc <__aeabi_dmul+0xb4>
  401e5a:	fba0 ce02 	umull	ip, lr, r0, r2
  401e5e:	f04f 0500 	mov.w	r5, #0
  401e62:	fbe1 e502 	umlal	lr, r5, r1, r2
  401e66:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401e6a:	fbe0 e503 	umlal	lr, r5, r0, r3
  401e6e:	f04f 0600 	mov.w	r6, #0
  401e72:	fbe1 5603 	umlal	r5, r6, r1, r3
  401e76:	f09c 0f00 	teq	ip, #0
  401e7a:	bf18      	it	ne
  401e7c:	f04e 0e01 	orrne.w	lr, lr, #1
  401e80:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401e84:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401e88:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401e8c:	d204      	bcs.n	401e98 <__aeabi_dmul+0x80>
  401e8e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401e92:	416d      	adcs	r5, r5
  401e94:	eb46 0606 	adc.w	r6, r6, r6
  401e98:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401e9c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401ea0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401ea4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401ea8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401eac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401eb0:	bf88      	it	hi
  401eb2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401eb6:	d81e      	bhi.n	401ef6 <__aeabi_dmul+0xde>
  401eb8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401ebc:	bf08      	it	eq
  401ebe:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401ec2:	f150 0000 	adcs.w	r0, r0, #0
  401ec6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401eca:	bd70      	pop	{r4, r5, r6, pc}
  401ecc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401ed0:	ea46 0101 	orr.w	r1, r6, r1
  401ed4:	ea40 0002 	orr.w	r0, r0, r2
  401ed8:	ea81 0103 	eor.w	r1, r1, r3
  401edc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401ee0:	bfc2      	ittt	gt
  401ee2:	ebd4 050c 	rsbsgt	r5, r4, ip
  401ee6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401eea:	bd70      	popgt	{r4, r5, r6, pc}
  401eec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401ef0:	f04f 0e00 	mov.w	lr, #0
  401ef4:	3c01      	subs	r4, #1
  401ef6:	f300 80ab 	bgt.w	402050 <__aeabi_dmul+0x238>
  401efa:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401efe:	bfde      	ittt	le
  401f00:	2000      	movle	r0, #0
  401f02:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401f06:	bd70      	pople	{r4, r5, r6, pc}
  401f08:	f1c4 0400 	rsb	r4, r4, #0
  401f0c:	3c20      	subs	r4, #32
  401f0e:	da35      	bge.n	401f7c <__aeabi_dmul+0x164>
  401f10:	340c      	adds	r4, #12
  401f12:	dc1b      	bgt.n	401f4c <__aeabi_dmul+0x134>
  401f14:	f104 0414 	add.w	r4, r4, #20
  401f18:	f1c4 0520 	rsb	r5, r4, #32
  401f1c:	fa00 f305 	lsl.w	r3, r0, r5
  401f20:	fa20 f004 	lsr.w	r0, r0, r4
  401f24:	fa01 f205 	lsl.w	r2, r1, r5
  401f28:	ea40 0002 	orr.w	r0, r0, r2
  401f2c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401f30:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401f34:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401f38:	fa21 f604 	lsr.w	r6, r1, r4
  401f3c:	eb42 0106 	adc.w	r1, r2, r6
  401f40:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401f44:	bf08      	it	eq
  401f46:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401f4a:	bd70      	pop	{r4, r5, r6, pc}
  401f4c:	f1c4 040c 	rsb	r4, r4, #12
  401f50:	f1c4 0520 	rsb	r5, r4, #32
  401f54:	fa00 f304 	lsl.w	r3, r0, r4
  401f58:	fa20 f005 	lsr.w	r0, r0, r5
  401f5c:	fa01 f204 	lsl.w	r2, r1, r4
  401f60:	ea40 0002 	orr.w	r0, r0, r2
  401f64:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401f68:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401f6c:	f141 0100 	adc.w	r1, r1, #0
  401f70:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401f74:	bf08      	it	eq
  401f76:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401f7a:	bd70      	pop	{r4, r5, r6, pc}
  401f7c:	f1c4 0520 	rsb	r5, r4, #32
  401f80:	fa00 f205 	lsl.w	r2, r0, r5
  401f84:	ea4e 0e02 	orr.w	lr, lr, r2
  401f88:	fa20 f304 	lsr.w	r3, r0, r4
  401f8c:	fa01 f205 	lsl.w	r2, r1, r5
  401f90:	ea43 0302 	orr.w	r3, r3, r2
  401f94:	fa21 f004 	lsr.w	r0, r1, r4
  401f98:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401f9c:	fa21 f204 	lsr.w	r2, r1, r4
  401fa0:	ea20 0002 	bic.w	r0, r0, r2
  401fa4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401fa8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401fac:	bf08      	it	eq
  401fae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401fb2:	bd70      	pop	{r4, r5, r6, pc}
  401fb4:	f094 0f00 	teq	r4, #0
  401fb8:	d10f      	bne.n	401fda <__aeabi_dmul+0x1c2>
  401fba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401fbe:	0040      	lsls	r0, r0, #1
  401fc0:	eb41 0101 	adc.w	r1, r1, r1
  401fc4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401fc8:	bf08      	it	eq
  401fca:	3c01      	subeq	r4, #1
  401fcc:	d0f7      	beq.n	401fbe <__aeabi_dmul+0x1a6>
  401fce:	ea41 0106 	orr.w	r1, r1, r6
  401fd2:	f095 0f00 	teq	r5, #0
  401fd6:	bf18      	it	ne
  401fd8:	4770      	bxne	lr
  401fda:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401fde:	0052      	lsls	r2, r2, #1
  401fe0:	eb43 0303 	adc.w	r3, r3, r3
  401fe4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401fe8:	bf08      	it	eq
  401fea:	3d01      	subeq	r5, #1
  401fec:	d0f7      	beq.n	401fde <__aeabi_dmul+0x1c6>
  401fee:	ea43 0306 	orr.w	r3, r3, r6
  401ff2:	4770      	bx	lr
  401ff4:	ea94 0f0c 	teq	r4, ip
  401ff8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401ffc:	bf18      	it	ne
  401ffe:	ea95 0f0c 	teqne	r5, ip
  402002:	d00c      	beq.n	40201e <__aeabi_dmul+0x206>
  402004:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402008:	bf18      	it	ne
  40200a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40200e:	d1d1      	bne.n	401fb4 <__aeabi_dmul+0x19c>
  402010:	ea81 0103 	eor.w	r1, r1, r3
  402014:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402018:	f04f 0000 	mov.w	r0, #0
  40201c:	bd70      	pop	{r4, r5, r6, pc}
  40201e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402022:	bf06      	itte	eq
  402024:	4610      	moveq	r0, r2
  402026:	4619      	moveq	r1, r3
  402028:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40202c:	d019      	beq.n	402062 <__aeabi_dmul+0x24a>
  40202e:	ea94 0f0c 	teq	r4, ip
  402032:	d102      	bne.n	40203a <__aeabi_dmul+0x222>
  402034:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  402038:	d113      	bne.n	402062 <__aeabi_dmul+0x24a>
  40203a:	ea95 0f0c 	teq	r5, ip
  40203e:	d105      	bne.n	40204c <__aeabi_dmul+0x234>
  402040:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  402044:	bf1c      	itt	ne
  402046:	4610      	movne	r0, r2
  402048:	4619      	movne	r1, r3
  40204a:	d10a      	bne.n	402062 <__aeabi_dmul+0x24a>
  40204c:	ea81 0103 	eor.w	r1, r1, r3
  402050:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402054:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402058:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  40205c:	f04f 0000 	mov.w	r0, #0
  402060:	bd70      	pop	{r4, r5, r6, pc}
  402062:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402066:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40206a:	bd70      	pop	{r4, r5, r6, pc}

0040206c <__aeabi_ddiv>:
  40206c:	b570      	push	{r4, r5, r6, lr}
  40206e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402072:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  402076:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40207a:	bf1d      	ittte	ne
  40207c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402080:	ea94 0f0c 	teqne	r4, ip
  402084:	ea95 0f0c 	teqne	r5, ip
  402088:	f000 f8a7 	bleq	4021da <__aeabi_ddiv+0x16e>
  40208c:	eba4 0405 	sub.w	r4, r4, r5
  402090:	ea81 0e03 	eor.w	lr, r1, r3
  402094:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402098:	ea4f 3101 	mov.w	r1, r1, lsl #12
  40209c:	f000 8088 	beq.w	4021b0 <__aeabi_ddiv+0x144>
  4020a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4020a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4020a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4020ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4020b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4020b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4020b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4020bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4020c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4020c4:	429d      	cmp	r5, r3
  4020c6:	bf08      	it	eq
  4020c8:	4296      	cmpeq	r6, r2
  4020ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4020ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4020d2:	d202      	bcs.n	4020da <__aeabi_ddiv+0x6e>
  4020d4:	085b      	lsrs	r3, r3, #1
  4020d6:	ea4f 0232 	mov.w	r2, r2, rrx
  4020da:	1ab6      	subs	r6, r6, r2
  4020dc:	eb65 0503 	sbc.w	r5, r5, r3
  4020e0:	085b      	lsrs	r3, r3, #1
  4020e2:	ea4f 0232 	mov.w	r2, r2, rrx
  4020e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4020ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4020ee:	ebb6 0e02 	subs.w	lr, r6, r2
  4020f2:	eb75 0e03 	sbcs.w	lr, r5, r3
  4020f6:	bf22      	ittt	cs
  4020f8:	1ab6      	subcs	r6, r6, r2
  4020fa:	4675      	movcs	r5, lr
  4020fc:	ea40 000c 	orrcs.w	r0, r0, ip
  402100:	085b      	lsrs	r3, r3, #1
  402102:	ea4f 0232 	mov.w	r2, r2, rrx
  402106:	ebb6 0e02 	subs.w	lr, r6, r2
  40210a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40210e:	bf22      	ittt	cs
  402110:	1ab6      	subcs	r6, r6, r2
  402112:	4675      	movcs	r5, lr
  402114:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  402118:	085b      	lsrs	r3, r3, #1
  40211a:	ea4f 0232 	mov.w	r2, r2, rrx
  40211e:	ebb6 0e02 	subs.w	lr, r6, r2
  402122:	eb75 0e03 	sbcs.w	lr, r5, r3
  402126:	bf22      	ittt	cs
  402128:	1ab6      	subcs	r6, r6, r2
  40212a:	4675      	movcs	r5, lr
  40212c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402130:	085b      	lsrs	r3, r3, #1
  402132:	ea4f 0232 	mov.w	r2, r2, rrx
  402136:	ebb6 0e02 	subs.w	lr, r6, r2
  40213a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40213e:	bf22      	ittt	cs
  402140:	1ab6      	subcs	r6, r6, r2
  402142:	4675      	movcs	r5, lr
  402144:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  402148:	ea55 0e06 	orrs.w	lr, r5, r6
  40214c:	d018      	beq.n	402180 <__aeabi_ddiv+0x114>
  40214e:	ea4f 1505 	mov.w	r5, r5, lsl #4
  402152:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  402156:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40215a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40215e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  402162:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  402166:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40216a:	d1c0      	bne.n	4020ee <__aeabi_ddiv+0x82>
  40216c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402170:	d10b      	bne.n	40218a <__aeabi_ddiv+0x11e>
  402172:	ea41 0100 	orr.w	r1, r1, r0
  402176:	f04f 0000 	mov.w	r0, #0
  40217a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40217e:	e7b6      	b.n	4020ee <__aeabi_ddiv+0x82>
  402180:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402184:	bf04      	itt	eq
  402186:	4301      	orreq	r1, r0
  402188:	2000      	moveq	r0, #0
  40218a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40218e:	bf88      	it	hi
  402190:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402194:	f63f aeaf 	bhi.w	401ef6 <__aeabi_dmul+0xde>
  402198:	ebb5 0c03 	subs.w	ip, r5, r3
  40219c:	bf04      	itt	eq
  40219e:	ebb6 0c02 	subseq.w	ip, r6, r2
  4021a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4021a6:	f150 0000 	adcs.w	r0, r0, #0
  4021aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4021ae:	bd70      	pop	{r4, r5, r6, pc}
  4021b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4021b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4021b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4021bc:	bfc2      	ittt	gt
  4021be:	ebd4 050c 	rsbsgt	r5, r4, ip
  4021c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4021c6:	bd70      	popgt	{r4, r5, r6, pc}
  4021c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4021cc:	f04f 0e00 	mov.w	lr, #0
  4021d0:	3c01      	subs	r4, #1
  4021d2:	e690      	b.n	401ef6 <__aeabi_dmul+0xde>
  4021d4:	ea45 0e06 	orr.w	lr, r5, r6
  4021d8:	e68d      	b.n	401ef6 <__aeabi_dmul+0xde>
  4021da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4021de:	ea94 0f0c 	teq	r4, ip
  4021e2:	bf08      	it	eq
  4021e4:	ea95 0f0c 	teqeq	r5, ip
  4021e8:	f43f af3b 	beq.w	402062 <__aeabi_dmul+0x24a>
  4021ec:	ea94 0f0c 	teq	r4, ip
  4021f0:	d10a      	bne.n	402208 <__aeabi_ddiv+0x19c>
  4021f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4021f6:	f47f af34 	bne.w	402062 <__aeabi_dmul+0x24a>
  4021fa:	ea95 0f0c 	teq	r5, ip
  4021fe:	f47f af25 	bne.w	40204c <__aeabi_dmul+0x234>
  402202:	4610      	mov	r0, r2
  402204:	4619      	mov	r1, r3
  402206:	e72c      	b.n	402062 <__aeabi_dmul+0x24a>
  402208:	ea95 0f0c 	teq	r5, ip
  40220c:	d106      	bne.n	40221c <__aeabi_ddiv+0x1b0>
  40220e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402212:	f43f aefd 	beq.w	402010 <__aeabi_dmul+0x1f8>
  402216:	4610      	mov	r0, r2
  402218:	4619      	mov	r1, r3
  40221a:	e722      	b.n	402062 <__aeabi_dmul+0x24a>
  40221c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402220:	bf18      	it	ne
  402222:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402226:	f47f aec5 	bne.w	401fb4 <__aeabi_dmul+0x19c>
  40222a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40222e:	f47f af0d 	bne.w	40204c <__aeabi_dmul+0x234>
  402232:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  402236:	f47f aeeb 	bne.w	402010 <__aeabi_dmul+0x1f8>
  40223a:	e712      	b.n	402062 <__aeabi_dmul+0x24a>

0040223c <__gedf2>:
  40223c:	f04f 3cff 	mov.w	ip, #4294967295
  402240:	e006      	b.n	402250 <__cmpdf2+0x4>
  402242:	bf00      	nop

00402244 <__ledf2>:
  402244:	f04f 0c01 	mov.w	ip, #1
  402248:	e002      	b.n	402250 <__cmpdf2+0x4>
  40224a:	bf00      	nop

0040224c <__cmpdf2>:
  40224c:	f04f 0c01 	mov.w	ip, #1
  402250:	f84d cd04 	str.w	ip, [sp, #-4]!
  402254:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  402258:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40225c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  402260:	bf18      	it	ne
  402262:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  402266:	d01b      	beq.n	4022a0 <__cmpdf2+0x54>
  402268:	b001      	add	sp, #4
  40226a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40226e:	bf0c      	ite	eq
  402270:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  402274:	ea91 0f03 	teqne	r1, r3
  402278:	bf02      	ittt	eq
  40227a:	ea90 0f02 	teqeq	r0, r2
  40227e:	2000      	moveq	r0, #0
  402280:	4770      	bxeq	lr
  402282:	f110 0f00 	cmn.w	r0, #0
  402286:	ea91 0f03 	teq	r1, r3
  40228a:	bf58      	it	pl
  40228c:	4299      	cmppl	r1, r3
  40228e:	bf08      	it	eq
  402290:	4290      	cmpeq	r0, r2
  402292:	bf2c      	ite	cs
  402294:	17d8      	asrcs	r0, r3, #31
  402296:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  40229a:	f040 0001 	orr.w	r0, r0, #1
  40229e:	4770      	bx	lr
  4022a0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4022a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4022a8:	d102      	bne.n	4022b0 <__cmpdf2+0x64>
  4022aa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4022ae:	d107      	bne.n	4022c0 <__cmpdf2+0x74>
  4022b0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4022b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4022b8:	d1d6      	bne.n	402268 <__cmpdf2+0x1c>
  4022ba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4022be:	d0d3      	beq.n	402268 <__cmpdf2+0x1c>
  4022c0:	f85d 0b04 	ldr.w	r0, [sp], #4
  4022c4:	4770      	bx	lr
  4022c6:	bf00      	nop

004022c8 <__aeabi_cdrcmple>:
  4022c8:	4684      	mov	ip, r0
  4022ca:	4610      	mov	r0, r2
  4022cc:	4662      	mov	r2, ip
  4022ce:	468c      	mov	ip, r1
  4022d0:	4619      	mov	r1, r3
  4022d2:	4663      	mov	r3, ip
  4022d4:	e000      	b.n	4022d8 <__aeabi_cdcmpeq>
  4022d6:	bf00      	nop

004022d8 <__aeabi_cdcmpeq>:
  4022d8:	b501      	push	{r0, lr}
  4022da:	f7ff ffb7 	bl	40224c <__cmpdf2>
  4022de:	2800      	cmp	r0, #0
  4022e0:	bf48      	it	mi
  4022e2:	f110 0f00 	cmnmi.w	r0, #0
  4022e6:	bd01      	pop	{r0, pc}

004022e8 <__aeabi_dcmpeq>:
  4022e8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4022ec:	f7ff fff4 	bl	4022d8 <__aeabi_cdcmpeq>
  4022f0:	bf0c      	ite	eq
  4022f2:	2001      	moveq	r0, #1
  4022f4:	2000      	movne	r0, #0
  4022f6:	f85d fb08 	ldr.w	pc, [sp], #8
  4022fa:	bf00      	nop

004022fc <__aeabi_dcmplt>:
  4022fc:	f84d ed08 	str.w	lr, [sp, #-8]!
  402300:	f7ff ffea 	bl	4022d8 <__aeabi_cdcmpeq>
  402304:	bf34      	ite	cc
  402306:	2001      	movcc	r0, #1
  402308:	2000      	movcs	r0, #0
  40230a:	f85d fb08 	ldr.w	pc, [sp], #8
  40230e:	bf00      	nop

00402310 <__aeabi_dcmple>:
  402310:	f84d ed08 	str.w	lr, [sp, #-8]!
  402314:	f7ff ffe0 	bl	4022d8 <__aeabi_cdcmpeq>
  402318:	bf94      	ite	ls
  40231a:	2001      	movls	r0, #1
  40231c:	2000      	movhi	r0, #0
  40231e:	f85d fb08 	ldr.w	pc, [sp], #8
  402322:	bf00      	nop

00402324 <__aeabi_dcmpge>:
  402324:	f84d ed08 	str.w	lr, [sp, #-8]!
  402328:	f7ff ffce 	bl	4022c8 <__aeabi_cdrcmple>
  40232c:	bf94      	ite	ls
  40232e:	2001      	movls	r0, #1
  402330:	2000      	movhi	r0, #0
  402332:	f85d fb08 	ldr.w	pc, [sp], #8
  402336:	bf00      	nop

00402338 <__aeabi_dcmpgt>:
  402338:	f84d ed08 	str.w	lr, [sp, #-8]!
  40233c:	f7ff ffc4 	bl	4022c8 <__aeabi_cdrcmple>
  402340:	bf34      	ite	cc
  402342:	2001      	movcc	r0, #1
  402344:	2000      	movcs	r0, #0
  402346:	f85d fb08 	ldr.w	pc, [sp], #8
  40234a:	bf00      	nop

0040234c <__libc_init_array>:
  40234c:	b570      	push	{r4, r5, r6, lr}
  40234e:	4e0f      	ldr	r6, [pc, #60]	; (40238c <__libc_init_array+0x40>)
  402350:	4d0f      	ldr	r5, [pc, #60]	; (402390 <__libc_init_array+0x44>)
  402352:	1b76      	subs	r6, r6, r5
  402354:	10b6      	asrs	r6, r6, #2
  402356:	bf18      	it	ne
  402358:	2400      	movne	r4, #0
  40235a:	d005      	beq.n	402368 <__libc_init_array+0x1c>
  40235c:	3401      	adds	r4, #1
  40235e:	f855 3b04 	ldr.w	r3, [r5], #4
  402362:	4798      	blx	r3
  402364:	42a6      	cmp	r6, r4
  402366:	d1f9      	bne.n	40235c <__libc_init_array+0x10>
  402368:	4e0a      	ldr	r6, [pc, #40]	; (402394 <__libc_init_array+0x48>)
  40236a:	4d0b      	ldr	r5, [pc, #44]	; (402398 <__libc_init_array+0x4c>)
  40236c:	1b76      	subs	r6, r6, r5
  40236e:	f004 feab 	bl	4070c8 <_init>
  402372:	10b6      	asrs	r6, r6, #2
  402374:	bf18      	it	ne
  402376:	2400      	movne	r4, #0
  402378:	d006      	beq.n	402388 <__libc_init_array+0x3c>
  40237a:	3401      	adds	r4, #1
  40237c:	f855 3b04 	ldr.w	r3, [r5], #4
  402380:	4798      	blx	r3
  402382:	42a6      	cmp	r6, r4
  402384:	d1f9      	bne.n	40237a <__libc_init_array+0x2e>
  402386:	bd70      	pop	{r4, r5, r6, pc}
  402388:	bd70      	pop	{r4, r5, r6, pc}
  40238a:	bf00      	nop
  40238c:	004070d4 	.word	0x004070d4
  402390:	004070d4 	.word	0x004070d4
  402394:	004070dc 	.word	0x004070dc
  402398:	004070d4 	.word	0x004070d4

0040239c <memset>:
  40239c:	b470      	push	{r4, r5, r6}
  40239e:	0786      	lsls	r6, r0, #30
  4023a0:	d046      	beq.n	402430 <memset+0x94>
  4023a2:	1e54      	subs	r4, r2, #1
  4023a4:	2a00      	cmp	r2, #0
  4023a6:	d041      	beq.n	40242c <memset+0x90>
  4023a8:	b2ca      	uxtb	r2, r1
  4023aa:	4603      	mov	r3, r0
  4023ac:	e002      	b.n	4023b4 <memset+0x18>
  4023ae:	f114 34ff 	adds.w	r4, r4, #4294967295
  4023b2:	d33b      	bcc.n	40242c <memset+0x90>
  4023b4:	f803 2b01 	strb.w	r2, [r3], #1
  4023b8:	079d      	lsls	r5, r3, #30
  4023ba:	d1f8      	bne.n	4023ae <memset+0x12>
  4023bc:	2c03      	cmp	r4, #3
  4023be:	d92e      	bls.n	40241e <memset+0x82>
  4023c0:	b2cd      	uxtb	r5, r1
  4023c2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4023c6:	2c0f      	cmp	r4, #15
  4023c8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4023cc:	d919      	bls.n	402402 <memset+0x66>
  4023ce:	f103 0210 	add.w	r2, r3, #16
  4023d2:	4626      	mov	r6, r4
  4023d4:	3e10      	subs	r6, #16
  4023d6:	2e0f      	cmp	r6, #15
  4023d8:	f842 5c10 	str.w	r5, [r2, #-16]
  4023dc:	f842 5c0c 	str.w	r5, [r2, #-12]
  4023e0:	f842 5c08 	str.w	r5, [r2, #-8]
  4023e4:	f842 5c04 	str.w	r5, [r2, #-4]
  4023e8:	f102 0210 	add.w	r2, r2, #16
  4023ec:	d8f2      	bhi.n	4023d4 <memset+0x38>
  4023ee:	f1a4 0210 	sub.w	r2, r4, #16
  4023f2:	f022 020f 	bic.w	r2, r2, #15
  4023f6:	f004 040f 	and.w	r4, r4, #15
  4023fa:	3210      	adds	r2, #16
  4023fc:	2c03      	cmp	r4, #3
  4023fe:	4413      	add	r3, r2
  402400:	d90d      	bls.n	40241e <memset+0x82>
  402402:	461e      	mov	r6, r3
  402404:	4622      	mov	r2, r4
  402406:	3a04      	subs	r2, #4
  402408:	2a03      	cmp	r2, #3
  40240a:	f846 5b04 	str.w	r5, [r6], #4
  40240e:	d8fa      	bhi.n	402406 <memset+0x6a>
  402410:	1f22      	subs	r2, r4, #4
  402412:	f022 0203 	bic.w	r2, r2, #3
  402416:	3204      	adds	r2, #4
  402418:	4413      	add	r3, r2
  40241a:	f004 0403 	and.w	r4, r4, #3
  40241e:	b12c      	cbz	r4, 40242c <memset+0x90>
  402420:	b2c9      	uxtb	r1, r1
  402422:	441c      	add	r4, r3
  402424:	f803 1b01 	strb.w	r1, [r3], #1
  402428:	429c      	cmp	r4, r3
  40242a:	d1fb      	bne.n	402424 <memset+0x88>
  40242c:	bc70      	pop	{r4, r5, r6}
  40242e:	4770      	bx	lr
  402430:	4614      	mov	r4, r2
  402432:	4603      	mov	r3, r0
  402434:	e7c2      	b.n	4023bc <memset+0x20>
  402436:	bf00      	nop

00402438 <sprintf>:
  402438:	b40e      	push	{r1, r2, r3}
  40243a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40243c:	b09c      	sub	sp, #112	; 0x70
  40243e:	ab21      	add	r3, sp, #132	; 0x84
  402440:	490f      	ldr	r1, [pc, #60]	; (402480 <sprintf+0x48>)
  402442:	f853 2b04 	ldr.w	r2, [r3], #4
  402446:	9301      	str	r3, [sp, #4]
  402448:	4605      	mov	r5, r0
  40244a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40244e:	6808      	ldr	r0, [r1, #0]
  402450:	9502      	str	r5, [sp, #8]
  402452:	f44f 7702 	mov.w	r7, #520	; 0x208
  402456:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40245a:	a902      	add	r1, sp, #8
  40245c:	9506      	str	r5, [sp, #24]
  40245e:	f8ad 7014 	strh.w	r7, [sp, #20]
  402462:	9404      	str	r4, [sp, #16]
  402464:	9407      	str	r4, [sp, #28]
  402466:	f8ad 6016 	strh.w	r6, [sp, #22]
  40246a:	f000 f80b 	bl	402484 <_svfprintf_r>
  40246e:	9b02      	ldr	r3, [sp, #8]
  402470:	2200      	movs	r2, #0
  402472:	701a      	strb	r2, [r3, #0]
  402474:	b01c      	add	sp, #112	; 0x70
  402476:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40247a:	b003      	add	sp, #12
  40247c:	4770      	bx	lr
  40247e:	bf00      	nop
  402480:	20400024 	.word	0x20400024

00402484 <_svfprintf_r>:
  402484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402488:	b0c3      	sub	sp, #268	; 0x10c
  40248a:	460c      	mov	r4, r1
  40248c:	910b      	str	r1, [sp, #44]	; 0x2c
  40248e:	4692      	mov	sl, r2
  402490:	930f      	str	r3, [sp, #60]	; 0x3c
  402492:	900c      	str	r0, [sp, #48]	; 0x30
  402494:	f002 fa0c 	bl	4048b0 <_localeconv_r>
  402498:	6803      	ldr	r3, [r0, #0]
  40249a:	931a      	str	r3, [sp, #104]	; 0x68
  40249c:	4618      	mov	r0, r3
  40249e:	f003 f8ef 	bl	405680 <strlen>
  4024a2:	89a3      	ldrh	r3, [r4, #12]
  4024a4:	9019      	str	r0, [sp, #100]	; 0x64
  4024a6:	0619      	lsls	r1, r3, #24
  4024a8:	d503      	bpl.n	4024b2 <_svfprintf_r+0x2e>
  4024aa:	6923      	ldr	r3, [r4, #16]
  4024ac:	2b00      	cmp	r3, #0
  4024ae:	f001 8003 	beq.w	4034b8 <_svfprintf_r+0x1034>
  4024b2:	2300      	movs	r3, #0
  4024b4:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4024b8:	9313      	str	r3, [sp, #76]	; 0x4c
  4024ba:	9315      	str	r3, [sp, #84]	; 0x54
  4024bc:	9314      	str	r3, [sp, #80]	; 0x50
  4024be:	9327      	str	r3, [sp, #156]	; 0x9c
  4024c0:	9326      	str	r3, [sp, #152]	; 0x98
  4024c2:	9318      	str	r3, [sp, #96]	; 0x60
  4024c4:	931b      	str	r3, [sp, #108]	; 0x6c
  4024c6:	9309      	str	r3, [sp, #36]	; 0x24
  4024c8:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4024cc:	46c8      	mov	r8, r9
  4024ce:	9316      	str	r3, [sp, #88]	; 0x58
  4024d0:	9317      	str	r3, [sp, #92]	; 0x5c
  4024d2:	f89a 3000 	ldrb.w	r3, [sl]
  4024d6:	4654      	mov	r4, sl
  4024d8:	b1e3      	cbz	r3, 402514 <_svfprintf_r+0x90>
  4024da:	2b25      	cmp	r3, #37	; 0x25
  4024dc:	d102      	bne.n	4024e4 <_svfprintf_r+0x60>
  4024de:	e019      	b.n	402514 <_svfprintf_r+0x90>
  4024e0:	2b25      	cmp	r3, #37	; 0x25
  4024e2:	d003      	beq.n	4024ec <_svfprintf_r+0x68>
  4024e4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4024e8:	2b00      	cmp	r3, #0
  4024ea:	d1f9      	bne.n	4024e0 <_svfprintf_r+0x5c>
  4024ec:	eba4 050a 	sub.w	r5, r4, sl
  4024f0:	b185      	cbz	r5, 402514 <_svfprintf_r+0x90>
  4024f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024f4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4024f6:	f8c8 a000 	str.w	sl, [r8]
  4024fa:	3301      	adds	r3, #1
  4024fc:	442a      	add	r2, r5
  4024fe:	2b07      	cmp	r3, #7
  402500:	f8c8 5004 	str.w	r5, [r8, #4]
  402504:	9227      	str	r2, [sp, #156]	; 0x9c
  402506:	9326      	str	r3, [sp, #152]	; 0x98
  402508:	dc7f      	bgt.n	40260a <_svfprintf_r+0x186>
  40250a:	f108 0808 	add.w	r8, r8, #8
  40250e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402510:	442b      	add	r3, r5
  402512:	9309      	str	r3, [sp, #36]	; 0x24
  402514:	7823      	ldrb	r3, [r4, #0]
  402516:	2b00      	cmp	r3, #0
  402518:	d07f      	beq.n	40261a <_svfprintf_r+0x196>
  40251a:	2300      	movs	r3, #0
  40251c:	461a      	mov	r2, r3
  40251e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402522:	4619      	mov	r1, r3
  402524:	930d      	str	r3, [sp, #52]	; 0x34
  402526:	469b      	mov	fp, r3
  402528:	f04f 30ff 	mov.w	r0, #4294967295
  40252c:	7863      	ldrb	r3, [r4, #1]
  40252e:	900a      	str	r0, [sp, #40]	; 0x28
  402530:	f104 0a01 	add.w	sl, r4, #1
  402534:	f10a 0a01 	add.w	sl, sl, #1
  402538:	f1a3 0020 	sub.w	r0, r3, #32
  40253c:	2858      	cmp	r0, #88	; 0x58
  40253e:	f200 83c1 	bhi.w	402cc4 <_svfprintf_r+0x840>
  402542:	e8df f010 	tbh	[pc, r0, lsl #1]
  402546:	0238      	.short	0x0238
  402548:	03bf03bf 	.word	0x03bf03bf
  40254c:	03bf0240 	.word	0x03bf0240
  402550:	03bf03bf 	.word	0x03bf03bf
  402554:	03bf03bf 	.word	0x03bf03bf
  402558:	024503bf 	.word	0x024503bf
  40255c:	03bf0203 	.word	0x03bf0203
  402560:	026b005d 	.word	0x026b005d
  402564:	028603bf 	.word	0x028603bf
  402568:	039d039d 	.word	0x039d039d
  40256c:	039d039d 	.word	0x039d039d
  402570:	039d039d 	.word	0x039d039d
  402574:	039d039d 	.word	0x039d039d
  402578:	03bf039d 	.word	0x03bf039d
  40257c:	03bf03bf 	.word	0x03bf03bf
  402580:	03bf03bf 	.word	0x03bf03bf
  402584:	03bf03bf 	.word	0x03bf03bf
  402588:	03bf03bf 	.word	0x03bf03bf
  40258c:	033703bf 	.word	0x033703bf
  402590:	03bf0357 	.word	0x03bf0357
  402594:	03bf0357 	.word	0x03bf0357
  402598:	03bf03bf 	.word	0x03bf03bf
  40259c:	039803bf 	.word	0x039803bf
  4025a0:	03bf03bf 	.word	0x03bf03bf
  4025a4:	03bf03ad 	.word	0x03bf03ad
  4025a8:	03bf03bf 	.word	0x03bf03bf
  4025ac:	03bf03bf 	.word	0x03bf03bf
  4025b0:	03bf0259 	.word	0x03bf0259
  4025b4:	031e03bf 	.word	0x031e03bf
  4025b8:	03bf03bf 	.word	0x03bf03bf
  4025bc:	03bf03bf 	.word	0x03bf03bf
  4025c0:	03bf03bf 	.word	0x03bf03bf
  4025c4:	03bf03bf 	.word	0x03bf03bf
  4025c8:	03bf03bf 	.word	0x03bf03bf
  4025cc:	02db02c6 	.word	0x02db02c6
  4025d0:	03570357 	.word	0x03570357
  4025d4:	028b0357 	.word	0x028b0357
  4025d8:	03bf02db 	.word	0x03bf02db
  4025dc:	029003bf 	.word	0x029003bf
  4025e0:	029d03bf 	.word	0x029d03bf
  4025e4:	02b401cc 	.word	0x02b401cc
  4025e8:	03bf0208 	.word	0x03bf0208
  4025ec:	03bf01e1 	.word	0x03bf01e1
  4025f0:	03bf007e 	.word	0x03bf007e
  4025f4:	020d03bf 	.word	0x020d03bf
  4025f8:	980d      	ldr	r0, [sp, #52]	; 0x34
  4025fa:	930f      	str	r3, [sp, #60]	; 0x3c
  4025fc:	4240      	negs	r0, r0
  4025fe:	900d      	str	r0, [sp, #52]	; 0x34
  402600:	f04b 0b04 	orr.w	fp, fp, #4
  402604:	f89a 3000 	ldrb.w	r3, [sl]
  402608:	e794      	b.n	402534 <_svfprintf_r+0xb0>
  40260a:	aa25      	add	r2, sp, #148	; 0x94
  40260c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40260e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402610:	f003 f8a4 	bl	40575c <__ssprint_r>
  402614:	b940      	cbnz	r0, 402628 <_svfprintf_r+0x1a4>
  402616:	46c8      	mov	r8, r9
  402618:	e779      	b.n	40250e <_svfprintf_r+0x8a>
  40261a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  40261c:	b123      	cbz	r3, 402628 <_svfprintf_r+0x1a4>
  40261e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402620:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402622:	aa25      	add	r2, sp, #148	; 0x94
  402624:	f003 f89a 	bl	40575c <__ssprint_r>
  402628:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40262a:	899b      	ldrh	r3, [r3, #12]
  40262c:	f013 0f40 	tst.w	r3, #64	; 0x40
  402630:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402632:	bf18      	it	ne
  402634:	f04f 33ff 	movne.w	r3, #4294967295
  402638:	9309      	str	r3, [sp, #36]	; 0x24
  40263a:	9809      	ldr	r0, [sp, #36]	; 0x24
  40263c:	b043      	add	sp, #268	; 0x10c
  40263e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402642:	f01b 0f20 	tst.w	fp, #32
  402646:	9311      	str	r3, [sp, #68]	; 0x44
  402648:	f040 81dd 	bne.w	402a06 <_svfprintf_r+0x582>
  40264c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40264e:	f01b 0f10 	tst.w	fp, #16
  402652:	4613      	mov	r3, r2
  402654:	f040 856e 	bne.w	403134 <_svfprintf_r+0xcb0>
  402658:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40265c:	f000 856a 	beq.w	403134 <_svfprintf_r+0xcb0>
  402660:	8814      	ldrh	r4, [r2, #0]
  402662:	3204      	adds	r2, #4
  402664:	2500      	movs	r5, #0
  402666:	2301      	movs	r3, #1
  402668:	920f      	str	r2, [sp, #60]	; 0x3c
  40266a:	2700      	movs	r7, #0
  40266c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402670:	990a      	ldr	r1, [sp, #40]	; 0x28
  402672:	1c4a      	adds	r2, r1, #1
  402674:	f000 8265 	beq.w	402b42 <_svfprintf_r+0x6be>
  402678:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  40267c:	9207      	str	r2, [sp, #28]
  40267e:	ea54 0205 	orrs.w	r2, r4, r5
  402682:	f040 8264 	bne.w	402b4e <_svfprintf_r+0x6ca>
  402686:	2900      	cmp	r1, #0
  402688:	f040 843c 	bne.w	402f04 <_svfprintf_r+0xa80>
  40268c:	2b00      	cmp	r3, #0
  40268e:	f040 84d7 	bne.w	403040 <_svfprintf_r+0xbbc>
  402692:	f01b 0301 	ands.w	r3, fp, #1
  402696:	930e      	str	r3, [sp, #56]	; 0x38
  402698:	f000 8604 	beq.w	4032a4 <_svfprintf_r+0xe20>
  40269c:	ae42      	add	r6, sp, #264	; 0x108
  40269e:	2330      	movs	r3, #48	; 0x30
  4026a0:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4026a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4026a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4026a8:	4293      	cmp	r3, r2
  4026aa:	bfb8      	it	lt
  4026ac:	4613      	movlt	r3, r2
  4026ae:	9308      	str	r3, [sp, #32]
  4026b0:	2300      	movs	r3, #0
  4026b2:	9312      	str	r3, [sp, #72]	; 0x48
  4026b4:	b117      	cbz	r7, 4026bc <_svfprintf_r+0x238>
  4026b6:	9b08      	ldr	r3, [sp, #32]
  4026b8:	3301      	adds	r3, #1
  4026ba:	9308      	str	r3, [sp, #32]
  4026bc:	9b07      	ldr	r3, [sp, #28]
  4026be:	f013 0302 	ands.w	r3, r3, #2
  4026c2:	9310      	str	r3, [sp, #64]	; 0x40
  4026c4:	d002      	beq.n	4026cc <_svfprintf_r+0x248>
  4026c6:	9b08      	ldr	r3, [sp, #32]
  4026c8:	3302      	adds	r3, #2
  4026ca:	9308      	str	r3, [sp, #32]
  4026cc:	9b07      	ldr	r3, [sp, #28]
  4026ce:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4026d2:	f040 830e 	bne.w	402cf2 <_svfprintf_r+0x86e>
  4026d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4026d8:	9a08      	ldr	r2, [sp, #32]
  4026da:	eba3 0b02 	sub.w	fp, r3, r2
  4026de:	f1bb 0f00 	cmp.w	fp, #0
  4026e2:	f340 8306 	ble.w	402cf2 <_svfprintf_r+0x86e>
  4026e6:	f1bb 0f10 	cmp.w	fp, #16
  4026ea:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026ec:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4026ee:	dd29      	ble.n	402744 <_svfprintf_r+0x2c0>
  4026f0:	4643      	mov	r3, r8
  4026f2:	4621      	mov	r1, r4
  4026f4:	46a8      	mov	r8, r5
  4026f6:	2710      	movs	r7, #16
  4026f8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4026fa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4026fc:	e006      	b.n	40270c <_svfprintf_r+0x288>
  4026fe:	f1ab 0b10 	sub.w	fp, fp, #16
  402702:	f1bb 0f10 	cmp.w	fp, #16
  402706:	f103 0308 	add.w	r3, r3, #8
  40270a:	dd18      	ble.n	40273e <_svfprintf_r+0x2ba>
  40270c:	3201      	adds	r2, #1
  40270e:	48b7      	ldr	r0, [pc, #732]	; (4029ec <_svfprintf_r+0x568>)
  402710:	9226      	str	r2, [sp, #152]	; 0x98
  402712:	3110      	adds	r1, #16
  402714:	2a07      	cmp	r2, #7
  402716:	9127      	str	r1, [sp, #156]	; 0x9c
  402718:	e883 0081 	stmia.w	r3, {r0, r7}
  40271c:	ddef      	ble.n	4026fe <_svfprintf_r+0x27a>
  40271e:	aa25      	add	r2, sp, #148	; 0x94
  402720:	4629      	mov	r1, r5
  402722:	4620      	mov	r0, r4
  402724:	f003 f81a 	bl	40575c <__ssprint_r>
  402728:	2800      	cmp	r0, #0
  40272a:	f47f af7d 	bne.w	402628 <_svfprintf_r+0x1a4>
  40272e:	f1ab 0b10 	sub.w	fp, fp, #16
  402732:	f1bb 0f10 	cmp.w	fp, #16
  402736:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402738:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40273a:	464b      	mov	r3, r9
  40273c:	dce6      	bgt.n	40270c <_svfprintf_r+0x288>
  40273e:	4645      	mov	r5, r8
  402740:	460c      	mov	r4, r1
  402742:	4698      	mov	r8, r3
  402744:	3201      	adds	r2, #1
  402746:	4ba9      	ldr	r3, [pc, #676]	; (4029ec <_svfprintf_r+0x568>)
  402748:	9226      	str	r2, [sp, #152]	; 0x98
  40274a:	445c      	add	r4, fp
  40274c:	2a07      	cmp	r2, #7
  40274e:	9427      	str	r4, [sp, #156]	; 0x9c
  402750:	e888 0808 	stmia.w	r8, {r3, fp}
  402754:	f300 8498 	bgt.w	403088 <_svfprintf_r+0xc04>
  402758:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40275c:	f108 0808 	add.w	r8, r8, #8
  402760:	b177      	cbz	r7, 402780 <_svfprintf_r+0x2fc>
  402762:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402764:	3301      	adds	r3, #1
  402766:	3401      	adds	r4, #1
  402768:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  40276c:	2201      	movs	r2, #1
  40276e:	2b07      	cmp	r3, #7
  402770:	9427      	str	r4, [sp, #156]	; 0x9c
  402772:	9326      	str	r3, [sp, #152]	; 0x98
  402774:	e888 0006 	stmia.w	r8, {r1, r2}
  402778:	f300 83db 	bgt.w	402f32 <_svfprintf_r+0xaae>
  40277c:	f108 0808 	add.w	r8, r8, #8
  402780:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402782:	b16b      	cbz	r3, 4027a0 <_svfprintf_r+0x31c>
  402784:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402786:	3301      	adds	r3, #1
  402788:	3402      	adds	r4, #2
  40278a:	a91e      	add	r1, sp, #120	; 0x78
  40278c:	2202      	movs	r2, #2
  40278e:	2b07      	cmp	r3, #7
  402790:	9427      	str	r4, [sp, #156]	; 0x9c
  402792:	9326      	str	r3, [sp, #152]	; 0x98
  402794:	e888 0006 	stmia.w	r8, {r1, r2}
  402798:	f300 83d6 	bgt.w	402f48 <_svfprintf_r+0xac4>
  40279c:	f108 0808 	add.w	r8, r8, #8
  4027a0:	2d80      	cmp	r5, #128	; 0x80
  4027a2:	f000 8315 	beq.w	402dd0 <_svfprintf_r+0x94c>
  4027a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4027a8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4027aa:	1a9f      	subs	r7, r3, r2
  4027ac:	2f00      	cmp	r7, #0
  4027ae:	dd36      	ble.n	40281e <_svfprintf_r+0x39a>
  4027b0:	2f10      	cmp	r7, #16
  4027b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027b4:	4d8e      	ldr	r5, [pc, #568]	; (4029f0 <_svfprintf_r+0x56c>)
  4027b6:	dd27      	ble.n	402808 <_svfprintf_r+0x384>
  4027b8:	4642      	mov	r2, r8
  4027ba:	4621      	mov	r1, r4
  4027bc:	46b0      	mov	r8, r6
  4027be:	f04f 0b10 	mov.w	fp, #16
  4027c2:	462e      	mov	r6, r5
  4027c4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4027c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4027c8:	e004      	b.n	4027d4 <_svfprintf_r+0x350>
  4027ca:	3f10      	subs	r7, #16
  4027cc:	2f10      	cmp	r7, #16
  4027ce:	f102 0208 	add.w	r2, r2, #8
  4027d2:	dd15      	ble.n	402800 <_svfprintf_r+0x37c>
  4027d4:	3301      	adds	r3, #1
  4027d6:	3110      	adds	r1, #16
  4027d8:	2b07      	cmp	r3, #7
  4027da:	9127      	str	r1, [sp, #156]	; 0x9c
  4027dc:	9326      	str	r3, [sp, #152]	; 0x98
  4027de:	e882 0840 	stmia.w	r2, {r6, fp}
  4027e2:	ddf2      	ble.n	4027ca <_svfprintf_r+0x346>
  4027e4:	aa25      	add	r2, sp, #148	; 0x94
  4027e6:	4629      	mov	r1, r5
  4027e8:	4620      	mov	r0, r4
  4027ea:	f002 ffb7 	bl	40575c <__ssprint_r>
  4027ee:	2800      	cmp	r0, #0
  4027f0:	f47f af1a 	bne.w	402628 <_svfprintf_r+0x1a4>
  4027f4:	3f10      	subs	r7, #16
  4027f6:	2f10      	cmp	r7, #16
  4027f8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4027fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027fc:	464a      	mov	r2, r9
  4027fe:	dce9      	bgt.n	4027d4 <_svfprintf_r+0x350>
  402800:	4635      	mov	r5, r6
  402802:	460c      	mov	r4, r1
  402804:	4646      	mov	r6, r8
  402806:	4690      	mov	r8, r2
  402808:	3301      	adds	r3, #1
  40280a:	443c      	add	r4, r7
  40280c:	2b07      	cmp	r3, #7
  40280e:	9427      	str	r4, [sp, #156]	; 0x9c
  402810:	9326      	str	r3, [sp, #152]	; 0x98
  402812:	e888 00a0 	stmia.w	r8, {r5, r7}
  402816:	f300 8381 	bgt.w	402f1c <_svfprintf_r+0xa98>
  40281a:	f108 0808 	add.w	r8, r8, #8
  40281e:	9b07      	ldr	r3, [sp, #28]
  402820:	05df      	lsls	r7, r3, #23
  402822:	f100 8268 	bmi.w	402cf6 <_svfprintf_r+0x872>
  402826:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402828:	990e      	ldr	r1, [sp, #56]	; 0x38
  40282a:	f8c8 6000 	str.w	r6, [r8]
  40282e:	3301      	adds	r3, #1
  402830:	440c      	add	r4, r1
  402832:	2b07      	cmp	r3, #7
  402834:	9427      	str	r4, [sp, #156]	; 0x9c
  402836:	f8c8 1004 	str.w	r1, [r8, #4]
  40283a:	9326      	str	r3, [sp, #152]	; 0x98
  40283c:	f300 834d 	bgt.w	402eda <_svfprintf_r+0xa56>
  402840:	f108 0808 	add.w	r8, r8, #8
  402844:	9b07      	ldr	r3, [sp, #28]
  402846:	075b      	lsls	r3, r3, #29
  402848:	d53a      	bpl.n	4028c0 <_svfprintf_r+0x43c>
  40284a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40284c:	9a08      	ldr	r2, [sp, #32]
  40284e:	1a9d      	subs	r5, r3, r2
  402850:	2d00      	cmp	r5, #0
  402852:	dd35      	ble.n	4028c0 <_svfprintf_r+0x43c>
  402854:	2d10      	cmp	r5, #16
  402856:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402858:	dd20      	ble.n	40289c <_svfprintf_r+0x418>
  40285a:	2610      	movs	r6, #16
  40285c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40285e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402862:	e004      	b.n	40286e <_svfprintf_r+0x3ea>
  402864:	3d10      	subs	r5, #16
  402866:	2d10      	cmp	r5, #16
  402868:	f108 0808 	add.w	r8, r8, #8
  40286c:	dd16      	ble.n	40289c <_svfprintf_r+0x418>
  40286e:	3301      	adds	r3, #1
  402870:	4a5e      	ldr	r2, [pc, #376]	; (4029ec <_svfprintf_r+0x568>)
  402872:	9326      	str	r3, [sp, #152]	; 0x98
  402874:	3410      	adds	r4, #16
  402876:	2b07      	cmp	r3, #7
  402878:	9427      	str	r4, [sp, #156]	; 0x9c
  40287a:	e888 0044 	stmia.w	r8, {r2, r6}
  40287e:	ddf1      	ble.n	402864 <_svfprintf_r+0x3e0>
  402880:	aa25      	add	r2, sp, #148	; 0x94
  402882:	4659      	mov	r1, fp
  402884:	4638      	mov	r0, r7
  402886:	f002 ff69 	bl	40575c <__ssprint_r>
  40288a:	2800      	cmp	r0, #0
  40288c:	f47f aecc 	bne.w	402628 <_svfprintf_r+0x1a4>
  402890:	3d10      	subs	r5, #16
  402892:	2d10      	cmp	r5, #16
  402894:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402896:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402898:	46c8      	mov	r8, r9
  40289a:	dce8      	bgt.n	40286e <_svfprintf_r+0x3ea>
  40289c:	3301      	adds	r3, #1
  40289e:	4a53      	ldr	r2, [pc, #332]	; (4029ec <_svfprintf_r+0x568>)
  4028a0:	9326      	str	r3, [sp, #152]	; 0x98
  4028a2:	442c      	add	r4, r5
  4028a4:	2b07      	cmp	r3, #7
  4028a6:	9427      	str	r4, [sp, #156]	; 0x9c
  4028a8:	e888 0024 	stmia.w	r8, {r2, r5}
  4028ac:	dd08      	ble.n	4028c0 <_svfprintf_r+0x43c>
  4028ae:	aa25      	add	r2, sp, #148	; 0x94
  4028b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028b2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028b4:	f002 ff52 	bl	40575c <__ssprint_r>
  4028b8:	2800      	cmp	r0, #0
  4028ba:	f47f aeb5 	bne.w	402628 <_svfprintf_r+0x1a4>
  4028be:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4028c2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4028c4:	9908      	ldr	r1, [sp, #32]
  4028c6:	428a      	cmp	r2, r1
  4028c8:	bfac      	ite	ge
  4028ca:	189b      	addge	r3, r3, r2
  4028cc:	185b      	addlt	r3, r3, r1
  4028ce:	9309      	str	r3, [sp, #36]	; 0x24
  4028d0:	2c00      	cmp	r4, #0
  4028d2:	f040 830d 	bne.w	402ef0 <_svfprintf_r+0xa6c>
  4028d6:	2300      	movs	r3, #0
  4028d8:	9326      	str	r3, [sp, #152]	; 0x98
  4028da:	46c8      	mov	r8, r9
  4028dc:	e5f9      	b.n	4024d2 <_svfprintf_r+0x4e>
  4028de:	9311      	str	r3, [sp, #68]	; 0x44
  4028e0:	f01b 0320 	ands.w	r3, fp, #32
  4028e4:	f040 81e3 	bne.w	402cae <_svfprintf_r+0x82a>
  4028e8:	f01b 0210 	ands.w	r2, fp, #16
  4028ec:	f040 842e 	bne.w	40314c <_svfprintf_r+0xcc8>
  4028f0:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4028f4:	f000 842a 	beq.w	40314c <_svfprintf_r+0xcc8>
  4028f8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4028fa:	4613      	mov	r3, r2
  4028fc:	460a      	mov	r2, r1
  4028fe:	3204      	adds	r2, #4
  402900:	880c      	ldrh	r4, [r1, #0]
  402902:	920f      	str	r2, [sp, #60]	; 0x3c
  402904:	2500      	movs	r5, #0
  402906:	e6b0      	b.n	40266a <_svfprintf_r+0x1e6>
  402908:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40290a:	9311      	str	r3, [sp, #68]	; 0x44
  40290c:	6816      	ldr	r6, [r2, #0]
  40290e:	2400      	movs	r4, #0
  402910:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402914:	1d15      	adds	r5, r2, #4
  402916:	2e00      	cmp	r6, #0
  402918:	f000 86a7 	beq.w	40366a <_svfprintf_r+0x11e6>
  40291c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40291e:	1c53      	adds	r3, r2, #1
  402920:	f000 8609 	beq.w	403536 <_svfprintf_r+0x10b2>
  402924:	4621      	mov	r1, r4
  402926:	4630      	mov	r0, r6
  402928:	f002 fa8a 	bl	404e40 <memchr>
  40292c:	2800      	cmp	r0, #0
  40292e:	f000 86e1 	beq.w	4036f4 <_svfprintf_r+0x1270>
  402932:	1b83      	subs	r3, r0, r6
  402934:	930e      	str	r3, [sp, #56]	; 0x38
  402936:	940a      	str	r4, [sp, #40]	; 0x28
  402938:	950f      	str	r5, [sp, #60]	; 0x3c
  40293a:	f8cd b01c 	str.w	fp, [sp, #28]
  40293e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402942:	9308      	str	r3, [sp, #32]
  402944:	9412      	str	r4, [sp, #72]	; 0x48
  402946:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40294a:	e6b3      	b.n	4026b4 <_svfprintf_r+0x230>
  40294c:	f89a 3000 	ldrb.w	r3, [sl]
  402950:	2201      	movs	r2, #1
  402952:	212b      	movs	r1, #43	; 0x2b
  402954:	e5ee      	b.n	402534 <_svfprintf_r+0xb0>
  402956:	f04b 0b20 	orr.w	fp, fp, #32
  40295a:	f89a 3000 	ldrb.w	r3, [sl]
  40295e:	e5e9      	b.n	402534 <_svfprintf_r+0xb0>
  402960:	9311      	str	r3, [sp, #68]	; 0x44
  402962:	2a00      	cmp	r2, #0
  402964:	f040 8795 	bne.w	403892 <_svfprintf_r+0x140e>
  402968:	4b22      	ldr	r3, [pc, #136]	; (4029f4 <_svfprintf_r+0x570>)
  40296a:	9318      	str	r3, [sp, #96]	; 0x60
  40296c:	f01b 0f20 	tst.w	fp, #32
  402970:	f040 8111 	bne.w	402b96 <_svfprintf_r+0x712>
  402974:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402976:	f01b 0f10 	tst.w	fp, #16
  40297a:	4613      	mov	r3, r2
  40297c:	f040 83e1 	bne.w	403142 <_svfprintf_r+0xcbe>
  402980:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402984:	f000 83dd 	beq.w	403142 <_svfprintf_r+0xcbe>
  402988:	3304      	adds	r3, #4
  40298a:	8814      	ldrh	r4, [r2, #0]
  40298c:	930f      	str	r3, [sp, #60]	; 0x3c
  40298e:	2500      	movs	r5, #0
  402990:	f01b 0f01 	tst.w	fp, #1
  402994:	f000 810c 	beq.w	402bb0 <_svfprintf_r+0x72c>
  402998:	ea54 0305 	orrs.w	r3, r4, r5
  40299c:	f000 8108 	beq.w	402bb0 <_svfprintf_r+0x72c>
  4029a0:	2330      	movs	r3, #48	; 0x30
  4029a2:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4029a6:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4029aa:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4029ae:	f04b 0b02 	orr.w	fp, fp, #2
  4029b2:	2302      	movs	r3, #2
  4029b4:	e659      	b.n	40266a <_svfprintf_r+0x1e6>
  4029b6:	f89a 3000 	ldrb.w	r3, [sl]
  4029ba:	2900      	cmp	r1, #0
  4029bc:	f47f adba 	bne.w	402534 <_svfprintf_r+0xb0>
  4029c0:	2201      	movs	r2, #1
  4029c2:	2120      	movs	r1, #32
  4029c4:	e5b6      	b.n	402534 <_svfprintf_r+0xb0>
  4029c6:	f04b 0b01 	orr.w	fp, fp, #1
  4029ca:	f89a 3000 	ldrb.w	r3, [sl]
  4029ce:	e5b1      	b.n	402534 <_svfprintf_r+0xb0>
  4029d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4029d2:	6823      	ldr	r3, [r4, #0]
  4029d4:	930d      	str	r3, [sp, #52]	; 0x34
  4029d6:	4618      	mov	r0, r3
  4029d8:	2800      	cmp	r0, #0
  4029da:	4623      	mov	r3, r4
  4029dc:	f103 0304 	add.w	r3, r3, #4
  4029e0:	f6ff ae0a 	blt.w	4025f8 <_svfprintf_r+0x174>
  4029e4:	930f      	str	r3, [sp, #60]	; 0x3c
  4029e6:	f89a 3000 	ldrb.w	r3, [sl]
  4029ea:	e5a3      	b.n	402534 <_svfprintf_r+0xb0>
  4029ec:	00406e84 	.word	0x00406e84
  4029f0:	00406e94 	.word	0x00406e94
  4029f4:	00406e64 	.word	0x00406e64
  4029f8:	f04b 0b10 	orr.w	fp, fp, #16
  4029fc:	f01b 0f20 	tst.w	fp, #32
  402a00:	9311      	str	r3, [sp, #68]	; 0x44
  402a02:	f43f ae23 	beq.w	40264c <_svfprintf_r+0x1c8>
  402a06:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402a08:	3507      	adds	r5, #7
  402a0a:	f025 0307 	bic.w	r3, r5, #7
  402a0e:	f103 0208 	add.w	r2, r3, #8
  402a12:	e9d3 4500 	ldrd	r4, r5, [r3]
  402a16:	920f      	str	r2, [sp, #60]	; 0x3c
  402a18:	2301      	movs	r3, #1
  402a1a:	e626      	b.n	40266a <_svfprintf_r+0x1e6>
  402a1c:	f89a 3000 	ldrb.w	r3, [sl]
  402a20:	2b2a      	cmp	r3, #42	; 0x2a
  402a22:	f10a 0401 	add.w	r4, sl, #1
  402a26:	f000 8727 	beq.w	403878 <_svfprintf_r+0x13f4>
  402a2a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402a2e:	2809      	cmp	r0, #9
  402a30:	46a2      	mov	sl, r4
  402a32:	f200 86ad 	bhi.w	403790 <_svfprintf_r+0x130c>
  402a36:	2300      	movs	r3, #0
  402a38:	461c      	mov	r4, r3
  402a3a:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402a3e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402a42:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402a46:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402a4a:	2809      	cmp	r0, #9
  402a4c:	d9f5      	bls.n	402a3a <_svfprintf_r+0x5b6>
  402a4e:	940a      	str	r4, [sp, #40]	; 0x28
  402a50:	e572      	b.n	402538 <_svfprintf_r+0xb4>
  402a52:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402a56:	f89a 3000 	ldrb.w	r3, [sl]
  402a5a:	e56b      	b.n	402534 <_svfprintf_r+0xb0>
  402a5c:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402a60:	f89a 3000 	ldrb.w	r3, [sl]
  402a64:	e566      	b.n	402534 <_svfprintf_r+0xb0>
  402a66:	f89a 3000 	ldrb.w	r3, [sl]
  402a6a:	2b6c      	cmp	r3, #108	; 0x6c
  402a6c:	bf03      	ittte	eq
  402a6e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402a72:	f04b 0b20 	orreq.w	fp, fp, #32
  402a76:	f10a 0a01 	addeq.w	sl, sl, #1
  402a7a:	f04b 0b10 	orrne.w	fp, fp, #16
  402a7e:	e559      	b.n	402534 <_svfprintf_r+0xb0>
  402a80:	2a00      	cmp	r2, #0
  402a82:	f040 8711 	bne.w	4038a8 <_svfprintf_r+0x1424>
  402a86:	f01b 0f20 	tst.w	fp, #32
  402a8a:	f040 84f9 	bne.w	403480 <_svfprintf_r+0xffc>
  402a8e:	f01b 0f10 	tst.w	fp, #16
  402a92:	f040 84ac 	bne.w	4033ee <_svfprintf_r+0xf6a>
  402a96:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402a9a:	f000 84a8 	beq.w	4033ee <_svfprintf_r+0xf6a>
  402a9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402aa0:	6813      	ldr	r3, [r2, #0]
  402aa2:	3204      	adds	r2, #4
  402aa4:	920f      	str	r2, [sp, #60]	; 0x3c
  402aa6:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402aaa:	801a      	strh	r2, [r3, #0]
  402aac:	e511      	b.n	4024d2 <_svfprintf_r+0x4e>
  402aae:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402ab0:	4bb3      	ldr	r3, [pc, #716]	; (402d80 <_svfprintf_r+0x8fc>)
  402ab2:	680c      	ldr	r4, [r1, #0]
  402ab4:	9318      	str	r3, [sp, #96]	; 0x60
  402ab6:	2230      	movs	r2, #48	; 0x30
  402ab8:	2378      	movs	r3, #120	; 0x78
  402aba:	3104      	adds	r1, #4
  402abc:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402ac0:	9311      	str	r3, [sp, #68]	; 0x44
  402ac2:	f04b 0b02 	orr.w	fp, fp, #2
  402ac6:	910f      	str	r1, [sp, #60]	; 0x3c
  402ac8:	2500      	movs	r5, #0
  402aca:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402ace:	2302      	movs	r3, #2
  402ad0:	e5cb      	b.n	40266a <_svfprintf_r+0x1e6>
  402ad2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402ad4:	9311      	str	r3, [sp, #68]	; 0x44
  402ad6:	680a      	ldr	r2, [r1, #0]
  402ad8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402adc:	2300      	movs	r3, #0
  402ade:	460a      	mov	r2, r1
  402ae0:	461f      	mov	r7, r3
  402ae2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402ae6:	3204      	adds	r2, #4
  402ae8:	2301      	movs	r3, #1
  402aea:	9308      	str	r3, [sp, #32]
  402aec:	f8cd b01c 	str.w	fp, [sp, #28]
  402af0:	970a      	str	r7, [sp, #40]	; 0x28
  402af2:	9712      	str	r7, [sp, #72]	; 0x48
  402af4:	920f      	str	r2, [sp, #60]	; 0x3c
  402af6:	930e      	str	r3, [sp, #56]	; 0x38
  402af8:	ae28      	add	r6, sp, #160	; 0xa0
  402afa:	e5df      	b.n	4026bc <_svfprintf_r+0x238>
  402afc:	9311      	str	r3, [sp, #68]	; 0x44
  402afe:	2a00      	cmp	r2, #0
  402b00:	f040 86ea 	bne.w	4038d8 <_svfprintf_r+0x1454>
  402b04:	f01b 0f20 	tst.w	fp, #32
  402b08:	d15d      	bne.n	402bc6 <_svfprintf_r+0x742>
  402b0a:	f01b 0f10 	tst.w	fp, #16
  402b0e:	f040 8308 	bne.w	403122 <_svfprintf_r+0xc9e>
  402b12:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402b16:	f000 8304 	beq.w	403122 <_svfprintf_r+0xc9e>
  402b1a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402b1c:	f9b1 4000 	ldrsh.w	r4, [r1]
  402b20:	3104      	adds	r1, #4
  402b22:	17e5      	asrs	r5, r4, #31
  402b24:	4622      	mov	r2, r4
  402b26:	462b      	mov	r3, r5
  402b28:	910f      	str	r1, [sp, #60]	; 0x3c
  402b2a:	2a00      	cmp	r2, #0
  402b2c:	f173 0300 	sbcs.w	r3, r3, #0
  402b30:	db58      	blt.n	402be4 <_svfprintf_r+0x760>
  402b32:	990a      	ldr	r1, [sp, #40]	; 0x28
  402b34:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402b38:	1c4a      	adds	r2, r1, #1
  402b3a:	f04f 0301 	mov.w	r3, #1
  402b3e:	f47f ad9b 	bne.w	402678 <_svfprintf_r+0x1f4>
  402b42:	ea54 0205 	orrs.w	r2, r4, r5
  402b46:	f000 81df 	beq.w	402f08 <_svfprintf_r+0xa84>
  402b4a:	f8cd b01c 	str.w	fp, [sp, #28]
  402b4e:	2b01      	cmp	r3, #1
  402b50:	f000 827b 	beq.w	40304a <_svfprintf_r+0xbc6>
  402b54:	2b02      	cmp	r3, #2
  402b56:	f040 8206 	bne.w	402f66 <_svfprintf_r+0xae2>
  402b5a:	9818      	ldr	r0, [sp, #96]	; 0x60
  402b5c:	464e      	mov	r6, r9
  402b5e:	0923      	lsrs	r3, r4, #4
  402b60:	f004 010f 	and.w	r1, r4, #15
  402b64:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402b68:	092a      	lsrs	r2, r5, #4
  402b6a:	461c      	mov	r4, r3
  402b6c:	4615      	mov	r5, r2
  402b6e:	5c43      	ldrb	r3, [r0, r1]
  402b70:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402b74:	ea54 0305 	orrs.w	r3, r4, r5
  402b78:	d1f1      	bne.n	402b5e <_svfprintf_r+0x6da>
  402b7a:	eba9 0306 	sub.w	r3, r9, r6
  402b7e:	930e      	str	r3, [sp, #56]	; 0x38
  402b80:	e590      	b.n	4026a4 <_svfprintf_r+0x220>
  402b82:	9311      	str	r3, [sp, #68]	; 0x44
  402b84:	2a00      	cmp	r2, #0
  402b86:	f040 86a3 	bne.w	4038d0 <_svfprintf_r+0x144c>
  402b8a:	4b7e      	ldr	r3, [pc, #504]	; (402d84 <_svfprintf_r+0x900>)
  402b8c:	9318      	str	r3, [sp, #96]	; 0x60
  402b8e:	f01b 0f20 	tst.w	fp, #32
  402b92:	f43f aeef 	beq.w	402974 <_svfprintf_r+0x4f0>
  402b96:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b98:	3507      	adds	r5, #7
  402b9a:	f025 0307 	bic.w	r3, r5, #7
  402b9e:	f103 0208 	add.w	r2, r3, #8
  402ba2:	f01b 0f01 	tst.w	fp, #1
  402ba6:	920f      	str	r2, [sp, #60]	; 0x3c
  402ba8:	e9d3 4500 	ldrd	r4, r5, [r3]
  402bac:	f47f aef4 	bne.w	402998 <_svfprintf_r+0x514>
  402bb0:	2302      	movs	r3, #2
  402bb2:	e55a      	b.n	40266a <_svfprintf_r+0x1e6>
  402bb4:	9311      	str	r3, [sp, #68]	; 0x44
  402bb6:	2a00      	cmp	r2, #0
  402bb8:	f040 8686 	bne.w	4038c8 <_svfprintf_r+0x1444>
  402bbc:	f04b 0b10 	orr.w	fp, fp, #16
  402bc0:	f01b 0f20 	tst.w	fp, #32
  402bc4:	d0a1      	beq.n	402b0a <_svfprintf_r+0x686>
  402bc6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402bc8:	3507      	adds	r5, #7
  402bca:	f025 0507 	bic.w	r5, r5, #7
  402bce:	e9d5 2300 	ldrd	r2, r3, [r5]
  402bd2:	2a00      	cmp	r2, #0
  402bd4:	f105 0108 	add.w	r1, r5, #8
  402bd8:	461d      	mov	r5, r3
  402bda:	f173 0300 	sbcs.w	r3, r3, #0
  402bde:	910f      	str	r1, [sp, #60]	; 0x3c
  402be0:	4614      	mov	r4, r2
  402be2:	daa6      	bge.n	402b32 <_svfprintf_r+0x6ae>
  402be4:	272d      	movs	r7, #45	; 0x2d
  402be6:	4264      	negs	r4, r4
  402be8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402bec:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402bf0:	2301      	movs	r3, #1
  402bf2:	e53d      	b.n	402670 <_svfprintf_r+0x1ec>
  402bf4:	9311      	str	r3, [sp, #68]	; 0x44
  402bf6:	2a00      	cmp	r2, #0
  402bf8:	f040 8662 	bne.w	4038c0 <_svfprintf_r+0x143c>
  402bfc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402bfe:	3507      	adds	r5, #7
  402c00:	f025 0307 	bic.w	r3, r5, #7
  402c04:	f103 0208 	add.w	r2, r3, #8
  402c08:	920f      	str	r2, [sp, #60]	; 0x3c
  402c0a:	681a      	ldr	r2, [r3, #0]
  402c0c:	9215      	str	r2, [sp, #84]	; 0x54
  402c0e:	685b      	ldr	r3, [r3, #4]
  402c10:	9314      	str	r3, [sp, #80]	; 0x50
  402c12:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402c14:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402c16:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402c1a:	4628      	mov	r0, r5
  402c1c:	4621      	mov	r1, r4
  402c1e:	f04f 32ff 	mov.w	r2, #4294967295
  402c22:	4b59      	ldr	r3, [pc, #356]	; (402d88 <_svfprintf_r+0x904>)
  402c24:	f003 fa0e 	bl	406044 <__aeabi_dcmpun>
  402c28:	2800      	cmp	r0, #0
  402c2a:	f040 834a 	bne.w	4032c2 <_svfprintf_r+0xe3e>
  402c2e:	4628      	mov	r0, r5
  402c30:	4621      	mov	r1, r4
  402c32:	f04f 32ff 	mov.w	r2, #4294967295
  402c36:	4b54      	ldr	r3, [pc, #336]	; (402d88 <_svfprintf_r+0x904>)
  402c38:	f7ff fb6a 	bl	402310 <__aeabi_dcmple>
  402c3c:	2800      	cmp	r0, #0
  402c3e:	f040 8340 	bne.w	4032c2 <_svfprintf_r+0xe3e>
  402c42:	a815      	add	r0, sp, #84	; 0x54
  402c44:	c80d      	ldmia	r0, {r0, r2, r3}
  402c46:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c48:	f7ff fb58 	bl	4022fc <__aeabi_dcmplt>
  402c4c:	2800      	cmp	r0, #0
  402c4e:	f040 8530 	bne.w	4036b2 <_svfprintf_r+0x122e>
  402c52:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402c56:	4e4d      	ldr	r6, [pc, #308]	; (402d8c <_svfprintf_r+0x908>)
  402c58:	4b4d      	ldr	r3, [pc, #308]	; (402d90 <_svfprintf_r+0x90c>)
  402c5a:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402c5e:	9007      	str	r0, [sp, #28]
  402c60:	9811      	ldr	r0, [sp, #68]	; 0x44
  402c62:	2203      	movs	r2, #3
  402c64:	2100      	movs	r1, #0
  402c66:	9208      	str	r2, [sp, #32]
  402c68:	910a      	str	r1, [sp, #40]	; 0x28
  402c6a:	2847      	cmp	r0, #71	; 0x47
  402c6c:	bfd8      	it	le
  402c6e:	461e      	movle	r6, r3
  402c70:	920e      	str	r2, [sp, #56]	; 0x38
  402c72:	9112      	str	r1, [sp, #72]	; 0x48
  402c74:	e51e      	b.n	4026b4 <_svfprintf_r+0x230>
  402c76:	f04b 0b08 	orr.w	fp, fp, #8
  402c7a:	f89a 3000 	ldrb.w	r3, [sl]
  402c7e:	e459      	b.n	402534 <_svfprintf_r+0xb0>
  402c80:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402c84:	2300      	movs	r3, #0
  402c86:	461c      	mov	r4, r3
  402c88:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402c8c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402c90:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402c94:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402c98:	2809      	cmp	r0, #9
  402c9a:	d9f5      	bls.n	402c88 <_svfprintf_r+0x804>
  402c9c:	940d      	str	r4, [sp, #52]	; 0x34
  402c9e:	e44b      	b.n	402538 <_svfprintf_r+0xb4>
  402ca0:	f04b 0b10 	orr.w	fp, fp, #16
  402ca4:	9311      	str	r3, [sp, #68]	; 0x44
  402ca6:	f01b 0320 	ands.w	r3, fp, #32
  402caa:	f43f ae1d 	beq.w	4028e8 <_svfprintf_r+0x464>
  402cae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402cb0:	3507      	adds	r5, #7
  402cb2:	f025 0307 	bic.w	r3, r5, #7
  402cb6:	f103 0208 	add.w	r2, r3, #8
  402cba:	e9d3 4500 	ldrd	r4, r5, [r3]
  402cbe:	920f      	str	r2, [sp, #60]	; 0x3c
  402cc0:	2300      	movs	r3, #0
  402cc2:	e4d2      	b.n	40266a <_svfprintf_r+0x1e6>
  402cc4:	9311      	str	r3, [sp, #68]	; 0x44
  402cc6:	2a00      	cmp	r2, #0
  402cc8:	f040 85e7 	bne.w	40389a <_svfprintf_r+0x1416>
  402ccc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402cce:	2a00      	cmp	r2, #0
  402cd0:	f43f aca3 	beq.w	40261a <_svfprintf_r+0x196>
  402cd4:	2300      	movs	r3, #0
  402cd6:	2101      	movs	r1, #1
  402cd8:	461f      	mov	r7, r3
  402cda:	9108      	str	r1, [sp, #32]
  402cdc:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402ce0:	f8cd b01c 	str.w	fp, [sp, #28]
  402ce4:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402ce8:	930a      	str	r3, [sp, #40]	; 0x28
  402cea:	9312      	str	r3, [sp, #72]	; 0x48
  402cec:	910e      	str	r1, [sp, #56]	; 0x38
  402cee:	ae28      	add	r6, sp, #160	; 0xa0
  402cf0:	e4e4      	b.n	4026bc <_svfprintf_r+0x238>
  402cf2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cf4:	e534      	b.n	402760 <_svfprintf_r+0x2dc>
  402cf6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402cf8:	2b65      	cmp	r3, #101	; 0x65
  402cfa:	f340 80a7 	ble.w	402e4c <_svfprintf_r+0x9c8>
  402cfe:	a815      	add	r0, sp, #84	; 0x54
  402d00:	c80d      	ldmia	r0, {r0, r2, r3}
  402d02:	9914      	ldr	r1, [sp, #80]	; 0x50
  402d04:	f7ff faf0 	bl	4022e8 <__aeabi_dcmpeq>
  402d08:	2800      	cmp	r0, #0
  402d0a:	f000 8150 	beq.w	402fae <_svfprintf_r+0xb2a>
  402d0e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d10:	4a20      	ldr	r2, [pc, #128]	; (402d94 <_svfprintf_r+0x910>)
  402d12:	f8c8 2000 	str.w	r2, [r8]
  402d16:	3301      	adds	r3, #1
  402d18:	3401      	adds	r4, #1
  402d1a:	2201      	movs	r2, #1
  402d1c:	2b07      	cmp	r3, #7
  402d1e:	9427      	str	r4, [sp, #156]	; 0x9c
  402d20:	9326      	str	r3, [sp, #152]	; 0x98
  402d22:	f8c8 2004 	str.w	r2, [r8, #4]
  402d26:	f300 836a 	bgt.w	4033fe <_svfprintf_r+0xf7a>
  402d2a:	f108 0808 	add.w	r8, r8, #8
  402d2e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402d30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402d32:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d34:	4293      	cmp	r3, r2
  402d36:	db03      	blt.n	402d40 <_svfprintf_r+0x8bc>
  402d38:	9b07      	ldr	r3, [sp, #28]
  402d3a:	07dd      	lsls	r5, r3, #31
  402d3c:	f57f ad82 	bpl.w	402844 <_svfprintf_r+0x3c0>
  402d40:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d42:	9919      	ldr	r1, [sp, #100]	; 0x64
  402d44:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402d46:	f8c8 2000 	str.w	r2, [r8]
  402d4a:	3301      	adds	r3, #1
  402d4c:	440c      	add	r4, r1
  402d4e:	2b07      	cmp	r3, #7
  402d50:	f8c8 1004 	str.w	r1, [r8, #4]
  402d54:	9427      	str	r4, [sp, #156]	; 0x9c
  402d56:	9326      	str	r3, [sp, #152]	; 0x98
  402d58:	f300 839e 	bgt.w	403498 <_svfprintf_r+0x1014>
  402d5c:	f108 0808 	add.w	r8, r8, #8
  402d60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d62:	1e5e      	subs	r6, r3, #1
  402d64:	2e00      	cmp	r6, #0
  402d66:	f77f ad6d 	ble.w	402844 <_svfprintf_r+0x3c0>
  402d6a:	2e10      	cmp	r6, #16
  402d6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d6e:	4d0a      	ldr	r5, [pc, #40]	; (402d98 <_svfprintf_r+0x914>)
  402d70:	f340 81f5 	ble.w	40315e <_svfprintf_r+0xcda>
  402d74:	4622      	mov	r2, r4
  402d76:	2710      	movs	r7, #16
  402d78:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402d7c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402d7e:	e013      	b.n	402da8 <_svfprintf_r+0x924>
  402d80:	00406e64 	.word	0x00406e64
  402d84:	00406e50 	.word	0x00406e50
  402d88:	7fefffff 	.word	0x7fefffff
  402d8c:	00406e44 	.word	0x00406e44
  402d90:	00406e40 	.word	0x00406e40
  402d94:	00406e80 	.word	0x00406e80
  402d98:	00406e94 	.word	0x00406e94
  402d9c:	f108 0808 	add.w	r8, r8, #8
  402da0:	3e10      	subs	r6, #16
  402da2:	2e10      	cmp	r6, #16
  402da4:	f340 81da 	ble.w	40315c <_svfprintf_r+0xcd8>
  402da8:	3301      	adds	r3, #1
  402daa:	3210      	adds	r2, #16
  402dac:	2b07      	cmp	r3, #7
  402dae:	9227      	str	r2, [sp, #156]	; 0x9c
  402db0:	9326      	str	r3, [sp, #152]	; 0x98
  402db2:	e888 00a0 	stmia.w	r8, {r5, r7}
  402db6:	ddf1      	ble.n	402d9c <_svfprintf_r+0x918>
  402db8:	aa25      	add	r2, sp, #148	; 0x94
  402dba:	4621      	mov	r1, r4
  402dbc:	4658      	mov	r0, fp
  402dbe:	f002 fccd 	bl	40575c <__ssprint_r>
  402dc2:	2800      	cmp	r0, #0
  402dc4:	f47f ac30 	bne.w	402628 <_svfprintf_r+0x1a4>
  402dc8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402dca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402dcc:	46c8      	mov	r8, r9
  402dce:	e7e7      	b.n	402da0 <_svfprintf_r+0x91c>
  402dd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402dd2:	9a08      	ldr	r2, [sp, #32]
  402dd4:	1a9f      	subs	r7, r3, r2
  402dd6:	2f00      	cmp	r7, #0
  402dd8:	f77f ace5 	ble.w	4027a6 <_svfprintf_r+0x322>
  402ddc:	2f10      	cmp	r7, #16
  402dde:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402de0:	4db6      	ldr	r5, [pc, #728]	; (4030bc <_svfprintf_r+0xc38>)
  402de2:	dd27      	ble.n	402e34 <_svfprintf_r+0x9b0>
  402de4:	4642      	mov	r2, r8
  402de6:	4621      	mov	r1, r4
  402de8:	46b0      	mov	r8, r6
  402dea:	f04f 0b10 	mov.w	fp, #16
  402dee:	462e      	mov	r6, r5
  402df0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402df2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402df4:	e004      	b.n	402e00 <_svfprintf_r+0x97c>
  402df6:	3f10      	subs	r7, #16
  402df8:	2f10      	cmp	r7, #16
  402dfa:	f102 0208 	add.w	r2, r2, #8
  402dfe:	dd15      	ble.n	402e2c <_svfprintf_r+0x9a8>
  402e00:	3301      	adds	r3, #1
  402e02:	3110      	adds	r1, #16
  402e04:	2b07      	cmp	r3, #7
  402e06:	9127      	str	r1, [sp, #156]	; 0x9c
  402e08:	9326      	str	r3, [sp, #152]	; 0x98
  402e0a:	e882 0840 	stmia.w	r2, {r6, fp}
  402e0e:	ddf2      	ble.n	402df6 <_svfprintf_r+0x972>
  402e10:	aa25      	add	r2, sp, #148	; 0x94
  402e12:	4629      	mov	r1, r5
  402e14:	4620      	mov	r0, r4
  402e16:	f002 fca1 	bl	40575c <__ssprint_r>
  402e1a:	2800      	cmp	r0, #0
  402e1c:	f47f ac04 	bne.w	402628 <_svfprintf_r+0x1a4>
  402e20:	3f10      	subs	r7, #16
  402e22:	2f10      	cmp	r7, #16
  402e24:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402e26:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e28:	464a      	mov	r2, r9
  402e2a:	dce9      	bgt.n	402e00 <_svfprintf_r+0x97c>
  402e2c:	4635      	mov	r5, r6
  402e2e:	460c      	mov	r4, r1
  402e30:	4646      	mov	r6, r8
  402e32:	4690      	mov	r8, r2
  402e34:	3301      	adds	r3, #1
  402e36:	443c      	add	r4, r7
  402e38:	2b07      	cmp	r3, #7
  402e3a:	9427      	str	r4, [sp, #156]	; 0x9c
  402e3c:	9326      	str	r3, [sp, #152]	; 0x98
  402e3e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402e42:	f300 8232 	bgt.w	4032aa <_svfprintf_r+0xe26>
  402e46:	f108 0808 	add.w	r8, r8, #8
  402e4a:	e4ac      	b.n	4027a6 <_svfprintf_r+0x322>
  402e4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e4e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402e50:	2b01      	cmp	r3, #1
  402e52:	f340 81fe 	ble.w	403252 <_svfprintf_r+0xdce>
  402e56:	3701      	adds	r7, #1
  402e58:	3401      	adds	r4, #1
  402e5a:	2301      	movs	r3, #1
  402e5c:	2f07      	cmp	r7, #7
  402e5e:	9427      	str	r4, [sp, #156]	; 0x9c
  402e60:	9726      	str	r7, [sp, #152]	; 0x98
  402e62:	f8c8 6000 	str.w	r6, [r8]
  402e66:	f8c8 3004 	str.w	r3, [r8, #4]
  402e6a:	f300 8203 	bgt.w	403274 <_svfprintf_r+0xdf0>
  402e6e:	f108 0808 	add.w	r8, r8, #8
  402e72:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402e74:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402e76:	f8c8 3000 	str.w	r3, [r8]
  402e7a:	3701      	adds	r7, #1
  402e7c:	4414      	add	r4, r2
  402e7e:	2f07      	cmp	r7, #7
  402e80:	9427      	str	r4, [sp, #156]	; 0x9c
  402e82:	9726      	str	r7, [sp, #152]	; 0x98
  402e84:	f8c8 2004 	str.w	r2, [r8, #4]
  402e88:	f300 8200 	bgt.w	40328c <_svfprintf_r+0xe08>
  402e8c:	f108 0808 	add.w	r8, r8, #8
  402e90:	a815      	add	r0, sp, #84	; 0x54
  402e92:	c80d      	ldmia	r0, {r0, r2, r3}
  402e94:	9914      	ldr	r1, [sp, #80]	; 0x50
  402e96:	f7ff fa27 	bl	4022e8 <__aeabi_dcmpeq>
  402e9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e9c:	2800      	cmp	r0, #0
  402e9e:	f040 8101 	bne.w	4030a4 <_svfprintf_r+0xc20>
  402ea2:	3b01      	subs	r3, #1
  402ea4:	3701      	adds	r7, #1
  402ea6:	3601      	adds	r6, #1
  402ea8:	441c      	add	r4, r3
  402eaa:	2f07      	cmp	r7, #7
  402eac:	9726      	str	r7, [sp, #152]	; 0x98
  402eae:	9427      	str	r4, [sp, #156]	; 0x9c
  402eb0:	f8c8 6000 	str.w	r6, [r8]
  402eb4:	f8c8 3004 	str.w	r3, [r8, #4]
  402eb8:	f300 8127 	bgt.w	40310a <_svfprintf_r+0xc86>
  402ebc:	f108 0808 	add.w	r8, r8, #8
  402ec0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402ec2:	f8c8 2004 	str.w	r2, [r8, #4]
  402ec6:	3701      	adds	r7, #1
  402ec8:	4414      	add	r4, r2
  402eca:	ab21      	add	r3, sp, #132	; 0x84
  402ecc:	2f07      	cmp	r7, #7
  402ece:	9427      	str	r4, [sp, #156]	; 0x9c
  402ed0:	9726      	str	r7, [sp, #152]	; 0x98
  402ed2:	f8c8 3000 	str.w	r3, [r8]
  402ed6:	f77f acb3 	ble.w	402840 <_svfprintf_r+0x3bc>
  402eda:	aa25      	add	r2, sp, #148	; 0x94
  402edc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ede:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ee0:	f002 fc3c 	bl	40575c <__ssprint_r>
  402ee4:	2800      	cmp	r0, #0
  402ee6:	f47f ab9f 	bne.w	402628 <_svfprintf_r+0x1a4>
  402eea:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402eec:	46c8      	mov	r8, r9
  402eee:	e4a9      	b.n	402844 <_svfprintf_r+0x3c0>
  402ef0:	aa25      	add	r2, sp, #148	; 0x94
  402ef2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ef4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ef6:	f002 fc31 	bl	40575c <__ssprint_r>
  402efa:	2800      	cmp	r0, #0
  402efc:	f43f aceb 	beq.w	4028d6 <_svfprintf_r+0x452>
  402f00:	f7ff bb92 	b.w	402628 <_svfprintf_r+0x1a4>
  402f04:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402f08:	2b01      	cmp	r3, #1
  402f0a:	f000 8134 	beq.w	403176 <_svfprintf_r+0xcf2>
  402f0e:	2b02      	cmp	r3, #2
  402f10:	d125      	bne.n	402f5e <_svfprintf_r+0xada>
  402f12:	f8cd b01c 	str.w	fp, [sp, #28]
  402f16:	2400      	movs	r4, #0
  402f18:	2500      	movs	r5, #0
  402f1a:	e61e      	b.n	402b5a <_svfprintf_r+0x6d6>
  402f1c:	aa25      	add	r2, sp, #148	; 0x94
  402f1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f20:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f22:	f002 fc1b 	bl	40575c <__ssprint_r>
  402f26:	2800      	cmp	r0, #0
  402f28:	f47f ab7e 	bne.w	402628 <_svfprintf_r+0x1a4>
  402f2c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f2e:	46c8      	mov	r8, r9
  402f30:	e475      	b.n	40281e <_svfprintf_r+0x39a>
  402f32:	aa25      	add	r2, sp, #148	; 0x94
  402f34:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f36:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f38:	f002 fc10 	bl	40575c <__ssprint_r>
  402f3c:	2800      	cmp	r0, #0
  402f3e:	f47f ab73 	bne.w	402628 <_svfprintf_r+0x1a4>
  402f42:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f44:	46c8      	mov	r8, r9
  402f46:	e41b      	b.n	402780 <_svfprintf_r+0x2fc>
  402f48:	aa25      	add	r2, sp, #148	; 0x94
  402f4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f4c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f4e:	f002 fc05 	bl	40575c <__ssprint_r>
  402f52:	2800      	cmp	r0, #0
  402f54:	f47f ab68 	bne.w	402628 <_svfprintf_r+0x1a4>
  402f58:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f5a:	46c8      	mov	r8, r9
  402f5c:	e420      	b.n	4027a0 <_svfprintf_r+0x31c>
  402f5e:	f8cd b01c 	str.w	fp, [sp, #28]
  402f62:	2400      	movs	r4, #0
  402f64:	2500      	movs	r5, #0
  402f66:	4649      	mov	r1, r9
  402f68:	e000      	b.n	402f6c <_svfprintf_r+0xae8>
  402f6a:	4631      	mov	r1, r6
  402f6c:	08e2      	lsrs	r2, r4, #3
  402f6e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402f72:	08e8      	lsrs	r0, r5, #3
  402f74:	f004 0307 	and.w	r3, r4, #7
  402f78:	4605      	mov	r5, r0
  402f7a:	4614      	mov	r4, r2
  402f7c:	3330      	adds	r3, #48	; 0x30
  402f7e:	ea54 0205 	orrs.w	r2, r4, r5
  402f82:	f801 3c01 	strb.w	r3, [r1, #-1]
  402f86:	f101 36ff 	add.w	r6, r1, #4294967295
  402f8a:	d1ee      	bne.n	402f6a <_svfprintf_r+0xae6>
  402f8c:	9a07      	ldr	r2, [sp, #28]
  402f8e:	07d2      	lsls	r2, r2, #31
  402f90:	f57f adf3 	bpl.w	402b7a <_svfprintf_r+0x6f6>
  402f94:	2b30      	cmp	r3, #48	; 0x30
  402f96:	f43f adf0 	beq.w	402b7a <_svfprintf_r+0x6f6>
  402f9a:	3902      	subs	r1, #2
  402f9c:	2330      	movs	r3, #48	; 0x30
  402f9e:	f806 3c01 	strb.w	r3, [r6, #-1]
  402fa2:	eba9 0301 	sub.w	r3, r9, r1
  402fa6:	930e      	str	r3, [sp, #56]	; 0x38
  402fa8:	460e      	mov	r6, r1
  402faa:	f7ff bb7b 	b.w	4026a4 <_svfprintf_r+0x220>
  402fae:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402fb0:	2900      	cmp	r1, #0
  402fb2:	f340 822e 	ble.w	403412 <_svfprintf_r+0xf8e>
  402fb6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402fb8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402fba:	4293      	cmp	r3, r2
  402fbc:	bfa8      	it	ge
  402fbe:	4613      	movge	r3, r2
  402fc0:	2b00      	cmp	r3, #0
  402fc2:	461f      	mov	r7, r3
  402fc4:	dd0d      	ble.n	402fe2 <_svfprintf_r+0xb5e>
  402fc6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402fc8:	f8c8 6000 	str.w	r6, [r8]
  402fcc:	3301      	adds	r3, #1
  402fce:	443c      	add	r4, r7
  402fd0:	2b07      	cmp	r3, #7
  402fd2:	9427      	str	r4, [sp, #156]	; 0x9c
  402fd4:	f8c8 7004 	str.w	r7, [r8, #4]
  402fd8:	9326      	str	r3, [sp, #152]	; 0x98
  402fda:	f300 831f 	bgt.w	40361c <_svfprintf_r+0x1198>
  402fde:	f108 0808 	add.w	r8, r8, #8
  402fe2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402fe4:	2f00      	cmp	r7, #0
  402fe6:	bfa8      	it	ge
  402fe8:	1bdb      	subge	r3, r3, r7
  402fea:	2b00      	cmp	r3, #0
  402fec:	461f      	mov	r7, r3
  402fee:	f340 80d6 	ble.w	40319e <_svfprintf_r+0xd1a>
  402ff2:	2f10      	cmp	r7, #16
  402ff4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ff6:	4d31      	ldr	r5, [pc, #196]	; (4030bc <_svfprintf_r+0xc38>)
  402ff8:	f340 81ed 	ble.w	4033d6 <_svfprintf_r+0xf52>
  402ffc:	4642      	mov	r2, r8
  402ffe:	4621      	mov	r1, r4
  403000:	46b0      	mov	r8, r6
  403002:	f04f 0b10 	mov.w	fp, #16
  403006:	462e      	mov	r6, r5
  403008:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40300a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40300c:	e004      	b.n	403018 <_svfprintf_r+0xb94>
  40300e:	3208      	adds	r2, #8
  403010:	3f10      	subs	r7, #16
  403012:	2f10      	cmp	r7, #16
  403014:	f340 81db 	ble.w	4033ce <_svfprintf_r+0xf4a>
  403018:	3301      	adds	r3, #1
  40301a:	3110      	adds	r1, #16
  40301c:	2b07      	cmp	r3, #7
  40301e:	9127      	str	r1, [sp, #156]	; 0x9c
  403020:	9326      	str	r3, [sp, #152]	; 0x98
  403022:	e882 0840 	stmia.w	r2, {r6, fp}
  403026:	ddf2      	ble.n	40300e <_svfprintf_r+0xb8a>
  403028:	aa25      	add	r2, sp, #148	; 0x94
  40302a:	4629      	mov	r1, r5
  40302c:	4620      	mov	r0, r4
  40302e:	f002 fb95 	bl	40575c <__ssprint_r>
  403032:	2800      	cmp	r0, #0
  403034:	f47f aaf8 	bne.w	402628 <_svfprintf_r+0x1a4>
  403038:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40303a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40303c:	464a      	mov	r2, r9
  40303e:	e7e7      	b.n	403010 <_svfprintf_r+0xb8c>
  403040:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403042:	930e      	str	r3, [sp, #56]	; 0x38
  403044:	464e      	mov	r6, r9
  403046:	f7ff bb2d 	b.w	4026a4 <_svfprintf_r+0x220>
  40304a:	2d00      	cmp	r5, #0
  40304c:	bf08      	it	eq
  40304e:	2c0a      	cmpeq	r4, #10
  403050:	f0c0 808f 	bcc.w	403172 <_svfprintf_r+0xcee>
  403054:	464e      	mov	r6, r9
  403056:	4620      	mov	r0, r4
  403058:	4629      	mov	r1, r5
  40305a:	220a      	movs	r2, #10
  40305c:	2300      	movs	r3, #0
  40305e:	f003 f82f 	bl	4060c0 <__aeabi_uldivmod>
  403062:	3230      	adds	r2, #48	; 0x30
  403064:	f806 2d01 	strb.w	r2, [r6, #-1]!
  403068:	4620      	mov	r0, r4
  40306a:	4629      	mov	r1, r5
  40306c:	2300      	movs	r3, #0
  40306e:	220a      	movs	r2, #10
  403070:	f003 f826 	bl	4060c0 <__aeabi_uldivmod>
  403074:	4604      	mov	r4, r0
  403076:	460d      	mov	r5, r1
  403078:	ea54 0305 	orrs.w	r3, r4, r5
  40307c:	d1eb      	bne.n	403056 <_svfprintf_r+0xbd2>
  40307e:	eba9 0306 	sub.w	r3, r9, r6
  403082:	930e      	str	r3, [sp, #56]	; 0x38
  403084:	f7ff bb0e 	b.w	4026a4 <_svfprintf_r+0x220>
  403088:	aa25      	add	r2, sp, #148	; 0x94
  40308a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40308c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40308e:	f002 fb65 	bl	40575c <__ssprint_r>
  403092:	2800      	cmp	r0, #0
  403094:	f47f aac8 	bne.w	402628 <_svfprintf_r+0x1a4>
  403098:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40309c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40309e:	46c8      	mov	r8, r9
  4030a0:	f7ff bb5e 	b.w	402760 <_svfprintf_r+0x2dc>
  4030a4:	1e5e      	subs	r6, r3, #1
  4030a6:	2e00      	cmp	r6, #0
  4030a8:	f77f af0a 	ble.w	402ec0 <_svfprintf_r+0xa3c>
  4030ac:	2e10      	cmp	r6, #16
  4030ae:	4d03      	ldr	r5, [pc, #12]	; (4030bc <_svfprintf_r+0xc38>)
  4030b0:	dd22      	ble.n	4030f8 <_svfprintf_r+0xc74>
  4030b2:	4622      	mov	r2, r4
  4030b4:	f04f 0b10 	mov.w	fp, #16
  4030b8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4030ba:	e006      	b.n	4030ca <_svfprintf_r+0xc46>
  4030bc:	00406e94 	.word	0x00406e94
  4030c0:	3e10      	subs	r6, #16
  4030c2:	2e10      	cmp	r6, #16
  4030c4:	f108 0808 	add.w	r8, r8, #8
  4030c8:	dd15      	ble.n	4030f6 <_svfprintf_r+0xc72>
  4030ca:	3701      	adds	r7, #1
  4030cc:	3210      	adds	r2, #16
  4030ce:	2f07      	cmp	r7, #7
  4030d0:	9227      	str	r2, [sp, #156]	; 0x9c
  4030d2:	9726      	str	r7, [sp, #152]	; 0x98
  4030d4:	e888 0820 	stmia.w	r8, {r5, fp}
  4030d8:	ddf2      	ble.n	4030c0 <_svfprintf_r+0xc3c>
  4030da:	aa25      	add	r2, sp, #148	; 0x94
  4030dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030de:	4620      	mov	r0, r4
  4030e0:	f002 fb3c 	bl	40575c <__ssprint_r>
  4030e4:	2800      	cmp	r0, #0
  4030e6:	f47f aa9f 	bne.w	402628 <_svfprintf_r+0x1a4>
  4030ea:	3e10      	subs	r6, #16
  4030ec:	2e10      	cmp	r6, #16
  4030ee:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4030f0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4030f2:	46c8      	mov	r8, r9
  4030f4:	dce9      	bgt.n	4030ca <_svfprintf_r+0xc46>
  4030f6:	4614      	mov	r4, r2
  4030f8:	3701      	adds	r7, #1
  4030fa:	4434      	add	r4, r6
  4030fc:	2f07      	cmp	r7, #7
  4030fe:	9427      	str	r4, [sp, #156]	; 0x9c
  403100:	9726      	str	r7, [sp, #152]	; 0x98
  403102:	e888 0060 	stmia.w	r8, {r5, r6}
  403106:	f77f aed9 	ble.w	402ebc <_svfprintf_r+0xa38>
  40310a:	aa25      	add	r2, sp, #148	; 0x94
  40310c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40310e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403110:	f002 fb24 	bl	40575c <__ssprint_r>
  403114:	2800      	cmp	r0, #0
  403116:	f47f aa87 	bne.w	402628 <_svfprintf_r+0x1a4>
  40311a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40311c:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40311e:	46c8      	mov	r8, r9
  403120:	e6ce      	b.n	402ec0 <_svfprintf_r+0xa3c>
  403122:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403124:	6814      	ldr	r4, [r2, #0]
  403126:	4613      	mov	r3, r2
  403128:	3304      	adds	r3, #4
  40312a:	17e5      	asrs	r5, r4, #31
  40312c:	930f      	str	r3, [sp, #60]	; 0x3c
  40312e:	4622      	mov	r2, r4
  403130:	462b      	mov	r3, r5
  403132:	e4fa      	b.n	402b2a <_svfprintf_r+0x6a6>
  403134:	3204      	adds	r2, #4
  403136:	681c      	ldr	r4, [r3, #0]
  403138:	920f      	str	r2, [sp, #60]	; 0x3c
  40313a:	2301      	movs	r3, #1
  40313c:	2500      	movs	r5, #0
  40313e:	f7ff ba94 	b.w	40266a <_svfprintf_r+0x1e6>
  403142:	681c      	ldr	r4, [r3, #0]
  403144:	3304      	adds	r3, #4
  403146:	930f      	str	r3, [sp, #60]	; 0x3c
  403148:	2500      	movs	r5, #0
  40314a:	e421      	b.n	402990 <_svfprintf_r+0x50c>
  40314c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40314e:	460a      	mov	r2, r1
  403150:	3204      	adds	r2, #4
  403152:	680c      	ldr	r4, [r1, #0]
  403154:	920f      	str	r2, [sp, #60]	; 0x3c
  403156:	2500      	movs	r5, #0
  403158:	f7ff ba87 	b.w	40266a <_svfprintf_r+0x1e6>
  40315c:	4614      	mov	r4, r2
  40315e:	3301      	adds	r3, #1
  403160:	4434      	add	r4, r6
  403162:	2b07      	cmp	r3, #7
  403164:	9427      	str	r4, [sp, #156]	; 0x9c
  403166:	9326      	str	r3, [sp, #152]	; 0x98
  403168:	e888 0060 	stmia.w	r8, {r5, r6}
  40316c:	f77f ab68 	ble.w	402840 <_svfprintf_r+0x3bc>
  403170:	e6b3      	b.n	402eda <_svfprintf_r+0xa56>
  403172:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403176:	f8cd b01c 	str.w	fp, [sp, #28]
  40317a:	ae42      	add	r6, sp, #264	; 0x108
  40317c:	3430      	adds	r4, #48	; 0x30
  40317e:	2301      	movs	r3, #1
  403180:	f806 4d41 	strb.w	r4, [r6, #-65]!
  403184:	930e      	str	r3, [sp, #56]	; 0x38
  403186:	f7ff ba8d 	b.w	4026a4 <_svfprintf_r+0x220>
  40318a:	aa25      	add	r2, sp, #148	; 0x94
  40318c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40318e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403190:	f002 fae4 	bl	40575c <__ssprint_r>
  403194:	2800      	cmp	r0, #0
  403196:	f47f aa47 	bne.w	402628 <_svfprintf_r+0x1a4>
  40319a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40319c:	46c8      	mov	r8, r9
  40319e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4031a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4031a2:	429a      	cmp	r2, r3
  4031a4:	db44      	blt.n	403230 <_svfprintf_r+0xdac>
  4031a6:	9b07      	ldr	r3, [sp, #28]
  4031a8:	07d9      	lsls	r1, r3, #31
  4031aa:	d441      	bmi.n	403230 <_svfprintf_r+0xdac>
  4031ac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4031ae:	9812      	ldr	r0, [sp, #72]	; 0x48
  4031b0:	1a9a      	subs	r2, r3, r2
  4031b2:	1a1d      	subs	r5, r3, r0
  4031b4:	4295      	cmp	r5, r2
  4031b6:	bfa8      	it	ge
  4031b8:	4615      	movge	r5, r2
  4031ba:	2d00      	cmp	r5, #0
  4031bc:	dd0e      	ble.n	4031dc <_svfprintf_r+0xd58>
  4031be:	9926      	ldr	r1, [sp, #152]	; 0x98
  4031c0:	f8c8 5004 	str.w	r5, [r8, #4]
  4031c4:	3101      	adds	r1, #1
  4031c6:	4406      	add	r6, r0
  4031c8:	442c      	add	r4, r5
  4031ca:	2907      	cmp	r1, #7
  4031cc:	f8c8 6000 	str.w	r6, [r8]
  4031d0:	9427      	str	r4, [sp, #156]	; 0x9c
  4031d2:	9126      	str	r1, [sp, #152]	; 0x98
  4031d4:	f300 823b 	bgt.w	40364e <_svfprintf_r+0x11ca>
  4031d8:	f108 0808 	add.w	r8, r8, #8
  4031dc:	2d00      	cmp	r5, #0
  4031de:	bfac      	ite	ge
  4031e0:	1b56      	subge	r6, r2, r5
  4031e2:	4616      	movlt	r6, r2
  4031e4:	2e00      	cmp	r6, #0
  4031e6:	f77f ab2d 	ble.w	402844 <_svfprintf_r+0x3c0>
  4031ea:	2e10      	cmp	r6, #16
  4031ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4031ee:	4db0      	ldr	r5, [pc, #704]	; (4034b0 <_svfprintf_r+0x102c>)
  4031f0:	ddb5      	ble.n	40315e <_svfprintf_r+0xcda>
  4031f2:	4622      	mov	r2, r4
  4031f4:	2710      	movs	r7, #16
  4031f6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4031fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4031fc:	e004      	b.n	403208 <_svfprintf_r+0xd84>
  4031fe:	f108 0808 	add.w	r8, r8, #8
  403202:	3e10      	subs	r6, #16
  403204:	2e10      	cmp	r6, #16
  403206:	dda9      	ble.n	40315c <_svfprintf_r+0xcd8>
  403208:	3301      	adds	r3, #1
  40320a:	3210      	adds	r2, #16
  40320c:	2b07      	cmp	r3, #7
  40320e:	9227      	str	r2, [sp, #156]	; 0x9c
  403210:	9326      	str	r3, [sp, #152]	; 0x98
  403212:	e888 00a0 	stmia.w	r8, {r5, r7}
  403216:	ddf2      	ble.n	4031fe <_svfprintf_r+0xd7a>
  403218:	aa25      	add	r2, sp, #148	; 0x94
  40321a:	4621      	mov	r1, r4
  40321c:	4658      	mov	r0, fp
  40321e:	f002 fa9d 	bl	40575c <__ssprint_r>
  403222:	2800      	cmp	r0, #0
  403224:	f47f aa00 	bne.w	402628 <_svfprintf_r+0x1a4>
  403228:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40322a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40322c:	46c8      	mov	r8, r9
  40322e:	e7e8      	b.n	403202 <_svfprintf_r+0xd7e>
  403230:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403232:	9819      	ldr	r0, [sp, #100]	; 0x64
  403234:	991a      	ldr	r1, [sp, #104]	; 0x68
  403236:	f8c8 1000 	str.w	r1, [r8]
  40323a:	3301      	adds	r3, #1
  40323c:	4404      	add	r4, r0
  40323e:	2b07      	cmp	r3, #7
  403240:	9427      	str	r4, [sp, #156]	; 0x9c
  403242:	f8c8 0004 	str.w	r0, [r8, #4]
  403246:	9326      	str	r3, [sp, #152]	; 0x98
  403248:	f300 81f5 	bgt.w	403636 <_svfprintf_r+0x11b2>
  40324c:	f108 0808 	add.w	r8, r8, #8
  403250:	e7ac      	b.n	4031ac <_svfprintf_r+0xd28>
  403252:	9b07      	ldr	r3, [sp, #28]
  403254:	07da      	lsls	r2, r3, #31
  403256:	f53f adfe 	bmi.w	402e56 <_svfprintf_r+0x9d2>
  40325a:	3701      	adds	r7, #1
  40325c:	3401      	adds	r4, #1
  40325e:	2301      	movs	r3, #1
  403260:	2f07      	cmp	r7, #7
  403262:	9427      	str	r4, [sp, #156]	; 0x9c
  403264:	9726      	str	r7, [sp, #152]	; 0x98
  403266:	f8c8 6000 	str.w	r6, [r8]
  40326a:	f8c8 3004 	str.w	r3, [r8, #4]
  40326e:	f77f ae25 	ble.w	402ebc <_svfprintf_r+0xa38>
  403272:	e74a      	b.n	40310a <_svfprintf_r+0xc86>
  403274:	aa25      	add	r2, sp, #148	; 0x94
  403276:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403278:	980c      	ldr	r0, [sp, #48]	; 0x30
  40327a:	f002 fa6f 	bl	40575c <__ssprint_r>
  40327e:	2800      	cmp	r0, #0
  403280:	f47f a9d2 	bne.w	402628 <_svfprintf_r+0x1a4>
  403284:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403286:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403288:	46c8      	mov	r8, r9
  40328a:	e5f2      	b.n	402e72 <_svfprintf_r+0x9ee>
  40328c:	aa25      	add	r2, sp, #148	; 0x94
  40328e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403290:	980c      	ldr	r0, [sp, #48]	; 0x30
  403292:	f002 fa63 	bl	40575c <__ssprint_r>
  403296:	2800      	cmp	r0, #0
  403298:	f47f a9c6 	bne.w	402628 <_svfprintf_r+0x1a4>
  40329c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40329e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4032a0:	46c8      	mov	r8, r9
  4032a2:	e5f5      	b.n	402e90 <_svfprintf_r+0xa0c>
  4032a4:	464e      	mov	r6, r9
  4032a6:	f7ff b9fd 	b.w	4026a4 <_svfprintf_r+0x220>
  4032aa:	aa25      	add	r2, sp, #148	; 0x94
  4032ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032ae:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032b0:	f002 fa54 	bl	40575c <__ssprint_r>
  4032b4:	2800      	cmp	r0, #0
  4032b6:	f47f a9b7 	bne.w	402628 <_svfprintf_r+0x1a4>
  4032ba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4032bc:	46c8      	mov	r8, r9
  4032be:	f7ff ba72 	b.w	4027a6 <_svfprintf_r+0x322>
  4032c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4032c4:	4622      	mov	r2, r4
  4032c6:	4620      	mov	r0, r4
  4032c8:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4032ca:	4623      	mov	r3, r4
  4032cc:	4621      	mov	r1, r4
  4032ce:	f002 feb9 	bl	406044 <__aeabi_dcmpun>
  4032d2:	2800      	cmp	r0, #0
  4032d4:	f040 8286 	bne.w	4037e4 <_svfprintf_r+0x1360>
  4032d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4032da:	3301      	adds	r3, #1
  4032dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032de:	f023 0320 	bic.w	r3, r3, #32
  4032e2:	930e      	str	r3, [sp, #56]	; 0x38
  4032e4:	f000 81e2 	beq.w	4036ac <_svfprintf_r+0x1228>
  4032e8:	2b47      	cmp	r3, #71	; 0x47
  4032ea:	f000 811e 	beq.w	40352a <_svfprintf_r+0x10a6>
  4032ee:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4032f2:	9307      	str	r3, [sp, #28]
  4032f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4032f6:	1e1f      	subs	r7, r3, #0
  4032f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4032fa:	9308      	str	r3, [sp, #32]
  4032fc:	bfbb      	ittet	lt
  4032fe:	463b      	movlt	r3, r7
  403300:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403304:	2300      	movge	r3, #0
  403306:	232d      	movlt	r3, #45	; 0x2d
  403308:	9310      	str	r3, [sp, #64]	; 0x40
  40330a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40330c:	2b66      	cmp	r3, #102	; 0x66
  40330e:	f000 81bb 	beq.w	403688 <_svfprintf_r+0x1204>
  403312:	2b46      	cmp	r3, #70	; 0x46
  403314:	f000 80df 	beq.w	4034d6 <_svfprintf_r+0x1052>
  403318:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40331a:	9a08      	ldr	r2, [sp, #32]
  40331c:	2b45      	cmp	r3, #69	; 0x45
  40331e:	bf0c      	ite	eq
  403320:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  403322:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403324:	a823      	add	r0, sp, #140	; 0x8c
  403326:	a920      	add	r1, sp, #128	; 0x80
  403328:	bf08      	it	eq
  40332a:	1c5d      	addeq	r5, r3, #1
  40332c:	9004      	str	r0, [sp, #16]
  40332e:	9103      	str	r1, [sp, #12]
  403330:	a81f      	add	r0, sp, #124	; 0x7c
  403332:	2102      	movs	r1, #2
  403334:	463b      	mov	r3, r7
  403336:	9002      	str	r0, [sp, #8]
  403338:	9501      	str	r5, [sp, #4]
  40333a:	9100      	str	r1, [sp, #0]
  40333c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40333e:	f000 fb73 	bl	403a28 <_dtoa_r>
  403342:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403344:	2b67      	cmp	r3, #103	; 0x67
  403346:	4606      	mov	r6, r0
  403348:	f040 81e0 	bne.w	40370c <_svfprintf_r+0x1288>
  40334c:	f01b 0f01 	tst.w	fp, #1
  403350:	f000 8246 	beq.w	4037e0 <_svfprintf_r+0x135c>
  403354:	1974      	adds	r4, r6, r5
  403356:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403358:	9808      	ldr	r0, [sp, #32]
  40335a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40335c:	4639      	mov	r1, r7
  40335e:	f7fe ffc3 	bl	4022e8 <__aeabi_dcmpeq>
  403362:	2800      	cmp	r0, #0
  403364:	f040 8165 	bne.w	403632 <_svfprintf_r+0x11ae>
  403368:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40336a:	42a3      	cmp	r3, r4
  40336c:	d206      	bcs.n	40337c <_svfprintf_r+0xef8>
  40336e:	2130      	movs	r1, #48	; 0x30
  403370:	1c5a      	adds	r2, r3, #1
  403372:	9223      	str	r2, [sp, #140]	; 0x8c
  403374:	7019      	strb	r1, [r3, #0]
  403376:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403378:	429c      	cmp	r4, r3
  40337a:	d8f9      	bhi.n	403370 <_svfprintf_r+0xeec>
  40337c:	1b9b      	subs	r3, r3, r6
  40337e:	9313      	str	r3, [sp, #76]	; 0x4c
  403380:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403382:	2b47      	cmp	r3, #71	; 0x47
  403384:	f000 80e9 	beq.w	40355a <_svfprintf_r+0x10d6>
  403388:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40338a:	2b65      	cmp	r3, #101	; 0x65
  40338c:	f340 81cd 	ble.w	40372a <_svfprintf_r+0x12a6>
  403390:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403392:	2b66      	cmp	r3, #102	; 0x66
  403394:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403396:	9312      	str	r3, [sp, #72]	; 0x48
  403398:	f000 819e 	beq.w	4036d8 <_svfprintf_r+0x1254>
  40339c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40339e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4033a0:	4619      	mov	r1, r3
  4033a2:	4291      	cmp	r1, r2
  4033a4:	f300 818a 	bgt.w	4036bc <_svfprintf_r+0x1238>
  4033a8:	f01b 0f01 	tst.w	fp, #1
  4033ac:	f040 8213 	bne.w	4037d6 <_svfprintf_r+0x1352>
  4033b0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4033b4:	9308      	str	r3, [sp, #32]
  4033b6:	2367      	movs	r3, #103	; 0x67
  4033b8:	920e      	str	r2, [sp, #56]	; 0x38
  4033ba:	9311      	str	r3, [sp, #68]	; 0x44
  4033bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4033be:	2b00      	cmp	r3, #0
  4033c0:	f040 80c4 	bne.w	40354c <_svfprintf_r+0x10c8>
  4033c4:	930a      	str	r3, [sp, #40]	; 0x28
  4033c6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4033ca:	f7ff b973 	b.w	4026b4 <_svfprintf_r+0x230>
  4033ce:	4635      	mov	r5, r6
  4033d0:	460c      	mov	r4, r1
  4033d2:	4646      	mov	r6, r8
  4033d4:	4690      	mov	r8, r2
  4033d6:	3301      	adds	r3, #1
  4033d8:	443c      	add	r4, r7
  4033da:	2b07      	cmp	r3, #7
  4033dc:	9427      	str	r4, [sp, #156]	; 0x9c
  4033de:	9326      	str	r3, [sp, #152]	; 0x98
  4033e0:	e888 00a0 	stmia.w	r8, {r5, r7}
  4033e4:	f73f aed1 	bgt.w	40318a <_svfprintf_r+0xd06>
  4033e8:	f108 0808 	add.w	r8, r8, #8
  4033ec:	e6d7      	b.n	40319e <_svfprintf_r+0xd1a>
  4033ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4033f0:	6813      	ldr	r3, [r2, #0]
  4033f2:	3204      	adds	r2, #4
  4033f4:	920f      	str	r2, [sp, #60]	; 0x3c
  4033f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4033f8:	601a      	str	r2, [r3, #0]
  4033fa:	f7ff b86a 	b.w	4024d2 <_svfprintf_r+0x4e>
  4033fe:	aa25      	add	r2, sp, #148	; 0x94
  403400:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403402:	980c      	ldr	r0, [sp, #48]	; 0x30
  403404:	f002 f9aa 	bl	40575c <__ssprint_r>
  403408:	2800      	cmp	r0, #0
  40340a:	f47f a90d 	bne.w	402628 <_svfprintf_r+0x1a4>
  40340e:	46c8      	mov	r8, r9
  403410:	e48d      	b.n	402d2e <_svfprintf_r+0x8aa>
  403412:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403414:	4a27      	ldr	r2, [pc, #156]	; (4034b4 <_svfprintf_r+0x1030>)
  403416:	f8c8 2000 	str.w	r2, [r8]
  40341a:	3301      	adds	r3, #1
  40341c:	3401      	adds	r4, #1
  40341e:	2201      	movs	r2, #1
  403420:	2b07      	cmp	r3, #7
  403422:	9427      	str	r4, [sp, #156]	; 0x9c
  403424:	9326      	str	r3, [sp, #152]	; 0x98
  403426:	f8c8 2004 	str.w	r2, [r8, #4]
  40342a:	dc72      	bgt.n	403512 <_svfprintf_r+0x108e>
  40342c:	f108 0808 	add.w	r8, r8, #8
  403430:	b929      	cbnz	r1, 40343e <_svfprintf_r+0xfba>
  403432:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403434:	b91b      	cbnz	r3, 40343e <_svfprintf_r+0xfba>
  403436:	9b07      	ldr	r3, [sp, #28]
  403438:	07d8      	lsls	r0, r3, #31
  40343a:	f57f aa03 	bpl.w	402844 <_svfprintf_r+0x3c0>
  40343e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403440:	9819      	ldr	r0, [sp, #100]	; 0x64
  403442:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403444:	f8c8 2000 	str.w	r2, [r8]
  403448:	3301      	adds	r3, #1
  40344a:	4602      	mov	r2, r0
  40344c:	4422      	add	r2, r4
  40344e:	2b07      	cmp	r3, #7
  403450:	9227      	str	r2, [sp, #156]	; 0x9c
  403452:	f8c8 0004 	str.w	r0, [r8, #4]
  403456:	9326      	str	r3, [sp, #152]	; 0x98
  403458:	f300 818d 	bgt.w	403776 <_svfprintf_r+0x12f2>
  40345c:	f108 0808 	add.w	r8, r8, #8
  403460:	2900      	cmp	r1, #0
  403462:	f2c0 8165 	blt.w	403730 <_svfprintf_r+0x12ac>
  403466:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403468:	f8c8 6000 	str.w	r6, [r8]
  40346c:	3301      	adds	r3, #1
  40346e:	188c      	adds	r4, r1, r2
  403470:	2b07      	cmp	r3, #7
  403472:	9427      	str	r4, [sp, #156]	; 0x9c
  403474:	9326      	str	r3, [sp, #152]	; 0x98
  403476:	f8c8 1004 	str.w	r1, [r8, #4]
  40347a:	f77f a9e1 	ble.w	402840 <_svfprintf_r+0x3bc>
  40347e:	e52c      	b.n	402eda <_svfprintf_r+0xa56>
  403480:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403482:	9909      	ldr	r1, [sp, #36]	; 0x24
  403484:	6813      	ldr	r3, [r2, #0]
  403486:	17cd      	asrs	r5, r1, #31
  403488:	4608      	mov	r0, r1
  40348a:	3204      	adds	r2, #4
  40348c:	4629      	mov	r1, r5
  40348e:	920f      	str	r2, [sp, #60]	; 0x3c
  403490:	e9c3 0100 	strd	r0, r1, [r3]
  403494:	f7ff b81d 	b.w	4024d2 <_svfprintf_r+0x4e>
  403498:	aa25      	add	r2, sp, #148	; 0x94
  40349a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40349c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40349e:	f002 f95d 	bl	40575c <__ssprint_r>
  4034a2:	2800      	cmp	r0, #0
  4034a4:	f47f a8c0 	bne.w	402628 <_svfprintf_r+0x1a4>
  4034a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4034aa:	46c8      	mov	r8, r9
  4034ac:	e458      	b.n	402d60 <_svfprintf_r+0x8dc>
  4034ae:	bf00      	nop
  4034b0:	00406e94 	.word	0x00406e94
  4034b4:	00406e80 	.word	0x00406e80
  4034b8:	2140      	movs	r1, #64	; 0x40
  4034ba:	980c      	ldr	r0, [sp, #48]	; 0x30
  4034bc:	f001 fa0a 	bl	4048d4 <_malloc_r>
  4034c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4034c2:	6010      	str	r0, [r2, #0]
  4034c4:	6110      	str	r0, [r2, #16]
  4034c6:	2800      	cmp	r0, #0
  4034c8:	f000 81f2 	beq.w	4038b0 <_svfprintf_r+0x142c>
  4034cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4034ce:	2340      	movs	r3, #64	; 0x40
  4034d0:	6153      	str	r3, [r2, #20]
  4034d2:	f7fe bfee 	b.w	4024b2 <_svfprintf_r+0x2e>
  4034d6:	a823      	add	r0, sp, #140	; 0x8c
  4034d8:	a920      	add	r1, sp, #128	; 0x80
  4034da:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4034dc:	9004      	str	r0, [sp, #16]
  4034de:	9103      	str	r1, [sp, #12]
  4034e0:	a81f      	add	r0, sp, #124	; 0x7c
  4034e2:	2103      	movs	r1, #3
  4034e4:	9002      	str	r0, [sp, #8]
  4034e6:	9a08      	ldr	r2, [sp, #32]
  4034e8:	9401      	str	r4, [sp, #4]
  4034ea:	463b      	mov	r3, r7
  4034ec:	9100      	str	r1, [sp, #0]
  4034ee:	980c      	ldr	r0, [sp, #48]	; 0x30
  4034f0:	f000 fa9a 	bl	403a28 <_dtoa_r>
  4034f4:	4625      	mov	r5, r4
  4034f6:	4606      	mov	r6, r0
  4034f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4034fa:	2b46      	cmp	r3, #70	; 0x46
  4034fc:	eb06 0405 	add.w	r4, r6, r5
  403500:	f47f af29 	bne.w	403356 <_svfprintf_r+0xed2>
  403504:	7833      	ldrb	r3, [r6, #0]
  403506:	2b30      	cmp	r3, #48	; 0x30
  403508:	f000 8178 	beq.w	4037fc <_svfprintf_r+0x1378>
  40350c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  40350e:	442c      	add	r4, r5
  403510:	e721      	b.n	403356 <_svfprintf_r+0xed2>
  403512:	aa25      	add	r2, sp, #148	; 0x94
  403514:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403516:	980c      	ldr	r0, [sp, #48]	; 0x30
  403518:	f002 f920 	bl	40575c <__ssprint_r>
  40351c:	2800      	cmp	r0, #0
  40351e:	f47f a883 	bne.w	402628 <_svfprintf_r+0x1a4>
  403522:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403524:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403526:	46c8      	mov	r8, r9
  403528:	e782      	b.n	403430 <_svfprintf_r+0xfac>
  40352a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40352c:	2b00      	cmp	r3, #0
  40352e:	bf08      	it	eq
  403530:	2301      	moveq	r3, #1
  403532:	930a      	str	r3, [sp, #40]	; 0x28
  403534:	e6db      	b.n	4032ee <_svfprintf_r+0xe6a>
  403536:	4630      	mov	r0, r6
  403538:	940a      	str	r4, [sp, #40]	; 0x28
  40353a:	f002 f8a1 	bl	405680 <strlen>
  40353e:	950f      	str	r5, [sp, #60]	; 0x3c
  403540:	900e      	str	r0, [sp, #56]	; 0x38
  403542:	f8cd b01c 	str.w	fp, [sp, #28]
  403546:	4603      	mov	r3, r0
  403548:	f7ff b9f9 	b.w	40293e <_svfprintf_r+0x4ba>
  40354c:	272d      	movs	r7, #45	; 0x2d
  40354e:	2300      	movs	r3, #0
  403550:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403554:	930a      	str	r3, [sp, #40]	; 0x28
  403556:	f7ff b8ae 	b.w	4026b6 <_svfprintf_r+0x232>
  40355a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40355c:	9312      	str	r3, [sp, #72]	; 0x48
  40355e:	461a      	mov	r2, r3
  403560:	3303      	adds	r3, #3
  403562:	db04      	blt.n	40356e <_svfprintf_r+0x10ea>
  403564:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403566:	4619      	mov	r1, r3
  403568:	4291      	cmp	r1, r2
  40356a:	f6bf af17 	bge.w	40339c <_svfprintf_r+0xf18>
  40356e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403570:	3b02      	subs	r3, #2
  403572:	9311      	str	r3, [sp, #68]	; 0x44
  403574:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403578:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  40357c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40357e:	3b01      	subs	r3, #1
  403580:	2b00      	cmp	r3, #0
  403582:	931f      	str	r3, [sp, #124]	; 0x7c
  403584:	bfbd      	ittte	lt
  403586:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403588:	f1c3 0301 	rsblt	r3, r3, #1
  40358c:	222d      	movlt	r2, #45	; 0x2d
  40358e:	222b      	movge	r2, #43	; 0x2b
  403590:	2b09      	cmp	r3, #9
  403592:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  403596:	f340 8116 	ble.w	4037c6 <_svfprintf_r+0x1342>
  40359a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  40359e:	4620      	mov	r0, r4
  4035a0:	4dab      	ldr	r5, [pc, #684]	; (403850 <_svfprintf_r+0x13cc>)
  4035a2:	e000      	b.n	4035a6 <_svfprintf_r+0x1122>
  4035a4:	4610      	mov	r0, r2
  4035a6:	fb85 1203 	smull	r1, r2, r5, r3
  4035aa:	17d9      	asrs	r1, r3, #31
  4035ac:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4035b0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4035b4:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4035b8:	3230      	adds	r2, #48	; 0x30
  4035ba:	2909      	cmp	r1, #9
  4035bc:	f800 2c01 	strb.w	r2, [r0, #-1]
  4035c0:	460b      	mov	r3, r1
  4035c2:	f100 32ff 	add.w	r2, r0, #4294967295
  4035c6:	dced      	bgt.n	4035a4 <_svfprintf_r+0x1120>
  4035c8:	3330      	adds	r3, #48	; 0x30
  4035ca:	3802      	subs	r0, #2
  4035cc:	b2d9      	uxtb	r1, r3
  4035ce:	4284      	cmp	r4, r0
  4035d0:	f802 1c01 	strb.w	r1, [r2, #-1]
  4035d4:	f240 8165 	bls.w	4038a2 <_svfprintf_r+0x141e>
  4035d8:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4035dc:	4613      	mov	r3, r2
  4035de:	e001      	b.n	4035e4 <_svfprintf_r+0x1160>
  4035e0:	f813 1b01 	ldrb.w	r1, [r3], #1
  4035e4:	f800 1b01 	strb.w	r1, [r0], #1
  4035e8:	42a3      	cmp	r3, r4
  4035ea:	d1f9      	bne.n	4035e0 <_svfprintf_r+0x115c>
  4035ec:	3301      	adds	r3, #1
  4035ee:	1a9b      	subs	r3, r3, r2
  4035f0:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  4035f4:	4413      	add	r3, r2
  4035f6:	aa21      	add	r2, sp, #132	; 0x84
  4035f8:	1a9b      	subs	r3, r3, r2
  4035fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4035fc:	931b      	str	r3, [sp, #108]	; 0x6c
  4035fe:	2a01      	cmp	r2, #1
  403600:	4413      	add	r3, r2
  403602:	930e      	str	r3, [sp, #56]	; 0x38
  403604:	f340 8119 	ble.w	40383a <_svfprintf_r+0x13b6>
  403608:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40360a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40360c:	4413      	add	r3, r2
  40360e:	930e      	str	r3, [sp, #56]	; 0x38
  403610:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403614:	9308      	str	r3, [sp, #32]
  403616:	2300      	movs	r3, #0
  403618:	9312      	str	r3, [sp, #72]	; 0x48
  40361a:	e6cf      	b.n	4033bc <_svfprintf_r+0xf38>
  40361c:	aa25      	add	r2, sp, #148	; 0x94
  40361e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403620:	980c      	ldr	r0, [sp, #48]	; 0x30
  403622:	f002 f89b 	bl	40575c <__ssprint_r>
  403626:	2800      	cmp	r0, #0
  403628:	f47e affe 	bne.w	402628 <_svfprintf_r+0x1a4>
  40362c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40362e:	46c8      	mov	r8, r9
  403630:	e4d7      	b.n	402fe2 <_svfprintf_r+0xb5e>
  403632:	4623      	mov	r3, r4
  403634:	e6a2      	b.n	40337c <_svfprintf_r+0xef8>
  403636:	aa25      	add	r2, sp, #148	; 0x94
  403638:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40363a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40363c:	f002 f88e 	bl	40575c <__ssprint_r>
  403640:	2800      	cmp	r0, #0
  403642:	f47e aff1 	bne.w	402628 <_svfprintf_r+0x1a4>
  403646:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403648:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40364a:	46c8      	mov	r8, r9
  40364c:	e5ae      	b.n	4031ac <_svfprintf_r+0xd28>
  40364e:	aa25      	add	r2, sp, #148	; 0x94
  403650:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403652:	980c      	ldr	r0, [sp, #48]	; 0x30
  403654:	f002 f882 	bl	40575c <__ssprint_r>
  403658:	2800      	cmp	r0, #0
  40365a:	f47e afe5 	bne.w	402628 <_svfprintf_r+0x1a4>
  40365e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403660:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403662:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403664:	1a9a      	subs	r2, r3, r2
  403666:	46c8      	mov	r8, r9
  403668:	e5b8      	b.n	4031dc <_svfprintf_r+0xd58>
  40366a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40366c:	9612      	str	r6, [sp, #72]	; 0x48
  40366e:	2b06      	cmp	r3, #6
  403670:	bf28      	it	cs
  403672:	2306      	movcs	r3, #6
  403674:	960a      	str	r6, [sp, #40]	; 0x28
  403676:	4637      	mov	r7, r6
  403678:	9308      	str	r3, [sp, #32]
  40367a:	950f      	str	r5, [sp, #60]	; 0x3c
  40367c:	f8cd b01c 	str.w	fp, [sp, #28]
  403680:	930e      	str	r3, [sp, #56]	; 0x38
  403682:	4e74      	ldr	r6, [pc, #464]	; (403854 <_svfprintf_r+0x13d0>)
  403684:	f7ff b816 	b.w	4026b4 <_svfprintf_r+0x230>
  403688:	a823      	add	r0, sp, #140	; 0x8c
  40368a:	a920      	add	r1, sp, #128	; 0x80
  40368c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40368e:	9004      	str	r0, [sp, #16]
  403690:	9103      	str	r1, [sp, #12]
  403692:	a81f      	add	r0, sp, #124	; 0x7c
  403694:	2103      	movs	r1, #3
  403696:	9002      	str	r0, [sp, #8]
  403698:	9a08      	ldr	r2, [sp, #32]
  40369a:	9501      	str	r5, [sp, #4]
  40369c:	463b      	mov	r3, r7
  40369e:	9100      	str	r1, [sp, #0]
  4036a0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4036a2:	f000 f9c1 	bl	403a28 <_dtoa_r>
  4036a6:	4606      	mov	r6, r0
  4036a8:	1944      	adds	r4, r0, r5
  4036aa:	e72b      	b.n	403504 <_svfprintf_r+0x1080>
  4036ac:	2306      	movs	r3, #6
  4036ae:	930a      	str	r3, [sp, #40]	; 0x28
  4036b0:	e61d      	b.n	4032ee <_svfprintf_r+0xe6a>
  4036b2:	272d      	movs	r7, #45	; 0x2d
  4036b4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4036b8:	f7ff bacd 	b.w	402c56 <_svfprintf_r+0x7d2>
  4036bc:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4036be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4036c0:	4413      	add	r3, r2
  4036c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4036c4:	930e      	str	r3, [sp, #56]	; 0x38
  4036c6:	2a00      	cmp	r2, #0
  4036c8:	f340 80b0 	ble.w	40382c <_svfprintf_r+0x13a8>
  4036cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4036d0:	9308      	str	r3, [sp, #32]
  4036d2:	2367      	movs	r3, #103	; 0x67
  4036d4:	9311      	str	r3, [sp, #68]	; 0x44
  4036d6:	e671      	b.n	4033bc <_svfprintf_r+0xf38>
  4036d8:	2b00      	cmp	r3, #0
  4036da:	f340 80c3 	ble.w	403864 <_svfprintf_r+0x13e0>
  4036de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4036e0:	2a00      	cmp	r2, #0
  4036e2:	f040 8099 	bne.w	403818 <_svfprintf_r+0x1394>
  4036e6:	f01b 0f01 	tst.w	fp, #1
  4036ea:	f040 8095 	bne.w	403818 <_svfprintf_r+0x1394>
  4036ee:	9308      	str	r3, [sp, #32]
  4036f0:	930e      	str	r3, [sp, #56]	; 0x38
  4036f2:	e663      	b.n	4033bc <_svfprintf_r+0xf38>
  4036f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036f6:	9308      	str	r3, [sp, #32]
  4036f8:	930e      	str	r3, [sp, #56]	; 0x38
  4036fa:	900a      	str	r0, [sp, #40]	; 0x28
  4036fc:	950f      	str	r5, [sp, #60]	; 0x3c
  4036fe:	f8cd b01c 	str.w	fp, [sp, #28]
  403702:	9012      	str	r0, [sp, #72]	; 0x48
  403704:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403708:	f7fe bfd4 	b.w	4026b4 <_svfprintf_r+0x230>
  40370c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40370e:	2b47      	cmp	r3, #71	; 0x47
  403710:	f47f ae20 	bne.w	403354 <_svfprintf_r+0xed0>
  403714:	f01b 0f01 	tst.w	fp, #1
  403718:	f47f aeee 	bne.w	4034f8 <_svfprintf_r+0x1074>
  40371c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40371e:	1b9b      	subs	r3, r3, r6
  403720:	9313      	str	r3, [sp, #76]	; 0x4c
  403722:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403724:	2b47      	cmp	r3, #71	; 0x47
  403726:	f43f af18 	beq.w	40355a <_svfprintf_r+0x10d6>
  40372a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40372c:	9312      	str	r3, [sp, #72]	; 0x48
  40372e:	e721      	b.n	403574 <_svfprintf_r+0x10f0>
  403730:	424f      	negs	r7, r1
  403732:	3110      	adds	r1, #16
  403734:	4d48      	ldr	r5, [pc, #288]	; (403858 <_svfprintf_r+0x13d4>)
  403736:	da2f      	bge.n	403798 <_svfprintf_r+0x1314>
  403738:	2410      	movs	r4, #16
  40373a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40373e:	e004      	b.n	40374a <_svfprintf_r+0x12c6>
  403740:	f108 0808 	add.w	r8, r8, #8
  403744:	3f10      	subs	r7, #16
  403746:	2f10      	cmp	r7, #16
  403748:	dd26      	ble.n	403798 <_svfprintf_r+0x1314>
  40374a:	3301      	adds	r3, #1
  40374c:	3210      	adds	r2, #16
  40374e:	2b07      	cmp	r3, #7
  403750:	9227      	str	r2, [sp, #156]	; 0x9c
  403752:	9326      	str	r3, [sp, #152]	; 0x98
  403754:	f8c8 5000 	str.w	r5, [r8]
  403758:	f8c8 4004 	str.w	r4, [r8, #4]
  40375c:	ddf0      	ble.n	403740 <_svfprintf_r+0x12bc>
  40375e:	aa25      	add	r2, sp, #148	; 0x94
  403760:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403762:	4658      	mov	r0, fp
  403764:	f001 fffa 	bl	40575c <__ssprint_r>
  403768:	2800      	cmp	r0, #0
  40376a:	f47e af5d 	bne.w	402628 <_svfprintf_r+0x1a4>
  40376e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403770:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403772:	46c8      	mov	r8, r9
  403774:	e7e6      	b.n	403744 <_svfprintf_r+0x12c0>
  403776:	aa25      	add	r2, sp, #148	; 0x94
  403778:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40377a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40377c:	f001 ffee 	bl	40575c <__ssprint_r>
  403780:	2800      	cmp	r0, #0
  403782:	f47e af51 	bne.w	402628 <_svfprintf_r+0x1a4>
  403786:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403788:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40378a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40378c:	46c8      	mov	r8, r9
  40378e:	e667      	b.n	403460 <_svfprintf_r+0xfdc>
  403790:	2000      	movs	r0, #0
  403792:	900a      	str	r0, [sp, #40]	; 0x28
  403794:	f7fe bed0 	b.w	402538 <_svfprintf_r+0xb4>
  403798:	3301      	adds	r3, #1
  40379a:	443a      	add	r2, r7
  40379c:	2b07      	cmp	r3, #7
  40379e:	e888 00a0 	stmia.w	r8, {r5, r7}
  4037a2:	9227      	str	r2, [sp, #156]	; 0x9c
  4037a4:	9326      	str	r3, [sp, #152]	; 0x98
  4037a6:	f108 0808 	add.w	r8, r8, #8
  4037aa:	f77f ae5c 	ble.w	403466 <_svfprintf_r+0xfe2>
  4037ae:	aa25      	add	r2, sp, #148	; 0x94
  4037b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037b2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037b4:	f001 ffd2 	bl	40575c <__ssprint_r>
  4037b8:	2800      	cmp	r0, #0
  4037ba:	f47e af35 	bne.w	402628 <_svfprintf_r+0x1a4>
  4037be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4037c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4037c2:	46c8      	mov	r8, r9
  4037c4:	e64f      	b.n	403466 <_svfprintf_r+0xfe2>
  4037c6:	3330      	adds	r3, #48	; 0x30
  4037c8:	2230      	movs	r2, #48	; 0x30
  4037ca:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4037ce:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4037d2:	ab22      	add	r3, sp, #136	; 0x88
  4037d4:	e70f      	b.n	4035f6 <_svfprintf_r+0x1172>
  4037d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4037d8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4037da:	4413      	add	r3, r2
  4037dc:	930e      	str	r3, [sp, #56]	; 0x38
  4037de:	e775      	b.n	4036cc <_svfprintf_r+0x1248>
  4037e0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4037e2:	e5cb      	b.n	40337c <_svfprintf_r+0xef8>
  4037e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4037e6:	4e1d      	ldr	r6, [pc, #116]	; (40385c <_svfprintf_r+0x13d8>)
  4037e8:	2b00      	cmp	r3, #0
  4037ea:	bfb6      	itet	lt
  4037ec:	272d      	movlt	r7, #45	; 0x2d
  4037ee:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4037f2:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4037f6:	4b1a      	ldr	r3, [pc, #104]	; (403860 <_svfprintf_r+0x13dc>)
  4037f8:	f7ff ba2f 	b.w	402c5a <_svfprintf_r+0x7d6>
  4037fc:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4037fe:	9808      	ldr	r0, [sp, #32]
  403800:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403802:	4639      	mov	r1, r7
  403804:	f7fe fd70 	bl	4022e8 <__aeabi_dcmpeq>
  403808:	2800      	cmp	r0, #0
  40380a:	f47f ae7f 	bne.w	40350c <_svfprintf_r+0x1088>
  40380e:	f1c5 0501 	rsb	r5, r5, #1
  403812:	951f      	str	r5, [sp, #124]	; 0x7c
  403814:	442c      	add	r4, r5
  403816:	e59e      	b.n	403356 <_svfprintf_r+0xed2>
  403818:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40381a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40381c:	4413      	add	r3, r2
  40381e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403820:	441a      	add	r2, r3
  403822:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403826:	920e      	str	r2, [sp, #56]	; 0x38
  403828:	9308      	str	r3, [sp, #32]
  40382a:	e5c7      	b.n	4033bc <_svfprintf_r+0xf38>
  40382c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40382e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403830:	f1c3 0301 	rsb	r3, r3, #1
  403834:	441a      	add	r2, r3
  403836:	4613      	mov	r3, r2
  403838:	e7d0      	b.n	4037dc <_svfprintf_r+0x1358>
  40383a:	f01b 0301 	ands.w	r3, fp, #1
  40383e:	9312      	str	r3, [sp, #72]	; 0x48
  403840:	f47f aee2 	bne.w	403608 <_svfprintf_r+0x1184>
  403844:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403846:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40384a:	9308      	str	r3, [sp, #32]
  40384c:	e5b6      	b.n	4033bc <_svfprintf_r+0xf38>
  40384e:	bf00      	nop
  403850:	66666667 	.word	0x66666667
  403854:	00406e78 	.word	0x00406e78
  403858:	00406e94 	.word	0x00406e94
  40385c:	00406e4c 	.word	0x00406e4c
  403860:	00406e48 	.word	0x00406e48
  403864:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403866:	b913      	cbnz	r3, 40386e <_svfprintf_r+0x13ea>
  403868:	f01b 0f01 	tst.w	fp, #1
  40386c:	d002      	beq.n	403874 <_svfprintf_r+0x13f0>
  40386e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403870:	3301      	adds	r3, #1
  403872:	e7d4      	b.n	40381e <_svfprintf_r+0x139a>
  403874:	2301      	movs	r3, #1
  403876:	e73a      	b.n	4036ee <_svfprintf_r+0x126a>
  403878:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40387a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40387e:	6828      	ldr	r0, [r5, #0]
  403880:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403884:	900a      	str	r0, [sp, #40]	; 0x28
  403886:	4628      	mov	r0, r5
  403888:	3004      	adds	r0, #4
  40388a:	46a2      	mov	sl, r4
  40388c:	900f      	str	r0, [sp, #60]	; 0x3c
  40388e:	f7fe be51 	b.w	402534 <_svfprintf_r+0xb0>
  403892:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403896:	f7ff b867 	b.w	402968 <_svfprintf_r+0x4e4>
  40389a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40389e:	f7ff ba15 	b.w	402ccc <_svfprintf_r+0x848>
  4038a2:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4038a6:	e6a6      	b.n	4035f6 <_svfprintf_r+0x1172>
  4038a8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4038ac:	f7ff b8eb 	b.w	402a86 <_svfprintf_r+0x602>
  4038b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4038b2:	230c      	movs	r3, #12
  4038b4:	6013      	str	r3, [r2, #0]
  4038b6:	f04f 33ff 	mov.w	r3, #4294967295
  4038ba:	9309      	str	r3, [sp, #36]	; 0x24
  4038bc:	f7fe bebd 	b.w	40263a <_svfprintf_r+0x1b6>
  4038c0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4038c4:	f7ff b99a 	b.w	402bfc <_svfprintf_r+0x778>
  4038c8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4038cc:	f7ff b976 	b.w	402bbc <_svfprintf_r+0x738>
  4038d0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4038d4:	f7ff b959 	b.w	402b8a <_svfprintf_r+0x706>
  4038d8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4038dc:	f7ff b912 	b.w	402b04 <_svfprintf_r+0x680>

004038e0 <register_fini>:
  4038e0:	4b02      	ldr	r3, [pc, #8]	; (4038ec <register_fini+0xc>)
  4038e2:	b113      	cbz	r3, 4038ea <register_fini+0xa>
  4038e4:	4802      	ldr	r0, [pc, #8]	; (4038f0 <register_fini+0x10>)
  4038e6:	f000 b805 	b.w	4038f4 <atexit>
  4038ea:	4770      	bx	lr
  4038ec:	00000000 	.word	0x00000000
  4038f0:	0040487d 	.word	0x0040487d

004038f4 <atexit>:
  4038f4:	2300      	movs	r3, #0
  4038f6:	4601      	mov	r1, r0
  4038f8:	461a      	mov	r2, r3
  4038fa:	4618      	mov	r0, r3
  4038fc:	f001 bfac 	b.w	405858 <__register_exitproc>

00403900 <quorem>:
  403900:	6902      	ldr	r2, [r0, #16]
  403902:	690b      	ldr	r3, [r1, #16]
  403904:	4293      	cmp	r3, r2
  403906:	f300 808d 	bgt.w	403a24 <quorem+0x124>
  40390a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40390e:	f103 38ff 	add.w	r8, r3, #4294967295
  403912:	f101 0714 	add.w	r7, r1, #20
  403916:	f100 0b14 	add.w	fp, r0, #20
  40391a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40391e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403922:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403926:	b083      	sub	sp, #12
  403928:	3201      	adds	r2, #1
  40392a:	fbb3 f9f2 	udiv	r9, r3, r2
  40392e:	eb0b 0304 	add.w	r3, fp, r4
  403932:	9400      	str	r4, [sp, #0]
  403934:	eb07 0a04 	add.w	sl, r7, r4
  403938:	9301      	str	r3, [sp, #4]
  40393a:	f1b9 0f00 	cmp.w	r9, #0
  40393e:	d039      	beq.n	4039b4 <quorem+0xb4>
  403940:	2500      	movs	r5, #0
  403942:	462e      	mov	r6, r5
  403944:	46bc      	mov	ip, r7
  403946:	46de      	mov	lr, fp
  403948:	f85c 4b04 	ldr.w	r4, [ip], #4
  40394c:	f8de 3000 	ldr.w	r3, [lr]
  403950:	b2a2      	uxth	r2, r4
  403952:	fb09 5502 	mla	r5, r9, r2, r5
  403956:	0c22      	lsrs	r2, r4, #16
  403958:	0c2c      	lsrs	r4, r5, #16
  40395a:	fb09 4202 	mla	r2, r9, r2, r4
  40395e:	b2ad      	uxth	r5, r5
  403960:	1b75      	subs	r5, r6, r5
  403962:	b296      	uxth	r6, r2
  403964:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403968:	fa15 f383 	uxtah	r3, r5, r3
  40396c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403970:	b29b      	uxth	r3, r3
  403972:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403976:	45e2      	cmp	sl, ip
  403978:	ea4f 4512 	mov.w	r5, r2, lsr #16
  40397c:	f84e 3b04 	str.w	r3, [lr], #4
  403980:	ea4f 4626 	mov.w	r6, r6, asr #16
  403984:	d2e0      	bcs.n	403948 <quorem+0x48>
  403986:	9b00      	ldr	r3, [sp, #0]
  403988:	f85b 3003 	ldr.w	r3, [fp, r3]
  40398c:	b993      	cbnz	r3, 4039b4 <quorem+0xb4>
  40398e:	9c01      	ldr	r4, [sp, #4]
  403990:	1f23      	subs	r3, r4, #4
  403992:	459b      	cmp	fp, r3
  403994:	d20c      	bcs.n	4039b0 <quorem+0xb0>
  403996:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40399a:	b94b      	cbnz	r3, 4039b0 <quorem+0xb0>
  40399c:	f1a4 0308 	sub.w	r3, r4, #8
  4039a0:	e002      	b.n	4039a8 <quorem+0xa8>
  4039a2:	681a      	ldr	r2, [r3, #0]
  4039a4:	3b04      	subs	r3, #4
  4039a6:	b91a      	cbnz	r2, 4039b0 <quorem+0xb0>
  4039a8:	459b      	cmp	fp, r3
  4039aa:	f108 38ff 	add.w	r8, r8, #4294967295
  4039ae:	d3f8      	bcc.n	4039a2 <quorem+0xa2>
  4039b0:	f8c0 8010 	str.w	r8, [r0, #16]
  4039b4:	4604      	mov	r4, r0
  4039b6:	f001 fd37 	bl	405428 <__mcmp>
  4039ba:	2800      	cmp	r0, #0
  4039bc:	db2e      	blt.n	403a1c <quorem+0x11c>
  4039be:	f109 0901 	add.w	r9, r9, #1
  4039c2:	465d      	mov	r5, fp
  4039c4:	2300      	movs	r3, #0
  4039c6:	f857 1b04 	ldr.w	r1, [r7], #4
  4039ca:	6828      	ldr	r0, [r5, #0]
  4039cc:	b28a      	uxth	r2, r1
  4039ce:	1a9a      	subs	r2, r3, r2
  4039d0:	0c0b      	lsrs	r3, r1, #16
  4039d2:	fa12 f280 	uxtah	r2, r2, r0
  4039d6:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4039da:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4039de:	b292      	uxth	r2, r2
  4039e0:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4039e4:	45ba      	cmp	sl, r7
  4039e6:	f845 2b04 	str.w	r2, [r5], #4
  4039ea:	ea4f 4323 	mov.w	r3, r3, asr #16
  4039ee:	d2ea      	bcs.n	4039c6 <quorem+0xc6>
  4039f0:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4039f4:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4039f8:	b982      	cbnz	r2, 403a1c <quorem+0x11c>
  4039fa:	1f1a      	subs	r2, r3, #4
  4039fc:	4593      	cmp	fp, r2
  4039fe:	d20b      	bcs.n	403a18 <quorem+0x118>
  403a00:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403a04:	b942      	cbnz	r2, 403a18 <quorem+0x118>
  403a06:	3b08      	subs	r3, #8
  403a08:	e002      	b.n	403a10 <quorem+0x110>
  403a0a:	681a      	ldr	r2, [r3, #0]
  403a0c:	3b04      	subs	r3, #4
  403a0e:	b91a      	cbnz	r2, 403a18 <quorem+0x118>
  403a10:	459b      	cmp	fp, r3
  403a12:	f108 38ff 	add.w	r8, r8, #4294967295
  403a16:	d3f8      	bcc.n	403a0a <quorem+0x10a>
  403a18:	f8c4 8010 	str.w	r8, [r4, #16]
  403a1c:	4648      	mov	r0, r9
  403a1e:	b003      	add	sp, #12
  403a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a24:	2000      	movs	r0, #0
  403a26:	4770      	bx	lr

00403a28 <_dtoa_r>:
  403a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a2c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403a2e:	b09b      	sub	sp, #108	; 0x6c
  403a30:	4604      	mov	r4, r0
  403a32:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403a34:	4692      	mov	sl, r2
  403a36:	469b      	mov	fp, r3
  403a38:	b141      	cbz	r1, 403a4c <_dtoa_r+0x24>
  403a3a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403a3c:	604a      	str	r2, [r1, #4]
  403a3e:	2301      	movs	r3, #1
  403a40:	4093      	lsls	r3, r2
  403a42:	608b      	str	r3, [r1, #8]
  403a44:	f001 fb18 	bl	405078 <_Bfree>
  403a48:	2300      	movs	r3, #0
  403a4a:	6423      	str	r3, [r4, #64]	; 0x40
  403a4c:	f1bb 0f00 	cmp.w	fp, #0
  403a50:	465d      	mov	r5, fp
  403a52:	db35      	blt.n	403ac0 <_dtoa_r+0x98>
  403a54:	2300      	movs	r3, #0
  403a56:	6033      	str	r3, [r6, #0]
  403a58:	4b9d      	ldr	r3, [pc, #628]	; (403cd0 <_dtoa_r+0x2a8>)
  403a5a:	43ab      	bics	r3, r5
  403a5c:	d015      	beq.n	403a8a <_dtoa_r+0x62>
  403a5e:	4650      	mov	r0, sl
  403a60:	4659      	mov	r1, fp
  403a62:	2200      	movs	r2, #0
  403a64:	2300      	movs	r3, #0
  403a66:	f7fe fc3f 	bl	4022e8 <__aeabi_dcmpeq>
  403a6a:	4680      	mov	r8, r0
  403a6c:	2800      	cmp	r0, #0
  403a6e:	d02d      	beq.n	403acc <_dtoa_r+0xa4>
  403a70:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403a72:	2301      	movs	r3, #1
  403a74:	6013      	str	r3, [r2, #0]
  403a76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a78:	2b00      	cmp	r3, #0
  403a7a:	f000 80bd 	beq.w	403bf8 <_dtoa_r+0x1d0>
  403a7e:	4895      	ldr	r0, [pc, #596]	; (403cd4 <_dtoa_r+0x2ac>)
  403a80:	6018      	str	r0, [r3, #0]
  403a82:	3801      	subs	r0, #1
  403a84:	b01b      	add	sp, #108	; 0x6c
  403a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a8a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403a8c:	f242 730f 	movw	r3, #9999	; 0x270f
  403a90:	6013      	str	r3, [r2, #0]
  403a92:	f1ba 0f00 	cmp.w	sl, #0
  403a96:	d10d      	bne.n	403ab4 <_dtoa_r+0x8c>
  403a98:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403a9c:	b955      	cbnz	r5, 403ab4 <_dtoa_r+0x8c>
  403a9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403aa0:	488d      	ldr	r0, [pc, #564]	; (403cd8 <_dtoa_r+0x2b0>)
  403aa2:	2b00      	cmp	r3, #0
  403aa4:	d0ee      	beq.n	403a84 <_dtoa_r+0x5c>
  403aa6:	f100 0308 	add.w	r3, r0, #8
  403aaa:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403aac:	6013      	str	r3, [r2, #0]
  403aae:	b01b      	add	sp, #108	; 0x6c
  403ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403ab4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403ab6:	4889      	ldr	r0, [pc, #548]	; (403cdc <_dtoa_r+0x2b4>)
  403ab8:	2b00      	cmp	r3, #0
  403aba:	d0e3      	beq.n	403a84 <_dtoa_r+0x5c>
  403abc:	1cc3      	adds	r3, r0, #3
  403abe:	e7f4      	b.n	403aaa <_dtoa_r+0x82>
  403ac0:	2301      	movs	r3, #1
  403ac2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403ac6:	6033      	str	r3, [r6, #0]
  403ac8:	46ab      	mov	fp, r5
  403aca:	e7c5      	b.n	403a58 <_dtoa_r+0x30>
  403acc:	aa18      	add	r2, sp, #96	; 0x60
  403ace:	ab19      	add	r3, sp, #100	; 0x64
  403ad0:	9201      	str	r2, [sp, #4]
  403ad2:	9300      	str	r3, [sp, #0]
  403ad4:	4652      	mov	r2, sl
  403ad6:	465b      	mov	r3, fp
  403ad8:	4620      	mov	r0, r4
  403ada:	f001 fd45 	bl	405568 <__d2b>
  403ade:	0d2b      	lsrs	r3, r5, #20
  403ae0:	4681      	mov	r9, r0
  403ae2:	d071      	beq.n	403bc8 <_dtoa_r+0x1a0>
  403ae4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403ae8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403aec:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403aee:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403af2:	4650      	mov	r0, sl
  403af4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403af8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403afc:	2200      	movs	r2, #0
  403afe:	4b78      	ldr	r3, [pc, #480]	; (403ce0 <_dtoa_r+0x2b8>)
  403b00:	f7fd ffd6 	bl	401ab0 <__aeabi_dsub>
  403b04:	a36c      	add	r3, pc, #432	; (adr r3, 403cb8 <_dtoa_r+0x290>)
  403b06:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b0a:	f7fe f985 	bl	401e18 <__aeabi_dmul>
  403b0e:	a36c      	add	r3, pc, #432	; (adr r3, 403cc0 <_dtoa_r+0x298>)
  403b10:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b14:	f7fd ffce 	bl	401ab4 <__adddf3>
  403b18:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403b1c:	4630      	mov	r0, r6
  403b1e:	f7fe f915 	bl	401d4c <__aeabi_i2d>
  403b22:	a369      	add	r3, pc, #420	; (adr r3, 403cc8 <_dtoa_r+0x2a0>)
  403b24:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b28:	f7fe f976 	bl	401e18 <__aeabi_dmul>
  403b2c:	4602      	mov	r2, r0
  403b2e:	460b      	mov	r3, r1
  403b30:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403b34:	f7fd ffbe 	bl	401ab4 <__adddf3>
  403b38:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403b3c:	f002 fa98 	bl	406070 <__aeabi_d2iz>
  403b40:	2200      	movs	r2, #0
  403b42:	9002      	str	r0, [sp, #8]
  403b44:	2300      	movs	r3, #0
  403b46:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403b4a:	f7fe fbd7 	bl	4022fc <__aeabi_dcmplt>
  403b4e:	2800      	cmp	r0, #0
  403b50:	f040 8173 	bne.w	403e3a <_dtoa_r+0x412>
  403b54:	9d02      	ldr	r5, [sp, #8]
  403b56:	2d16      	cmp	r5, #22
  403b58:	f200 815d 	bhi.w	403e16 <_dtoa_r+0x3ee>
  403b5c:	4b61      	ldr	r3, [pc, #388]	; (403ce4 <_dtoa_r+0x2bc>)
  403b5e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403b62:	e9d3 0100 	ldrd	r0, r1, [r3]
  403b66:	4652      	mov	r2, sl
  403b68:	465b      	mov	r3, fp
  403b6a:	f7fe fbe5 	bl	402338 <__aeabi_dcmpgt>
  403b6e:	2800      	cmp	r0, #0
  403b70:	f000 81c5 	beq.w	403efe <_dtoa_r+0x4d6>
  403b74:	1e6b      	subs	r3, r5, #1
  403b76:	9302      	str	r3, [sp, #8]
  403b78:	2300      	movs	r3, #0
  403b7a:	930e      	str	r3, [sp, #56]	; 0x38
  403b7c:	1bbf      	subs	r7, r7, r6
  403b7e:	1e7b      	subs	r3, r7, #1
  403b80:	9306      	str	r3, [sp, #24]
  403b82:	f100 8154 	bmi.w	403e2e <_dtoa_r+0x406>
  403b86:	2300      	movs	r3, #0
  403b88:	9308      	str	r3, [sp, #32]
  403b8a:	9b02      	ldr	r3, [sp, #8]
  403b8c:	2b00      	cmp	r3, #0
  403b8e:	f2c0 8145 	blt.w	403e1c <_dtoa_r+0x3f4>
  403b92:	9a06      	ldr	r2, [sp, #24]
  403b94:	930d      	str	r3, [sp, #52]	; 0x34
  403b96:	4611      	mov	r1, r2
  403b98:	4419      	add	r1, r3
  403b9a:	2300      	movs	r3, #0
  403b9c:	9106      	str	r1, [sp, #24]
  403b9e:	930c      	str	r3, [sp, #48]	; 0x30
  403ba0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403ba2:	2b09      	cmp	r3, #9
  403ba4:	d82a      	bhi.n	403bfc <_dtoa_r+0x1d4>
  403ba6:	2b05      	cmp	r3, #5
  403ba8:	f340 865b 	ble.w	404862 <_dtoa_r+0xe3a>
  403bac:	3b04      	subs	r3, #4
  403bae:	9324      	str	r3, [sp, #144]	; 0x90
  403bb0:	2500      	movs	r5, #0
  403bb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403bb4:	3b02      	subs	r3, #2
  403bb6:	2b03      	cmp	r3, #3
  403bb8:	f200 8642 	bhi.w	404840 <_dtoa_r+0xe18>
  403bbc:	e8df f013 	tbh	[pc, r3, lsl #1]
  403bc0:	02c903d4 	.word	0x02c903d4
  403bc4:	046103df 	.word	0x046103df
  403bc8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403bca:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403bcc:	443e      	add	r6, r7
  403bce:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403bd2:	2b20      	cmp	r3, #32
  403bd4:	f340 818e 	ble.w	403ef4 <_dtoa_r+0x4cc>
  403bd8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403bdc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403be0:	409d      	lsls	r5, r3
  403be2:	fa2a f000 	lsr.w	r0, sl, r0
  403be6:	4328      	orrs	r0, r5
  403be8:	f7fe f8a0 	bl	401d2c <__aeabi_ui2d>
  403bec:	2301      	movs	r3, #1
  403bee:	3e01      	subs	r6, #1
  403bf0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403bf4:	9314      	str	r3, [sp, #80]	; 0x50
  403bf6:	e781      	b.n	403afc <_dtoa_r+0xd4>
  403bf8:	483b      	ldr	r0, [pc, #236]	; (403ce8 <_dtoa_r+0x2c0>)
  403bfa:	e743      	b.n	403a84 <_dtoa_r+0x5c>
  403bfc:	2100      	movs	r1, #0
  403bfe:	6461      	str	r1, [r4, #68]	; 0x44
  403c00:	4620      	mov	r0, r4
  403c02:	9125      	str	r1, [sp, #148]	; 0x94
  403c04:	f001 fa12 	bl	40502c <_Balloc>
  403c08:	f04f 33ff 	mov.w	r3, #4294967295
  403c0c:	930a      	str	r3, [sp, #40]	; 0x28
  403c0e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403c10:	930f      	str	r3, [sp, #60]	; 0x3c
  403c12:	2301      	movs	r3, #1
  403c14:	9004      	str	r0, [sp, #16]
  403c16:	6420      	str	r0, [r4, #64]	; 0x40
  403c18:	9224      	str	r2, [sp, #144]	; 0x90
  403c1a:	930b      	str	r3, [sp, #44]	; 0x2c
  403c1c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403c1e:	2b00      	cmp	r3, #0
  403c20:	f2c0 80d9 	blt.w	403dd6 <_dtoa_r+0x3ae>
  403c24:	9a02      	ldr	r2, [sp, #8]
  403c26:	2a0e      	cmp	r2, #14
  403c28:	f300 80d5 	bgt.w	403dd6 <_dtoa_r+0x3ae>
  403c2c:	4b2d      	ldr	r3, [pc, #180]	; (403ce4 <_dtoa_r+0x2bc>)
  403c2e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403c32:	e9d3 2300 	ldrd	r2, r3, [r3]
  403c36:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403c3a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c3c:	2b00      	cmp	r3, #0
  403c3e:	f2c0 83ba 	blt.w	4043b6 <_dtoa_r+0x98e>
  403c42:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403c46:	4650      	mov	r0, sl
  403c48:	462a      	mov	r2, r5
  403c4a:	4633      	mov	r3, r6
  403c4c:	4659      	mov	r1, fp
  403c4e:	f7fe fa0d 	bl	40206c <__aeabi_ddiv>
  403c52:	f002 fa0d 	bl	406070 <__aeabi_d2iz>
  403c56:	4680      	mov	r8, r0
  403c58:	f7fe f878 	bl	401d4c <__aeabi_i2d>
  403c5c:	462a      	mov	r2, r5
  403c5e:	4633      	mov	r3, r6
  403c60:	f7fe f8da 	bl	401e18 <__aeabi_dmul>
  403c64:	460b      	mov	r3, r1
  403c66:	4602      	mov	r2, r0
  403c68:	4659      	mov	r1, fp
  403c6a:	4650      	mov	r0, sl
  403c6c:	f7fd ff20 	bl	401ab0 <__aeabi_dsub>
  403c70:	9d04      	ldr	r5, [sp, #16]
  403c72:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403c76:	702b      	strb	r3, [r5, #0]
  403c78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c7a:	2b01      	cmp	r3, #1
  403c7c:	4606      	mov	r6, r0
  403c7e:	460f      	mov	r7, r1
  403c80:	f105 0501 	add.w	r5, r5, #1
  403c84:	d068      	beq.n	403d58 <_dtoa_r+0x330>
  403c86:	2200      	movs	r2, #0
  403c88:	4b18      	ldr	r3, [pc, #96]	; (403cec <_dtoa_r+0x2c4>)
  403c8a:	f7fe f8c5 	bl	401e18 <__aeabi_dmul>
  403c8e:	2200      	movs	r2, #0
  403c90:	2300      	movs	r3, #0
  403c92:	4606      	mov	r6, r0
  403c94:	460f      	mov	r7, r1
  403c96:	f7fe fb27 	bl	4022e8 <__aeabi_dcmpeq>
  403c9a:	2800      	cmp	r0, #0
  403c9c:	f040 8088 	bne.w	403db0 <_dtoa_r+0x388>
  403ca0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403ca4:	f04f 0a00 	mov.w	sl, #0
  403ca8:	f8df b040 	ldr.w	fp, [pc, #64]	; 403cec <_dtoa_r+0x2c4>
  403cac:	940c      	str	r4, [sp, #48]	; 0x30
  403cae:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403cb2:	e028      	b.n	403d06 <_dtoa_r+0x2de>
  403cb4:	f3af 8000 	nop.w
  403cb8:	636f4361 	.word	0x636f4361
  403cbc:	3fd287a7 	.word	0x3fd287a7
  403cc0:	8b60c8b3 	.word	0x8b60c8b3
  403cc4:	3fc68a28 	.word	0x3fc68a28
  403cc8:	509f79fb 	.word	0x509f79fb
  403ccc:	3fd34413 	.word	0x3fd34413
  403cd0:	7ff00000 	.word	0x7ff00000
  403cd4:	00406e81 	.word	0x00406e81
  403cd8:	00406ea4 	.word	0x00406ea4
  403cdc:	00406eb0 	.word	0x00406eb0
  403ce0:	3ff80000 	.word	0x3ff80000
  403ce4:	00406ee0 	.word	0x00406ee0
  403ce8:	00406e80 	.word	0x00406e80
  403cec:	40240000 	.word	0x40240000
  403cf0:	f7fe f892 	bl	401e18 <__aeabi_dmul>
  403cf4:	2200      	movs	r2, #0
  403cf6:	2300      	movs	r3, #0
  403cf8:	4606      	mov	r6, r0
  403cfa:	460f      	mov	r7, r1
  403cfc:	f7fe faf4 	bl	4022e8 <__aeabi_dcmpeq>
  403d00:	2800      	cmp	r0, #0
  403d02:	f040 83c1 	bne.w	404488 <_dtoa_r+0xa60>
  403d06:	4642      	mov	r2, r8
  403d08:	464b      	mov	r3, r9
  403d0a:	4630      	mov	r0, r6
  403d0c:	4639      	mov	r1, r7
  403d0e:	f7fe f9ad 	bl	40206c <__aeabi_ddiv>
  403d12:	f002 f9ad 	bl	406070 <__aeabi_d2iz>
  403d16:	4604      	mov	r4, r0
  403d18:	f7fe f818 	bl	401d4c <__aeabi_i2d>
  403d1c:	4642      	mov	r2, r8
  403d1e:	464b      	mov	r3, r9
  403d20:	f7fe f87a 	bl	401e18 <__aeabi_dmul>
  403d24:	4602      	mov	r2, r0
  403d26:	460b      	mov	r3, r1
  403d28:	4630      	mov	r0, r6
  403d2a:	4639      	mov	r1, r7
  403d2c:	f7fd fec0 	bl	401ab0 <__aeabi_dsub>
  403d30:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403d34:	9e04      	ldr	r6, [sp, #16]
  403d36:	f805 eb01 	strb.w	lr, [r5], #1
  403d3a:	eba5 0e06 	sub.w	lr, r5, r6
  403d3e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403d40:	45b6      	cmp	lr, r6
  403d42:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403d46:	4652      	mov	r2, sl
  403d48:	465b      	mov	r3, fp
  403d4a:	d1d1      	bne.n	403cf0 <_dtoa_r+0x2c8>
  403d4c:	46a0      	mov	r8, r4
  403d4e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403d52:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403d54:	4606      	mov	r6, r0
  403d56:	460f      	mov	r7, r1
  403d58:	4632      	mov	r2, r6
  403d5a:	463b      	mov	r3, r7
  403d5c:	4630      	mov	r0, r6
  403d5e:	4639      	mov	r1, r7
  403d60:	f7fd fea8 	bl	401ab4 <__adddf3>
  403d64:	4606      	mov	r6, r0
  403d66:	460f      	mov	r7, r1
  403d68:	4602      	mov	r2, r0
  403d6a:	460b      	mov	r3, r1
  403d6c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403d70:	f7fe fac4 	bl	4022fc <__aeabi_dcmplt>
  403d74:	b948      	cbnz	r0, 403d8a <_dtoa_r+0x362>
  403d76:	4632      	mov	r2, r6
  403d78:	463b      	mov	r3, r7
  403d7a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403d7e:	f7fe fab3 	bl	4022e8 <__aeabi_dcmpeq>
  403d82:	b1a8      	cbz	r0, 403db0 <_dtoa_r+0x388>
  403d84:	f018 0f01 	tst.w	r8, #1
  403d88:	d012      	beq.n	403db0 <_dtoa_r+0x388>
  403d8a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403d8e:	9a04      	ldr	r2, [sp, #16]
  403d90:	1e6b      	subs	r3, r5, #1
  403d92:	e004      	b.n	403d9e <_dtoa_r+0x376>
  403d94:	429a      	cmp	r2, r3
  403d96:	f000 8401 	beq.w	40459c <_dtoa_r+0xb74>
  403d9a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403d9e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403da2:	f103 0501 	add.w	r5, r3, #1
  403da6:	d0f5      	beq.n	403d94 <_dtoa_r+0x36c>
  403da8:	f108 0801 	add.w	r8, r8, #1
  403dac:	f883 8000 	strb.w	r8, [r3]
  403db0:	4649      	mov	r1, r9
  403db2:	4620      	mov	r0, r4
  403db4:	f001 f960 	bl	405078 <_Bfree>
  403db8:	2200      	movs	r2, #0
  403dba:	9b02      	ldr	r3, [sp, #8]
  403dbc:	702a      	strb	r2, [r5, #0]
  403dbe:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403dc0:	3301      	adds	r3, #1
  403dc2:	6013      	str	r3, [r2, #0]
  403dc4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403dc6:	2b00      	cmp	r3, #0
  403dc8:	f000 839e 	beq.w	404508 <_dtoa_r+0xae0>
  403dcc:	9804      	ldr	r0, [sp, #16]
  403dce:	601d      	str	r5, [r3, #0]
  403dd0:	b01b      	add	sp, #108	; 0x6c
  403dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403dd6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403dd8:	2a00      	cmp	r2, #0
  403dda:	d03e      	beq.n	403e5a <_dtoa_r+0x432>
  403ddc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403dde:	2a01      	cmp	r2, #1
  403de0:	f340 8311 	ble.w	404406 <_dtoa_r+0x9de>
  403de4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403de6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403de8:	1e5f      	subs	r7, r3, #1
  403dea:	42ba      	cmp	r2, r7
  403dec:	f2c0 838f 	blt.w	40450e <_dtoa_r+0xae6>
  403df0:	1bd7      	subs	r7, r2, r7
  403df2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403df4:	2b00      	cmp	r3, #0
  403df6:	f2c0 848b 	blt.w	404710 <_dtoa_r+0xce8>
  403dfa:	9d08      	ldr	r5, [sp, #32]
  403dfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403dfe:	9a08      	ldr	r2, [sp, #32]
  403e00:	441a      	add	r2, r3
  403e02:	9208      	str	r2, [sp, #32]
  403e04:	9a06      	ldr	r2, [sp, #24]
  403e06:	2101      	movs	r1, #1
  403e08:	441a      	add	r2, r3
  403e0a:	4620      	mov	r0, r4
  403e0c:	9206      	str	r2, [sp, #24]
  403e0e:	f001 f9cd 	bl	4051ac <__i2b>
  403e12:	4606      	mov	r6, r0
  403e14:	e024      	b.n	403e60 <_dtoa_r+0x438>
  403e16:	2301      	movs	r3, #1
  403e18:	930e      	str	r3, [sp, #56]	; 0x38
  403e1a:	e6af      	b.n	403b7c <_dtoa_r+0x154>
  403e1c:	9a08      	ldr	r2, [sp, #32]
  403e1e:	9b02      	ldr	r3, [sp, #8]
  403e20:	1ad2      	subs	r2, r2, r3
  403e22:	425b      	negs	r3, r3
  403e24:	930c      	str	r3, [sp, #48]	; 0x30
  403e26:	2300      	movs	r3, #0
  403e28:	9208      	str	r2, [sp, #32]
  403e2a:	930d      	str	r3, [sp, #52]	; 0x34
  403e2c:	e6b8      	b.n	403ba0 <_dtoa_r+0x178>
  403e2e:	f1c7 0301 	rsb	r3, r7, #1
  403e32:	9308      	str	r3, [sp, #32]
  403e34:	2300      	movs	r3, #0
  403e36:	9306      	str	r3, [sp, #24]
  403e38:	e6a7      	b.n	403b8a <_dtoa_r+0x162>
  403e3a:	9d02      	ldr	r5, [sp, #8]
  403e3c:	4628      	mov	r0, r5
  403e3e:	f7fd ff85 	bl	401d4c <__aeabi_i2d>
  403e42:	4602      	mov	r2, r0
  403e44:	460b      	mov	r3, r1
  403e46:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403e4a:	f7fe fa4d 	bl	4022e8 <__aeabi_dcmpeq>
  403e4e:	2800      	cmp	r0, #0
  403e50:	f47f ae80 	bne.w	403b54 <_dtoa_r+0x12c>
  403e54:	1e6b      	subs	r3, r5, #1
  403e56:	9302      	str	r3, [sp, #8]
  403e58:	e67c      	b.n	403b54 <_dtoa_r+0x12c>
  403e5a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403e5c:	9d08      	ldr	r5, [sp, #32]
  403e5e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403e60:	2d00      	cmp	r5, #0
  403e62:	dd0c      	ble.n	403e7e <_dtoa_r+0x456>
  403e64:	9906      	ldr	r1, [sp, #24]
  403e66:	2900      	cmp	r1, #0
  403e68:	460b      	mov	r3, r1
  403e6a:	dd08      	ble.n	403e7e <_dtoa_r+0x456>
  403e6c:	42a9      	cmp	r1, r5
  403e6e:	9a08      	ldr	r2, [sp, #32]
  403e70:	bfa8      	it	ge
  403e72:	462b      	movge	r3, r5
  403e74:	1ad2      	subs	r2, r2, r3
  403e76:	1aed      	subs	r5, r5, r3
  403e78:	1acb      	subs	r3, r1, r3
  403e7a:	9208      	str	r2, [sp, #32]
  403e7c:	9306      	str	r3, [sp, #24]
  403e7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e80:	b1d3      	cbz	r3, 403eb8 <_dtoa_r+0x490>
  403e82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403e84:	2b00      	cmp	r3, #0
  403e86:	f000 82b7 	beq.w	4043f8 <_dtoa_r+0x9d0>
  403e8a:	2f00      	cmp	r7, #0
  403e8c:	dd10      	ble.n	403eb0 <_dtoa_r+0x488>
  403e8e:	4631      	mov	r1, r6
  403e90:	463a      	mov	r2, r7
  403e92:	4620      	mov	r0, r4
  403e94:	f001 fa26 	bl	4052e4 <__pow5mult>
  403e98:	464a      	mov	r2, r9
  403e9a:	4601      	mov	r1, r0
  403e9c:	4606      	mov	r6, r0
  403e9e:	4620      	mov	r0, r4
  403ea0:	f001 f98e 	bl	4051c0 <__multiply>
  403ea4:	4649      	mov	r1, r9
  403ea6:	4680      	mov	r8, r0
  403ea8:	4620      	mov	r0, r4
  403eaa:	f001 f8e5 	bl	405078 <_Bfree>
  403eae:	46c1      	mov	r9, r8
  403eb0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403eb2:	1bda      	subs	r2, r3, r7
  403eb4:	f040 82a1 	bne.w	4043fa <_dtoa_r+0x9d2>
  403eb8:	2101      	movs	r1, #1
  403eba:	4620      	mov	r0, r4
  403ebc:	f001 f976 	bl	4051ac <__i2b>
  403ec0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403ec2:	2b00      	cmp	r3, #0
  403ec4:	4680      	mov	r8, r0
  403ec6:	dd1c      	ble.n	403f02 <_dtoa_r+0x4da>
  403ec8:	4601      	mov	r1, r0
  403eca:	461a      	mov	r2, r3
  403ecc:	4620      	mov	r0, r4
  403ece:	f001 fa09 	bl	4052e4 <__pow5mult>
  403ed2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403ed4:	2b01      	cmp	r3, #1
  403ed6:	4680      	mov	r8, r0
  403ed8:	f340 8254 	ble.w	404384 <_dtoa_r+0x95c>
  403edc:	2300      	movs	r3, #0
  403ede:	930c      	str	r3, [sp, #48]	; 0x30
  403ee0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403ee4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403ee8:	6918      	ldr	r0, [r3, #16]
  403eea:	f001 f90f 	bl	40510c <__hi0bits>
  403eee:	f1c0 0020 	rsb	r0, r0, #32
  403ef2:	e010      	b.n	403f16 <_dtoa_r+0x4ee>
  403ef4:	f1c3 0520 	rsb	r5, r3, #32
  403ef8:	fa0a f005 	lsl.w	r0, sl, r5
  403efc:	e674      	b.n	403be8 <_dtoa_r+0x1c0>
  403efe:	900e      	str	r0, [sp, #56]	; 0x38
  403f00:	e63c      	b.n	403b7c <_dtoa_r+0x154>
  403f02:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403f04:	2b01      	cmp	r3, #1
  403f06:	f340 8287 	ble.w	404418 <_dtoa_r+0x9f0>
  403f0a:	2300      	movs	r3, #0
  403f0c:	930c      	str	r3, [sp, #48]	; 0x30
  403f0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403f10:	2001      	movs	r0, #1
  403f12:	2b00      	cmp	r3, #0
  403f14:	d1e4      	bne.n	403ee0 <_dtoa_r+0x4b8>
  403f16:	9a06      	ldr	r2, [sp, #24]
  403f18:	4410      	add	r0, r2
  403f1a:	f010 001f 	ands.w	r0, r0, #31
  403f1e:	f000 80a1 	beq.w	404064 <_dtoa_r+0x63c>
  403f22:	f1c0 0320 	rsb	r3, r0, #32
  403f26:	2b04      	cmp	r3, #4
  403f28:	f340 849e 	ble.w	404868 <_dtoa_r+0xe40>
  403f2c:	9b08      	ldr	r3, [sp, #32]
  403f2e:	f1c0 001c 	rsb	r0, r0, #28
  403f32:	4403      	add	r3, r0
  403f34:	9308      	str	r3, [sp, #32]
  403f36:	4613      	mov	r3, r2
  403f38:	4403      	add	r3, r0
  403f3a:	4405      	add	r5, r0
  403f3c:	9306      	str	r3, [sp, #24]
  403f3e:	9b08      	ldr	r3, [sp, #32]
  403f40:	2b00      	cmp	r3, #0
  403f42:	dd05      	ble.n	403f50 <_dtoa_r+0x528>
  403f44:	4649      	mov	r1, r9
  403f46:	461a      	mov	r2, r3
  403f48:	4620      	mov	r0, r4
  403f4a:	f001 fa1b 	bl	405384 <__lshift>
  403f4e:	4681      	mov	r9, r0
  403f50:	9b06      	ldr	r3, [sp, #24]
  403f52:	2b00      	cmp	r3, #0
  403f54:	dd05      	ble.n	403f62 <_dtoa_r+0x53a>
  403f56:	4641      	mov	r1, r8
  403f58:	461a      	mov	r2, r3
  403f5a:	4620      	mov	r0, r4
  403f5c:	f001 fa12 	bl	405384 <__lshift>
  403f60:	4680      	mov	r8, r0
  403f62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403f64:	2b00      	cmp	r3, #0
  403f66:	f040 8086 	bne.w	404076 <_dtoa_r+0x64e>
  403f6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f6c:	2b00      	cmp	r3, #0
  403f6e:	f340 8266 	ble.w	40443e <_dtoa_r+0xa16>
  403f72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403f74:	2b00      	cmp	r3, #0
  403f76:	f000 8098 	beq.w	4040aa <_dtoa_r+0x682>
  403f7a:	2d00      	cmp	r5, #0
  403f7c:	dd05      	ble.n	403f8a <_dtoa_r+0x562>
  403f7e:	4631      	mov	r1, r6
  403f80:	462a      	mov	r2, r5
  403f82:	4620      	mov	r0, r4
  403f84:	f001 f9fe 	bl	405384 <__lshift>
  403f88:	4606      	mov	r6, r0
  403f8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403f8c:	2b00      	cmp	r3, #0
  403f8e:	f040 8337 	bne.w	404600 <_dtoa_r+0xbd8>
  403f92:	9606      	str	r6, [sp, #24]
  403f94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f96:	9a04      	ldr	r2, [sp, #16]
  403f98:	f8dd b018 	ldr.w	fp, [sp, #24]
  403f9c:	3b01      	subs	r3, #1
  403f9e:	18d3      	adds	r3, r2, r3
  403fa0:	930b      	str	r3, [sp, #44]	; 0x2c
  403fa2:	f00a 0301 	and.w	r3, sl, #1
  403fa6:	930c      	str	r3, [sp, #48]	; 0x30
  403fa8:	4617      	mov	r7, r2
  403faa:	46c2      	mov	sl, r8
  403fac:	4651      	mov	r1, sl
  403fae:	4648      	mov	r0, r9
  403fb0:	f7ff fca6 	bl	403900 <quorem>
  403fb4:	4631      	mov	r1, r6
  403fb6:	4605      	mov	r5, r0
  403fb8:	4648      	mov	r0, r9
  403fba:	f001 fa35 	bl	405428 <__mcmp>
  403fbe:	465a      	mov	r2, fp
  403fc0:	900a      	str	r0, [sp, #40]	; 0x28
  403fc2:	4651      	mov	r1, sl
  403fc4:	4620      	mov	r0, r4
  403fc6:	f001 fa4b 	bl	405460 <__mdiff>
  403fca:	68c2      	ldr	r2, [r0, #12]
  403fcc:	4680      	mov	r8, r0
  403fce:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403fd2:	2a00      	cmp	r2, #0
  403fd4:	f040 822b 	bne.w	40442e <_dtoa_r+0xa06>
  403fd8:	4601      	mov	r1, r0
  403fda:	4648      	mov	r0, r9
  403fdc:	9308      	str	r3, [sp, #32]
  403fde:	f001 fa23 	bl	405428 <__mcmp>
  403fe2:	4641      	mov	r1, r8
  403fe4:	9006      	str	r0, [sp, #24]
  403fe6:	4620      	mov	r0, r4
  403fe8:	f001 f846 	bl	405078 <_Bfree>
  403fec:	9a06      	ldr	r2, [sp, #24]
  403fee:	9b08      	ldr	r3, [sp, #32]
  403ff0:	b932      	cbnz	r2, 404000 <_dtoa_r+0x5d8>
  403ff2:	9924      	ldr	r1, [sp, #144]	; 0x90
  403ff4:	b921      	cbnz	r1, 404000 <_dtoa_r+0x5d8>
  403ff6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403ff8:	2a00      	cmp	r2, #0
  403ffa:	f000 83ef 	beq.w	4047dc <_dtoa_r+0xdb4>
  403ffe:	9a24      	ldr	r2, [sp, #144]	; 0x90
  404000:	990a      	ldr	r1, [sp, #40]	; 0x28
  404002:	2900      	cmp	r1, #0
  404004:	f2c0 829f 	blt.w	404546 <_dtoa_r+0xb1e>
  404008:	d105      	bne.n	404016 <_dtoa_r+0x5ee>
  40400a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40400c:	b919      	cbnz	r1, 404016 <_dtoa_r+0x5ee>
  40400e:	990c      	ldr	r1, [sp, #48]	; 0x30
  404010:	2900      	cmp	r1, #0
  404012:	f000 8298 	beq.w	404546 <_dtoa_r+0xb1e>
  404016:	2a00      	cmp	r2, #0
  404018:	f300 8306 	bgt.w	404628 <_dtoa_r+0xc00>
  40401c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40401e:	703b      	strb	r3, [r7, #0]
  404020:	f107 0801 	add.w	r8, r7, #1
  404024:	4297      	cmp	r7, r2
  404026:	4645      	mov	r5, r8
  404028:	f000 830c 	beq.w	404644 <_dtoa_r+0xc1c>
  40402c:	4649      	mov	r1, r9
  40402e:	2300      	movs	r3, #0
  404030:	220a      	movs	r2, #10
  404032:	4620      	mov	r0, r4
  404034:	f001 f82a 	bl	40508c <__multadd>
  404038:	455e      	cmp	r6, fp
  40403a:	4681      	mov	r9, r0
  40403c:	4631      	mov	r1, r6
  40403e:	f04f 0300 	mov.w	r3, #0
  404042:	f04f 020a 	mov.w	r2, #10
  404046:	4620      	mov	r0, r4
  404048:	f000 81eb 	beq.w	404422 <_dtoa_r+0x9fa>
  40404c:	f001 f81e 	bl	40508c <__multadd>
  404050:	4659      	mov	r1, fp
  404052:	4606      	mov	r6, r0
  404054:	2300      	movs	r3, #0
  404056:	220a      	movs	r2, #10
  404058:	4620      	mov	r0, r4
  40405a:	f001 f817 	bl	40508c <__multadd>
  40405e:	4647      	mov	r7, r8
  404060:	4683      	mov	fp, r0
  404062:	e7a3      	b.n	403fac <_dtoa_r+0x584>
  404064:	201c      	movs	r0, #28
  404066:	9b08      	ldr	r3, [sp, #32]
  404068:	4403      	add	r3, r0
  40406a:	9308      	str	r3, [sp, #32]
  40406c:	9b06      	ldr	r3, [sp, #24]
  40406e:	4403      	add	r3, r0
  404070:	4405      	add	r5, r0
  404072:	9306      	str	r3, [sp, #24]
  404074:	e763      	b.n	403f3e <_dtoa_r+0x516>
  404076:	4641      	mov	r1, r8
  404078:	4648      	mov	r0, r9
  40407a:	f001 f9d5 	bl	405428 <__mcmp>
  40407e:	2800      	cmp	r0, #0
  404080:	f6bf af73 	bge.w	403f6a <_dtoa_r+0x542>
  404084:	9f02      	ldr	r7, [sp, #8]
  404086:	4649      	mov	r1, r9
  404088:	2300      	movs	r3, #0
  40408a:	220a      	movs	r2, #10
  40408c:	4620      	mov	r0, r4
  40408e:	3f01      	subs	r7, #1
  404090:	9702      	str	r7, [sp, #8]
  404092:	f000 fffb 	bl	40508c <__multadd>
  404096:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404098:	4681      	mov	r9, r0
  40409a:	2b00      	cmp	r3, #0
  40409c:	f040 83b6 	bne.w	40480c <_dtoa_r+0xde4>
  4040a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4040a2:	2b00      	cmp	r3, #0
  4040a4:	f340 83bf 	ble.w	404826 <_dtoa_r+0xdfe>
  4040a8:	930a      	str	r3, [sp, #40]	; 0x28
  4040aa:	f8dd b010 	ldr.w	fp, [sp, #16]
  4040ae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4040b0:	465d      	mov	r5, fp
  4040b2:	e002      	b.n	4040ba <_dtoa_r+0x692>
  4040b4:	f000 ffea 	bl	40508c <__multadd>
  4040b8:	4681      	mov	r9, r0
  4040ba:	4641      	mov	r1, r8
  4040bc:	4648      	mov	r0, r9
  4040be:	f7ff fc1f 	bl	403900 <quorem>
  4040c2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4040c6:	f805 ab01 	strb.w	sl, [r5], #1
  4040ca:	eba5 030b 	sub.w	r3, r5, fp
  4040ce:	42bb      	cmp	r3, r7
  4040d0:	f04f 020a 	mov.w	r2, #10
  4040d4:	f04f 0300 	mov.w	r3, #0
  4040d8:	4649      	mov	r1, r9
  4040da:	4620      	mov	r0, r4
  4040dc:	dbea      	blt.n	4040b4 <_dtoa_r+0x68c>
  4040de:	9b04      	ldr	r3, [sp, #16]
  4040e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4040e2:	2a01      	cmp	r2, #1
  4040e4:	bfac      	ite	ge
  4040e6:	189b      	addge	r3, r3, r2
  4040e8:	3301      	addlt	r3, #1
  4040ea:	461d      	mov	r5, r3
  4040ec:	f04f 0b00 	mov.w	fp, #0
  4040f0:	4649      	mov	r1, r9
  4040f2:	2201      	movs	r2, #1
  4040f4:	4620      	mov	r0, r4
  4040f6:	f001 f945 	bl	405384 <__lshift>
  4040fa:	4641      	mov	r1, r8
  4040fc:	4681      	mov	r9, r0
  4040fe:	f001 f993 	bl	405428 <__mcmp>
  404102:	2800      	cmp	r0, #0
  404104:	f340 823d 	ble.w	404582 <_dtoa_r+0xb5a>
  404108:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  40410c:	9904      	ldr	r1, [sp, #16]
  40410e:	1e6b      	subs	r3, r5, #1
  404110:	e004      	b.n	40411c <_dtoa_r+0x6f4>
  404112:	428b      	cmp	r3, r1
  404114:	f000 81ae 	beq.w	404474 <_dtoa_r+0xa4c>
  404118:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40411c:	2a39      	cmp	r2, #57	; 0x39
  40411e:	f103 0501 	add.w	r5, r3, #1
  404122:	d0f6      	beq.n	404112 <_dtoa_r+0x6ea>
  404124:	3201      	adds	r2, #1
  404126:	701a      	strb	r2, [r3, #0]
  404128:	4641      	mov	r1, r8
  40412a:	4620      	mov	r0, r4
  40412c:	f000 ffa4 	bl	405078 <_Bfree>
  404130:	2e00      	cmp	r6, #0
  404132:	f43f ae3d 	beq.w	403db0 <_dtoa_r+0x388>
  404136:	f1bb 0f00 	cmp.w	fp, #0
  40413a:	d005      	beq.n	404148 <_dtoa_r+0x720>
  40413c:	45b3      	cmp	fp, r6
  40413e:	d003      	beq.n	404148 <_dtoa_r+0x720>
  404140:	4659      	mov	r1, fp
  404142:	4620      	mov	r0, r4
  404144:	f000 ff98 	bl	405078 <_Bfree>
  404148:	4631      	mov	r1, r6
  40414a:	4620      	mov	r0, r4
  40414c:	f000 ff94 	bl	405078 <_Bfree>
  404150:	e62e      	b.n	403db0 <_dtoa_r+0x388>
  404152:	2300      	movs	r3, #0
  404154:	930b      	str	r3, [sp, #44]	; 0x2c
  404156:	9b02      	ldr	r3, [sp, #8]
  404158:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40415a:	4413      	add	r3, r2
  40415c:	930f      	str	r3, [sp, #60]	; 0x3c
  40415e:	3301      	adds	r3, #1
  404160:	2b01      	cmp	r3, #1
  404162:	461f      	mov	r7, r3
  404164:	461e      	mov	r6, r3
  404166:	930a      	str	r3, [sp, #40]	; 0x28
  404168:	bfb8      	it	lt
  40416a:	2701      	movlt	r7, #1
  40416c:	2100      	movs	r1, #0
  40416e:	2f17      	cmp	r7, #23
  404170:	6461      	str	r1, [r4, #68]	; 0x44
  404172:	d90a      	bls.n	40418a <_dtoa_r+0x762>
  404174:	2201      	movs	r2, #1
  404176:	2304      	movs	r3, #4
  404178:	005b      	lsls	r3, r3, #1
  40417a:	f103 0014 	add.w	r0, r3, #20
  40417e:	4287      	cmp	r7, r0
  404180:	4611      	mov	r1, r2
  404182:	f102 0201 	add.w	r2, r2, #1
  404186:	d2f7      	bcs.n	404178 <_dtoa_r+0x750>
  404188:	6461      	str	r1, [r4, #68]	; 0x44
  40418a:	4620      	mov	r0, r4
  40418c:	f000 ff4e 	bl	40502c <_Balloc>
  404190:	2e0e      	cmp	r6, #14
  404192:	9004      	str	r0, [sp, #16]
  404194:	6420      	str	r0, [r4, #64]	; 0x40
  404196:	f63f ad41 	bhi.w	403c1c <_dtoa_r+0x1f4>
  40419a:	2d00      	cmp	r5, #0
  40419c:	f43f ad3e 	beq.w	403c1c <_dtoa_r+0x1f4>
  4041a0:	9902      	ldr	r1, [sp, #8]
  4041a2:	2900      	cmp	r1, #0
  4041a4:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4041a8:	f340 8202 	ble.w	4045b0 <_dtoa_r+0xb88>
  4041ac:	4bb8      	ldr	r3, [pc, #736]	; (404490 <_dtoa_r+0xa68>)
  4041ae:	f001 020f 	and.w	r2, r1, #15
  4041b2:	110d      	asrs	r5, r1, #4
  4041b4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4041b8:	06e9      	lsls	r1, r5, #27
  4041ba:	e9d3 6700 	ldrd	r6, r7, [r3]
  4041be:	f140 81ae 	bpl.w	40451e <_dtoa_r+0xaf6>
  4041c2:	4bb4      	ldr	r3, [pc, #720]	; (404494 <_dtoa_r+0xa6c>)
  4041c4:	4650      	mov	r0, sl
  4041c6:	4659      	mov	r1, fp
  4041c8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4041cc:	f7fd ff4e 	bl	40206c <__aeabi_ddiv>
  4041d0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4041d4:	f005 050f 	and.w	r5, r5, #15
  4041d8:	f04f 0a03 	mov.w	sl, #3
  4041dc:	b18d      	cbz	r5, 404202 <_dtoa_r+0x7da>
  4041de:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 404494 <_dtoa_r+0xa6c>
  4041e2:	07ea      	lsls	r2, r5, #31
  4041e4:	d509      	bpl.n	4041fa <_dtoa_r+0x7d2>
  4041e6:	4630      	mov	r0, r6
  4041e8:	4639      	mov	r1, r7
  4041ea:	e9d8 2300 	ldrd	r2, r3, [r8]
  4041ee:	f7fd fe13 	bl	401e18 <__aeabi_dmul>
  4041f2:	f10a 0a01 	add.w	sl, sl, #1
  4041f6:	4606      	mov	r6, r0
  4041f8:	460f      	mov	r7, r1
  4041fa:	106d      	asrs	r5, r5, #1
  4041fc:	f108 0808 	add.w	r8, r8, #8
  404200:	d1ef      	bne.n	4041e2 <_dtoa_r+0x7ba>
  404202:	463b      	mov	r3, r7
  404204:	4632      	mov	r2, r6
  404206:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  40420a:	f7fd ff2f 	bl	40206c <__aeabi_ddiv>
  40420e:	4607      	mov	r7, r0
  404210:	4688      	mov	r8, r1
  404212:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404214:	b143      	cbz	r3, 404228 <_dtoa_r+0x800>
  404216:	2200      	movs	r2, #0
  404218:	4b9f      	ldr	r3, [pc, #636]	; (404498 <_dtoa_r+0xa70>)
  40421a:	4638      	mov	r0, r7
  40421c:	4641      	mov	r1, r8
  40421e:	f7fe f86d 	bl	4022fc <__aeabi_dcmplt>
  404222:	2800      	cmp	r0, #0
  404224:	f040 8286 	bne.w	404734 <_dtoa_r+0xd0c>
  404228:	4650      	mov	r0, sl
  40422a:	f7fd fd8f 	bl	401d4c <__aeabi_i2d>
  40422e:	463a      	mov	r2, r7
  404230:	4643      	mov	r3, r8
  404232:	f7fd fdf1 	bl	401e18 <__aeabi_dmul>
  404236:	4b99      	ldr	r3, [pc, #612]	; (40449c <_dtoa_r+0xa74>)
  404238:	2200      	movs	r2, #0
  40423a:	f7fd fc3b 	bl	401ab4 <__adddf3>
  40423e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404240:	4605      	mov	r5, r0
  404242:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404246:	2b00      	cmp	r3, #0
  404248:	f000 813e 	beq.w	4044c8 <_dtoa_r+0xaa0>
  40424c:	9b02      	ldr	r3, [sp, #8]
  40424e:	9315      	str	r3, [sp, #84]	; 0x54
  404250:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404252:	9312      	str	r3, [sp, #72]	; 0x48
  404254:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404256:	2b00      	cmp	r3, #0
  404258:	f000 81fa 	beq.w	404650 <_dtoa_r+0xc28>
  40425c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40425e:	4b8c      	ldr	r3, [pc, #560]	; (404490 <_dtoa_r+0xa68>)
  404260:	498f      	ldr	r1, [pc, #572]	; (4044a0 <_dtoa_r+0xa78>)
  404262:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404266:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40426a:	2000      	movs	r0, #0
  40426c:	f7fd fefe 	bl	40206c <__aeabi_ddiv>
  404270:	462a      	mov	r2, r5
  404272:	4633      	mov	r3, r6
  404274:	f7fd fc1c 	bl	401ab0 <__aeabi_dsub>
  404278:	4682      	mov	sl, r0
  40427a:	468b      	mov	fp, r1
  40427c:	4638      	mov	r0, r7
  40427e:	4641      	mov	r1, r8
  404280:	f001 fef6 	bl	406070 <__aeabi_d2iz>
  404284:	4605      	mov	r5, r0
  404286:	f7fd fd61 	bl	401d4c <__aeabi_i2d>
  40428a:	4602      	mov	r2, r0
  40428c:	460b      	mov	r3, r1
  40428e:	4638      	mov	r0, r7
  404290:	4641      	mov	r1, r8
  404292:	f7fd fc0d 	bl	401ab0 <__aeabi_dsub>
  404296:	3530      	adds	r5, #48	; 0x30
  404298:	fa5f f885 	uxtb.w	r8, r5
  40429c:	9d04      	ldr	r5, [sp, #16]
  40429e:	4606      	mov	r6, r0
  4042a0:	460f      	mov	r7, r1
  4042a2:	f885 8000 	strb.w	r8, [r5]
  4042a6:	4602      	mov	r2, r0
  4042a8:	460b      	mov	r3, r1
  4042aa:	4650      	mov	r0, sl
  4042ac:	4659      	mov	r1, fp
  4042ae:	3501      	adds	r5, #1
  4042b0:	f7fe f842 	bl	402338 <__aeabi_dcmpgt>
  4042b4:	2800      	cmp	r0, #0
  4042b6:	d154      	bne.n	404362 <_dtoa_r+0x93a>
  4042b8:	4632      	mov	r2, r6
  4042ba:	463b      	mov	r3, r7
  4042bc:	2000      	movs	r0, #0
  4042be:	4976      	ldr	r1, [pc, #472]	; (404498 <_dtoa_r+0xa70>)
  4042c0:	f7fd fbf6 	bl	401ab0 <__aeabi_dsub>
  4042c4:	4602      	mov	r2, r0
  4042c6:	460b      	mov	r3, r1
  4042c8:	4650      	mov	r0, sl
  4042ca:	4659      	mov	r1, fp
  4042cc:	f7fe f834 	bl	402338 <__aeabi_dcmpgt>
  4042d0:	2800      	cmp	r0, #0
  4042d2:	f040 8270 	bne.w	4047b6 <_dtoa_r+0xd8e>
  4042d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4042d8:	2a01      	cmp	r2, #1
  4042da:	f000 8111 	beq.w	404500 <_dtoa_r+0xad8>
  4042de:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4042e0:	9a04      	ldr	r2, [sp, #16]
  4042e2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4042e6:	4413      	add	r3, r2
  4042e8:	4699      	mov	r9, r3
  4042ea:	e00d      	b.n	404308 <_dtoa_r+0x8e0>
  4042ec:	2000      	movs	r0, #0
  4042ee:	496a      	ldr	r1, [pc, #424]	; (404498 <_dtoa_r+0xa70>)
  4042f0:	f7fd fbde 	bl	401ab0 <__aeabi_dsub>
  4042f4:	4652      	mov	r2, sl
  4042f6:	465b      	mov	r3, fp
  4042f8:	f7fe f800 	bl	4022fc <__aeabi_dcmplt>
  4042fc:	2800      	cmp	r0, #0
  4042fe:	f040 8258 	bne.w	4047b2 <_dtoa_r+0xd8a>
  404302:	454d      	cmp	r5, r9
  404304:	f000 80fa 	beq.w	4044fc <_dtoa_r+0xad4>
  404308:	4650      	mov	r0, sl
  40430a:	4659      	mov	r1, fp
  40430c:	2200      	movs	r2, #0
  40430e:	4b65      	ldr	r3, [pc, #404]	; (4044a4 <_dtoa_r+0xa7c>)
  404310:	f7fd fd82 	bl	401e18 <__aeabi_dmul>
  404314:	2200      	movs	r2, #0
  404316:	4b63      	ldr	r3, [pc, #396]	; (4044a4 <_dtoa_r+0xa7c>)
  404318:	4682      	mov	sl, r0
  40431a:	468b      	mov	fp, r1
  40431c:	4630      	mov	r0, r6
  40431e:	4639      	mov	r1, r7
  404320:	f7fd fd7a 	bl	401e18 <__aeabi_dmul>
  404324:	460f      	mov	r7, r1
  404326:	4606      	mov	r6, r0
  404328:	f001 fea2 	bl	406070 <__aeabi_d2iz>
  40432c:	4680      	mov	r8, r0
  40432e:	f7fd fd0d 	bl	401d4c <__aeabi_i2d>
  404332:	4602      	mov	r2, r0
  404334:	460b      	mov	r3, r1
  404336:	4630      	mov	r0, r6
  404338:	4639      	mov	r1, r7
  40433a:	f7fd fbb9 	bl	401ab0 <__aeabi_dsub>
  40433e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404342:	fa5f f888 	uxtb.w	r8, r8
  404346:	4652      	mov	r2, sl
  404348:	465b      	mov	r3, fp
  40434a:	f805 8b01 	strb.w	r8, [r5], #1
  40434e:	4606      	mov	r6, r0
  404350:	460f      	mov	r7, r1
  404352:	f7fd ffd3 	bl	4022fc <__aeabi_dcmplt>
  404356:	4632      	mov	r2, r6
  404358:	463b      	mov	r3, r7
  40435a:	2800      	cmp	r0, #0
  40435c:	d0c6      	beq.n	4042ec <_dtoa_r+0x8c4>
  40435e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404362:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404364:	9302      	str	r3, [sp, #8]
  404366:	e523      	b.n	403db0 <_dtoa_r+0x388>
  404368:	2300      	movs	r3, #0
  40436a:	930b      	str	r3, [sp, #44]	; 0x2c
  40436c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40436e:	2b00      	cmp	r3, #0
  404370:	f340 80dc 	ble.w	40452c <_dtoa_r+0xb04>
  404374:	461f      	mov	r7, r3
  404376:	461e      	mov	r6, r3
  404378:	930f      	str	r3, [sp, #60]	; 0x3c
  40437a:	930a      	str	r3, [sp, #40]	; 0x28
  40437c:	e6f6      	b.n	40416c <_dtoa_r+0x744>
  40437e:	2301      	movs	r3, #1
  404380:	930b      	str	r3, [sp, #44]	; 0x2c
  404382:	e7f3      	b.n	40436c <_dtoa_r+0x944>
  404384:	f1ba 0f00 	cmp.w	sl, #0
  404388:	f47f ada8 	bne.w	403edc <_dtoa_r+0x4b4>
  40438c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404390:	2b00      	cmp	r3, #0
  404392:	f47f adba 	bne.w	403f0a <_dtoa_r+0x4e2>
  404396:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40439a:	0d3f      	lsrs	r7, r7, #20
  40439c:	053f      	lsls	r7, r7, #20
  40439e:	2f00      	cmp	r7, #0
  4043a0:	f000 820d 	beq.w	4047be <_dtoa_r+0xd96>
  4043a4:	9b08      	ldr	r3, [sp, #32]
  4043a6:	3301      	adds	r3, #1
  4043a8:	9308      	str	r3, [sp, #32]
  4043aa:	9b06      	ldr	r3, [sp, #24]
  4043ac:	3301      	adds	r3, #1
  4043ae:	9306      	str	r3, [sp, #24]
  4043b0:	2301      	movs	r3, #1
  4043b2:	930c      	str	r3, [sp, #48]	; 0x30
  4043b4:	e5ab      	b.n	403f0e <_dtoa_r+0x4e6>
  4043b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043b8:	2b00      	cmp	r3, #0
  4043ba:	f73f ac42 	bgt.w	403c42 <_dtoa_r+0x21a>
  4043be:	f040 8221 	bne.w	404804 <_dtoa_r+0xddc>
  4043c2:	2200      	movs	r2, #0
  4043c4:	4b38      	ldr	r3, [pc, #224]	; (4044a8 <_dtoa_r+0xa80>)
  4043c6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4043ca:	f7fd fd25 	bl	401e18 <__aeabi_dmul>
  4043ce:	4652      	mov	r2, sl
  4043d0:	465b      	mov	r3, fp
  4043d2:	f7fd ffa7 	bl	402324 <__aeabi_dcmpge>
  4043d6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4043da:	4646      	mov	r6, r8
  4043dc:	2800      	cmp	r0, #0
  4043de:	d041      	beq.n	404464 <_dtoa_r+0xa3c>
  4043e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4043e2:	9d04      	ldr	r5, [sp, #16]
  4043e4:	43db      	mvns	r3, r3
  4043e6:	9302      	str	r3, [sp, #8]
  4043e8:	4641      	mov	r1, r8
  4043ea:	4620      	mov	r0, r4
  4043ec:	f000 fe44 	bl	405078 <_Bfree>
  4043f0:	2e00      	cmp	r6, #0
  4043f2:	f43f acdd 	beq.w	403db0 <_dtoa_r+0x388>
  4043f6:	e6a7      	b.n	404148 <_dtoa_r+0x720>
  4043f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4043fa:	4649      	mov	r1, r9
  4043fc:	4620      	mov	r0, r4
  4043fe:	f000 ff71 	bl	4052e4 <__pow5mult>
  404402:	4681      	mov	r9, r0
  404404:	e558      	b.n	403eb8 <_dtoa_r+0x490>
  404406:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404408:	2a00      	cmp	r2, #0
  40440a:	f000 8187 	beq.w	40471c <_dtoa_r+0xcf4>
  40440e:	f203 4333 	addw	r3, r3, #1075	; 0x433
  404412:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404414:	9d08      	ldr	r5, [sp, #32]
  404416:	e4f2      	b.n	403dfe <_dtoa_r+0x3d6>
  404418:	f1ba 0f00 	cmp.w	sl, #0
  40441c:	f47f ad75 	bne.w	403f0a <_dtoa_r+0x4e2>
  404420:	e7b4      	b.n	40438c <_dtoa_r+0x964>
  404422:	f000 fe33 	bl	40508c <__multadd>
  404426:	4647      	mov	r7, r8
  404428:	4606      	mov	r6, r0
  40442a:	4683      	mov	fp, r0
  40442c:	e5be      	b.n	403fac <_dtoa_r+0x584>
  40442e:	4601      	mov	r1, r0
  404430:	4620      	mov	r0, r4
  404432:	9306      	str	r3, [sp, #24]
  404434:	f000 fe20 	bl	405078 <_Bfree>
  404438:	2201      	movs	r2, #1
  40443a:	9b06      	ldr	r3, [sp, #24]
  40443c:	e5e0      	b.n	404000 <_dtoa_r+0x5d8>
  40443e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404440:	2b02      	cmp	r3, #2
  404442:	f77f ad96 	ble.w	403f72 <_dtoa_r+0x54a>
  404446:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404448:	2b00      	cmp	r3, #0
  40444a:	d1c9      	bne.n	4043e0 <_dtoa_r+0x9b8>
  40444c:	4641      	mov	r1, r8
  40444e:	2205      	movs	r2, #5
  404450:	4620      	mov	r0, r4
  404452:	f000 fe1b 	bl	40508c <__multadd>
  404456:	4601      	mov	r1, r0
  404458:	4680      	mov	r8, r0
  40445a:	4648      	mov	r0, r9
  40445c:	f000 ffe4 	bl	405428 <__mcmp>
  404460:	2800      	cmp	r0, #0
  404462:	ddbd      	ble.n	4043e0 <_dtoa_r+0x9b8>
  404464:	9a02      	ldr	r2, [sp, #8]
  404466:	9904      	ldr	r1, [sp, #16]
  404468:	2331      	movs	r3, #49	; 0x31
  40446a:	3201      	adds	r2, #1
  40446c:	9202      	str	r2, [sp, #8]
  40446e:	700b      	strb	r3, [r1, #0]
  404470:	1c4d      	adds	r5, r1, #1
  404472:	e7b9      	b.n	4043e8 <_dtoa_r+0x9c0>
  404474:	9a02      	ldr	r2, [sp, #8]
  404476:	3201      	adds	r2, #1
  404478:	9202      	str	r2, [sp, #8]
  40447a:	9a04      	ldr	r2, [sp, #16]
  40447c:	2331      	movs	r3, #49	; 0x31
  40447e:	7013      	strb	r3, [r2, #0]
  404480:	e652      	b.n	404128 <_dtoa_r+0x700>
  404482:	2301      	movs	r3, #1
  404484:	930b      	str	r3, [sp, #44]	; 0x2c
  404486:	e666      	b.n	404156 <_dtoa_r+0x72e>
  404488:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40448c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40448e:	e48f      	b.n	403db0 <_dtoa_r+0x388>
  404490:	00406ee0 	.word	0x00406ee0
  404494:	00406eb8 	.word	0x00406eb8
  404498:	3ff00000 	.word	0x3ff00000
  40449c:	401c0000 	.word	0x401c0000
  4044a0:	3fe00000 	.word	0x3fe00000
  4044a4:	40240000 	.word	0x40240000
  4044a8:	40140000 	.word	0x40140000
  4044ac:	4650      	mov	r0, sl
  4044ae:	f7fd fc4d 	bl	401d4c <__aeabi_i2d>
  4044b2:	463a      	mov	r2, r7
  4044b4:	4643      	mov	r3, r8
  4044b6:	f7fd fcaf 	bl	401e18 <__aeabi_dmul>
  4044ba:	2200      	movs	r2, #0
  4044bc:	4bc1      	ldr	r3, [pc, #772]	; (4047c4 <_dtoa_r+0xd9c>)
  4044be:	f7fd faf9 	bl	401ab4 <__adddf3>
  4044c2:	4605      	mov	r5, r0
  4044c4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4044c8:	4641      	mov	r1, r8
  4044ca:	2200      	movs	r2, #0
  4044cc:	4bbe      	ldr	r3, [pc, #760]	; (4047c8 <_dtoa_r+0xda0>)
  4044ce:	4638      	mov	r0, r7
  4044d0:	f7fd faee 	bl	401ab0 <__aeabi_dsub>
  4044d4:	462a      	mov	r2, r5
  4044d6:	4633      	mov	r3, r6
  4044d8:	4682      	mov	sl, r0
  4044da:	468b      	mov	fp, r1
  4044dc:	f7fd ff2c 	bl	402338 <__aeabi_dcmpgt>
  4044e0:	4680      	mov	r8, r0
  4044e2:	2800      	cmp	r0, #0
  4044e4:	f040 8110 	bne.w	404708 <_dtoa_r+0xce0>
  4044e8:	462a      	mov	r2, r5
  4044ea:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4044ee:	4650      	mov	r0, sl
  4044f0:	4659      	mov	r1, fp
  4044f2:	f7fd ff03 	bl	4022fc <__aeabi_dcmplt>
  4044f6:	b118      	cbz	r0, 404500 <_dtoa_r+0xad8>
  4044f8:	4646      	mov	r6, r8
  4044fa:	e771      	b.n	4043e0 <_dtoa_r+0x9b8>
  4044fc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404500:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  404504:	f7ff bb8a 	b.w	403c1c <_dtoa_r+0x1f4>
  404508:	9804      	ldr	r0, [sp, #16]
  40450a:	f7ff babb 	b.w	403a84 <_dtoa_r+0x5c>
  40450e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404510:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404512:	970c      	str	r7, [sp, #48]	; 0x30
  404514:	1afb      	subs	r3, r7, r3
  404516:	441a      	add	r2, r3
  404518:	920d      	str	r2, [sp, #52]	; 0x34
  40451a:	2700      	movs	r7, #0
  40451c:	e469      	b.n	403df2 <_dtoa_r+0x3ca>
  40451e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404522:	f04f 0a02 	mov.w	sl, #2
  404526:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40452a:	e657      	b.n	4041dc <_dtoa_r+0x7b4>
  40452c:	2100      	movs	r1, #0
  40452e:	2301      	movs	r3, #1
  404530:	6461      	str	r1, [r4, #68]	; 0x44
  404532:	4620      	mov	r0, r4
  404534:	9325      	str	r3, [sp, #148]	; 0x94
  404536:	f000 fd79 	bl	40502c <_Balloc>
  40453a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40453c:	9004      	str	r0, [sp, #16]
  40453e:	6420      	str	r0, [r4, #64]	; 0x40
  404540:	930a      	str	r3, [sp, #40]	; 0x28
  404542:	930f      	str	r3, [sp, #60]	; 0x3c
  404544:	e629      	b.n	40419a <_dtoa_r+0x772>
  404546:	2a00      	cmp	r2, #0
  404548:	46d0      	mov	r8, sl
  40454a:	f8cd b018 	str.w	fp, [sp, #24]
  40454e:	469a      	mov	sl, r3
  404550:	dd11      	ble.n	404576 <_dtoa_r+0xb4e>
  404552:	4649      	mov	r1, r9
  404554:	2201      	movs	r2, #1
  404556:	4620      	mov	r0, r4
  404558:	f000 ff14 	bl	405384 <__lshift>
  40455c:	4641      	mov	r1, r8
  40455e:	4681      	mov	r9, r0
  404560:	f000 ff62 	bl	405428 <__mcmp>
  404564:	2800      	cmp	r0, #0
  404566:	f340 8146 	ble.w	4047f6 <_dtoa_r+0xdce>
  40456a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40456e:	f000 8106 	beq.w	40477e <_dtoa_r+0xd56>
  404572:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404576:	46b3      	mov	fp, r6
  404578:	f887 a000 	strb.w	sl, [r7]
  40457c:	1c7d      	adds	r5, r7, #1
  40457e:	9e06      	ldr	r6, [sp, #24]
  404580:	e5d2      	b.n	404128 <_dtoa_r+0x700>
  404582:	d104      	bne.n	40458e <_dtoa_r+0xb66>
  404584:	f01a 0f01 	tst.w	sl, #1
  404588:	d001      	beq.n	40458e <_dtoa_r+0xb66>
  40458a:	e5bd      	b.n	404108 <_dtoa_r+0x6e0>
  40458c:	4615      	mov	r5, r2
  40458e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404592:	2b30      	cmp	r3, #48	; 0x30
  404594:	f105 32ff 	add.w	r2, r5, #4294967295
  404598:	d0f8      	beq.n	40458c <_dtoa_r+0xb64>
  40459a:	e5c5      	b.n	404128 <_dtoa_r+0x700>
  40459c:	9904      	ldr	r1, [sp, #16]
  40459e:	2230      	movs	r2, #48	; 0x30
  4045a0:	700a      	strb	r2, [r1, #0]
  4045a2:	9a02      	ldr	r2, [sp, #8]
  4045a4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4045a8:	3201      	adds	r2, #1
  4045aa:	9202      	str	r2, [sp, #8]
  4045ac:	f7ff bbfc 	b.w	403da8 <_dtoa_r+0x380>
  4045b0:	f000 80bb 	beq.w	40472a <_dtoa_r+0xd02>
  4045b4:	9b02      	ldr	r3, [sp, #8]
  4045b6:	425d      	negs	r5, r3
  4045b8:	4b84      	ldr	r3, [pc, #528]	; (4047cc <_dtoa_r+0xda4>)
  4045ba:	f005 020f 	and.w	r2, r5, #15
  4045be:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4045c2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4045c6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4045ca:	f7fd fc25 	bl	401e18 <__aeabi_dmul>
  4045ce:	112d      	asrs	r5, r5, #4
  4045d0:	4607      	mov	r7, r0
  4045d2:	4688      	mov	r8, r1
  4045d4:	f000 812c 	beq.w	404830 <_dtoa_r+0xe08>
  4045d8:	4e7d      	ldr	r6, [pc, #500]	; (4047d0 <_dtoa_r+0xda8>)
  4045da:	f04f 0a02 	mov.w	sl, #2
  4045de:	07eb      	lsls	r3, r5, #31
  4045e0:	d509      	bpl.n	4045f6 <_dtoa_r+0xbce>
  4045e2:	4638      	mov	r0, r7
  4045e4:	4641      	mov	r1, r8
  4045e6:	e9d6 2300 	ldrd	r2, r3, [r6]
  4045ea:	f7fd fc15 	bl	401e18 <__aeabi_dmul>
  4045ee:	f10a 0a01 	add.w	sl, sl, #1
  4045f2:	4607      	mov	r7, r0
  4045f4:	4688      	mov	r8, r1
  4045f6:	106d      	asrs	r5, r5, #1
  4045f8:	f106 0608 	add.w	r6, r6, #8
  4045fc:	d1ef      	bne.n	4045de <_dtoa_r+0xbb6>
  4045fe:	e608      	b.n	404212 <_dtoa_r+0x7ea>
  404600:	6871      	ldr	r1, [r6, #4]
  404602:	4620      	mov	r0, r4
  404604:	f000 fd12 	bl	40502c <_Balloc>
  404608:	6933      	ldr	r3, [r6, #16]
  40460a:	3302      	adds	r3, #2
  40460c:	009a      	lsls	r2, r3, #2
  40460e:	4605      	mov	r5, r0
  404610:	f106 010c 	add.w	r1, r6, #12
  404614:	300c      	adds	r0, #12
  404616:	f000 fc63 	bl	404ee0 <memcpy>
  40461a:	4629      	mov	r1, r5
  40461c:	2201      	movs	r2, #1
  40461e:	4620      	mov	r0, r4
  404620:	f000 feb0 	bl	405384 <__lshift>
  404624:	9006      	str	r0, [sp, #24]
  404626:	e4b5      	b.n	403f94 <_dtoa_r+0x56c>
  404628:	2b39      	cmp	r3, #57	; 0x39
  40462a:	f8cd b018 	str.w	fp, [sp, #24]
  40462e:	46d0      	mov	r8, sl
  404630:	f000 80a5 	beq.w	40477e <_dtoa_r+0xd56>
  404634:	f103 0a01 	add.w	sl, r3, #1
  404638:	46b3      	mov	fp, r6
  40463a:	f887 a000 	strb.w	sl, [r7]
  40463e:	1c7d      	adds	r5, r7, #1
  404640:	9e06      	ldr	r6, [sp, #24]
  404642:	e571      	b.n	404128 <_dtoa_r+0x700>
  404644:	465a      	mov	r2, fp
  404646:	46d0      	mov	r8, sl
  404648:	46b3      	mov	fp, r6
  40464a:	469a      	mov	sl, r3
  40464c:	4616      	mov	r6, r2
  40464e:	e54f      	b.n	4040f0 <_dtoa_r+0x6c8>
  404650:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404652:	495e      	ldr	r1, [pc, #376]	; (4047cc <_dtoa_r+0xda4>)
  404654:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404658:	462a      	mov	r2, r5
  40465a:	4633      	mov	r3, r6
  40465c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404660:	f7fd fbda 	bl	401e18 <__aeabi_dmul>
  404664:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404668:	4638      	mov	r0, r7
  40466a:	4641      	mov	r1, r8
  40466c:	f001 fd00 	bl	406070 <__aeabi_d2iz>
  404670:	4605      	mov	r5, r0
  404672:	f7fd fb6b 	bl	401d4c <__aeabi_i2d>
  404676:	460b      	mov	r3, r1
  404678:	4602      	mov	r2, r0
  40467a:	4641      	mov	r1, r8
  40467c:	4638      	mov	r0, r7
  40467e:	f7fd fa17 	bl	401ab0 <__aeabi_dsub>
  404682:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404684:	460f      	mov	r7, r1
  404686:	9904      	ldr	r1, [sp, #16]
  404688:	3530      	adds	r5, #48	; 0x30
  40468a:	2b01      	cmp	r3, #1
  40468c:	700d      	strb	r5, [r1, #0]
  40468e:	4606      	mov	r6, r0
  404690:	f101 0501 	add.w	r5, r1, #1
  404694:	d026      	beq.n	4046e4 <_dtoa_r+0xcbc>
  404696:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404698:	9a04      	ldr	r2, [sp, #16]
  40469a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4047d8 <_dtoa_r+0xdb0>
  40469e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4046a2:	4413      	add	r3, r2
  4046a4:	f04f 0a00 	mov.w	sl, #0
  4046a8:	4699      	mov	r9, r3
  4046aa:	4652      	mov	r2, sl
  4046ac:	465b      	mov	r3, fp
  4046ae:	4630      	mov	r0, r6
  4046b0:	4639      	mov	r1, r7
  4046b2:	f7fd fbb1 	bl	401e18 <__aeabi_dmul>
  4046b6:	460f      	mov	r7, r1
  4046b8:	4606      	mov	r6, r0
  4046ba:	f001 fcd9 	bl	406070 <__aeabi_d2iz>
  4046be:	4680      	mov	r8, r0
  4046c0:	f7fd fb44 	bl	401d4c <__aeabi_i2d>
  4046c4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4046c8:	4602      	mov	r2, r0
  4046ca:	460b      	mov	r3, r1
  4046cc:	4630      	mov	r0, r6
  4046ce:	4639      	mov	r1, r7
  4046d0:	f7fd f9ee 	bl	401ab0 <__aeabi_dsub>
  4046d4:	f805 8b01 	strb.w	r8, [r5], #1
  4046d8:	454d      	cmp	r5, r9
  4046da:	4606      	mov	r6, r0
  4046dc:	460f      	mov	r7, r1
  4046de:	d1e4      	bne.n	4046aa <_dtoa_r+0xc82>
  4046e0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4046e4:	4b3b      	ldr	r3, [pc, #236]	; (4047d4 <_dtoa_r+0xdac>)
  4046e6:	2200      	movs	r2, #0
  4046e8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4046ec:	f7fd f9e2 	bl	401ab4 <__adddf3>
  4046f0:	4632      	mov	r2, r6
  4046f2:	463b      	mov	r3, r7
  4046f4:	f7fd fe02 	bl	4022fc <__aeabi_dcmplt>
  4046f8:	2800      	cmp	r0, #0
  4046fa:	d046      	beq.n	40478a <_dtoa_r+0xd62>
  4046fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4046fe:	9302      	str	r3, [sp, #8]
  404700:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404704:	f7ff bb43 	b.w	403d8e <_dtoa_r+0x366>
  404708:	f04f 0800 	mov.w	r8, #0
  40470c:	4646      	mov	r6, r8
  40470e:	e6a9      	b.n	404464 <_dtoa_r+0xa3c>
  404710:	9b08      	ldr	r3, [sp, #32]
  404712:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404714:	1a9d      	subs	r5, r3, r2
  404716:	2300      	movs	r3, #0
  404718:	f7ff bb71 	b.w	403dfe <_dtoa_r+0x3d6>
  40471c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40471e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404720:	9d08      	ldr	r5, [sp, #32]
  404722:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404726:	f7ff bb6a 	b.w	403dfe <_dtoa_r+0x3d6>
  40472a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40472e:	f04f 0a02 	mov.w	sl, #2
  404732:	e56e      	b.n	404212 <_dtoa_r+0x7ea>
  404734:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404736:	2b00      	cmp	r3, #0
  404738:	f43f aeb8 	beq.w	4044ac <_dtoa_r+0xa84>
  40473c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40473e:	2b00      	cmp	r3, #0
  404740:	f77f aede 	ble.w	404500 <_dtoa_r+0xad8>
  404744:	2200      	movs	r2, #0
  404746:	4b24      	ldr	r3, [pc, #144]	; (4047d8 <_dtoa_r+0xdb0>)
  404748:	4638      	mov	r0, r7
  40474a:	4641      	mov	r1, r8
  40474c:	f7fd fb64 	bl	401e18 <__aeabi_dmul>
  404750:	4607      	mov	r7, r0
  404752:	4688      	mov	r8, r1
  404754:	f10a 0001 	add.w	r0, sl, #1
  404758:	f7fd faf8 	bl	401d4c <__aeabi_i2d>
  40475c:	463a      	mov	r2, r7
  40475e:	4643      	mov	r3, r8
  404760:	f7fd fb5a 	bl	401e18 <__aeabi_dmul>
  404764:	2200      	movs	r2, #0
  404766:	4b17      	ldr	r3, [pc, #92]	; (4047c4 <_dtoa_r+0xd9c>)
  404768:	f7fd f9a4 	bl	401ab4 <__adddf3>
  40476c:	9a02      	ldr	r2, [sp, #8]
  40476e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404770:	9312      	str	r3, [sp, #72]	; 0x48
  404772:	3a01      	subs	r2, #1
  404774:	4605      	mov	r5, r0
  404776:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40477a:	9215      	str	r2, [sp, #84]	; 0x54
  40477c:	e56a      	b.n	404254 <_dtoa_r+0x82c>
  40477e:	2239      	movs	r2, #57	; 0x39
  404780:	46b3      	mov	fp, r6
  404782:	703a      	strb	r2, [r7, #0]
  404784:	9e06      	ldr	r6, [sp, #24]
  404786:	1c7d      	adds	r5, r7, #1
  404788:	e4c0      	b.n	40410c <_dtoa_r+0x6e4>
  40478a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40478e:	2000      	movs	r0, #0
  404790:	4910      	ldr	r1, [pc, #64]	; (4047d4 <_dtoa_r+0xdac>)
  404792:	f7fd f98d 	bl	401ab0 <__aeabi_dsub>
  404796:	4632      	mov	r2, r6
  404798:	463b      	mov	r3, r7
  40479a:	f7fd fdcd 	bl	402338 <__aeabi_dcmpgt>
  40479e:	b908      	cbnz	r0, 4047a4 <_dtoa_r+0xd7c>
  4047a0:	e6ae      	b.n	404500 <_dtoa_r+0xad8>
  4047a2:	4615      	mov	r5, r2
  4047a4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4047a8:	2b30      	cmp	r3, #48	; 0x30
  4047aa:	f105 32ff 	add.w	r2, r5, #4294967295
  4047ae:	d0f8      	beq.n	4047a2 <_dtoa_r+0xd7a>
  4047b0:	e5d7      	b.n	404362 <_dtoa_r+0x93a>
  4047b2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4047b6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4047b8:	9302      	str	r3, [sp, #8]
  4047ba:	f7ff bae8 	b.w	403d8e <_dtoa_r+0x366>
  4047be:	970c      	str	r7, [sp, #48]	; 0x30
  4047c0:	f7ff bba5 	b.w	403f0e <_dtoa_r+0x4e6>
  4047c4:	401c0000 	.word	0x401c0000
  4047c8:	40140000 	.word	0x40140000
  4047cc:	00406ee0 	.word	0x00406ee0
  4047d0:	00406eb8 	.word	0x00406eb8
  4047d4:	3fe00000 	.word	0x3fe00000
  4047d8:	40240000 	.word	0x40240000
  4047dc:	2b39      	cmp	r3, #57	; 0x39
  4047de:	f8cd b018 	str.w	fp, [sp, #24]
  4047e2:	46d0      	mov	r8, sl
  4047e4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4047e8:	469a      	mov	sl, r3
  4047ea:	d0c8      	beq.n	40477e <_dtoa_r+0xd56>
  4047ec:	f1bb 0f00 	cmp.w	fp, #0
  4047f0:	f73f aebf 	bgt.w	404572 <_dtoa_r+0xb4a>
  4047f4:	e6bf      	b.n	404576 <_dtoa_r+0xb4e>
  4047f6:	f47f aebe 	bne.w	404576 <_dtoa_r+0xb4e>
  4047fa:	f01a 0f01 	tst.w	sl, #1
  4047fe:	f43f aeba 	beq.w	404576 <_dtoa_r+0xb4e>
  404802:	e6b2      	b.n	40456a <_dtoa_r+0xb42>
  404804:	f04f 0800 	mov.w	r8, #0
  404808:	4646      	mov	r6, r8
  40480a:	e5e9      	b.n	4043e0 <_dtoa_r+0x9b8>
  40480c:	4631      	mov	r1, r6
  40480e:	2300      	movs	r3, #0
  404810:	220a      	movs	r2, #10
  404812:	4620      	mov	r0, r4
  404814:	f000 fc3a 	bl	40508c <__multadd>
  404818:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40481a:	2b00      	cmp	r3, #0
  40481c:	4606      	mov	r6, r0
  40481e:	dd0a      	ble.n	404836 <_dtoa_r+0xe0e>
  404820:	930a      	str	r3, [sp, #40]	; 0x28
  404822:	f7ff bbaa 	b.w	403f7a <_dtoa_r+0x552>
  404826:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404828:	2b02      	cmp	r3, #2
  40482a:	dc23      	bgt.n	404874 <_dtoa_r+0xe4c>
  40482c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40482e:	e43b      	b.n	4040a8 <_dtoa_r+0x680>
  404830:	f04f 0a02 	mov.w	sl, #2
  404834:	e4ed      	b.n	404212 <_dtoa_r+0x7ea>
  404836:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404838:	2b02      	cmp	r3, #2
  40483a:	dc1b      	bgt.n	404874 <_dtoa_r+0xe4c>
  40483c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40483e:	e7ef      	b.n	404820 <_dtoa_r+0xdf8>
  404840:	2500      	movs	r5, #0
  404842:	6465      	str	r5, [r4, #68]	; 0x44
  404844:	4629      	mov	r1, r5
  404846:	4620      	mov	r0, r4
  404848:	f000 fbf0 	bl	40502c <_Balloc>
  40484c:	f04f 33ff 	mov.w	r3, #4294967295
  404850:	930a      	str	r3, [sp, #40]	; 0x28
  404852:	930f      	str	r3, [sp, #60]	; 0x3c
  404854:	2301      	movs	r3, #1
  404856:	9004      	str	r0, [sp, #16]
  404858:	9525      	str	r5, [sp, #148]	; 0x94
  40485a:	6420      	str	r0, [r4, #64]	; 0x40
  40485c:	930b      	str	r3, [sp, #44]	; 0x2c
  40485e:	f7ff b9dd 	b.w	403c1c <_dtoa_r+0x1f4>
  404862:	2501      	movs	r5, #1
  404864:	f7ff b9a5 	b.w	403bb2 <_dtoa_r+0x18a>
  404868:	f43f ab69 	beq.w	403f3e <_dtoa_r+0x516>
  40486c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404870:	f7ff bbf9 	b.w	404066 <_dtoa_r+0x63e>
  404874:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404876:	930a      	str	r3, [sp, #40]	; 0x28
  404878:	e5e5      	b.n	404446 <_dtoa_r+0xa1e>
  40487a:	bf00      	nop

0040487c <__libc_fini_array>:
  40487c:	b538      	push	{r3, r4, r5, lr}
  40487e:	4c0a      	ldr	r4, [pc, #40]	; (4048a8 <__libc_fini_array+0x2c>)
  404880:	4d0a      	ldr	r5, [pc, #40]	; (4048ac <__libc_fini_array+0x30>)
  404882:	1b64      	subs	r4, r4, r5
  404884:	10a4      	asrs	r4, r4, #2
  404886:	d00a      	beq.n	40489e <__libc_fini_array+0x22>
  404888:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40488c:	3b01      	subs	r3, #1
  40488e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404892:	3c01      	subs	r4, #1
  404894:	f855 3904 	ldr.w	r3, [r5], #-4
  404898:	4798      	blx	r3
  40489a:	2c00      	cmp	r4, #0
  40489c:	d1f9      	bne.n	404892 <__libc_fini_array+0x16>
  40489e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4048a2:	f002 bc1b 	b.w	4070dc <_fini>
  4048a6:	bf00      	nop
  4048a8:	004070ec 	.word	0x004070ec
  4048ac:	004070e8 	.word	0x004070e8

004048b0 <_localeconv_r>:
  4048b0:	4a04      	ldr	r2, [pc, #16]	; (4048c4 <_localeconv_r+0x14>)
  4048b2:	4b05      	ldr	r3, [pc, #20]	; (4048c8 <_localeconv_r+0x18>)
  4048b4:	6812      	ldr	r2, [r2, #0]
  4048b6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4048b8:	2800      	cmp	r0, #0
  4048ba:	bf08      	it	eq
  4048bc:	4618      	moveq	r0, r3
  4048be:	30f0      	adds	r0, #240	; 0xf0
  4048c0:	4770      	bx	lr
  4048c2:	bf00      	nop
  4048c4:	20400024 	.word	0x20400024
  4048c8:	20400864 	.word	0x20400864

004048cc <__retarget_lock_acquire_recursive>:
  4048cc:	4770      	bx	lr
  4048ce:	bf00      	nop

004048d0 <__retarget_lock_release_recursive>:
  4048d0:	4770      	bx	lr
  4048d2:	bf00      	nop

004048d4 <_malloc_r>:
  4048d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4048d8:	f101 060b 	add.w	r6, r1, #11
  4048dc:	2e16      	cmp	r6, #22
  4048de:	b083      	sub	sp, #12
  4048e0:	4605      	mov	r5, r0
  4048e2:	f240 809e 	bls.w	404a22 <_malloc_r+0x14e>
  4048e6:	f036 0607 	bics.w	r6, r6, #7
  4048ea:	f100 80bd 	bmi.w	404a68 <_malloc_r+0x194>
  4048ee:	42b1      	cmp	r1, r6
  4048f0:	f200 80ba 	bhi.w	404a68 <_malloc_r+0x194>
  4048f4:	f000 fb8e 	bl	405014 <__malloc_lock>
  4048f8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4048fc:	f0c0 8293 	bcc.w	404e26 <_malloc_r+0x552>
  404900:	0a73      	lsrs	r3, r6, #9
  404902:	f000 80b8 	beq.w	404a76 <_malloc_r+0x1a2>
  404906:	2b04      	cmp	r3, #4
  404908:	f200 8179 	bhi.w	404bfe <_malloc_r+0x32a>
  40490c:	09b3      	lsrs	r3, r6, #6
  40490e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404912:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404916:	00c3      	lsls	r3, r0, #3
  404918:	4fbf      	ldr	r7, [pc, #764]	; (404c18 <_malloc_r+0x344>)
  40491a:	443b      	add	r3, r7
  40491c:	f1a3 0108 	sub.w	r1, r3, #8
  404920:	685c      	ldr	r4, [r3, #4]
  404922:	42a1      	cmp	r1, r4
  404924:	d106      	bne.n	404934 <_malloc_r+0x60>
  404926:	e00c      	b.n	404942 <_malloc_r+0x6e>
  404928:	2a00      	cmp	r2, #0
  40492a:	f280 80aa 	bge.w	404a82 <_malloc_r+0x1ae>
  40492e:	68e4      	ldr	r4, [r4, #12]
  404930:	42a1      	cmp	r1, r4
  404932:	d006      	beq.n	404942 <_malloc_r+0x6e>
  404934:	6863      	ldr	r3, [r4, #4]
  404936:	f023 0303 	bic.w	r3, r3, #3
  40493a:	1b9a      	subs	r2, r3, r6
  40493c:	2a0f      	cmp	r2, #15
  40493e:	ddf3      	ble.n	404928 <_malloc_r+0x54>
  404940:	4670      	mov	r0, lr
  404942:	693c      	ldr	r4, [r7, #16]
  404944:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404c2c <_malloc_r+0x358>
  404948:	4574      	cmp	r4, lr
  40494a:	f000 81ab 	beq.w	404ca4 <_malloc_r+0x3d0>
  40494e:	6863      	ldr	r3, [r4, #4]
  404950:	f023 0303 	bic.w	r3, r3, #3
  404954:	1b9a      	subs	r2, r3, r6
  404956:	2a0f      	cmp	r2, #15
  404958:	f300 8190 	bgt.w	404c7c <_malloc_r+0x3a8>
  40495c:	2a00      	cmp	r2, #0
  40495e:	f8c7 e014 	str.w	lr, [r7, #20]
  404962:	f8c7 e010 	str.w	lr, [r7, #16]
  404966:	f280 809d 	bge.w	404aa4 <_malloc_r+0x1d0>
  40496a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40496e:	f080 8161 	bcs.w	404c34 <_malloc_r+0x360>
  404972:	08db      	lsrs	r3, r3, #3
  404974:	f103 0c01 	add.w	ip, r3, #1
  404978:	1099      	asrs	r1, r3, #2
  40497a:	687a      	ldr	r2, [r7, #4]
  40497c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404980:	f8c4 8008 	str.w	r8, [r4, #8]
  404984:	2301      	movs	r3, #1
  404986:	408b      	lsls	r3, r1
  404988:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40498c:	4313      	orrs	r3, r2
  40498e:	3908      	subs	r1, #8
  404990:	60e1      	str	r1, [r4, #12]
  404992:	607b      	str	r3, [r7, #4]
  404994:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404998:	f8c8 400c 	str.w	r4, [r8, #12]
  40499c:	1082      	asrs	r2, r0, #2
  40499e:	2401      	movs	r4, #1
  4049a0:	4094      	lsls	r4, r2
  4049a2:	429c      	cmp	r4, r3
  4049a4:	f200 808b 	bhi.w	404abe <_malloc_r+0x1ea>
  4049a8:	421c      	tst	r4, r3
  4049aa:	d106      	bne.n	4049ba <_malloc_r+0xe6>
  4049ac:	f020 0003 	bic.w	r0, r0, #3
  4049b0:	0064      	lsls	r4, r4, #1
  4049b2:	421c      	tst	r4, r3
  4049b4:	f100 0004 	add.w	r0, r0, #4
  4049b8:	d0fa      	beq.n	4049b0 <_malloc_r+0xdc>
  4049ba:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4049be:	46cc      	mov	ip, r9
  4049c0:	4680      	mov	r8, r0
  4049c2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4049c6:	459c      	cmp	ip, r3
  4049c8:	d107      	bne.n	4049da <_malloc_r+0x106>
  4049ca:	e16d      	b.n	404ca8 <_malloc_r+0x3d4>
  4049cc:	2a00      	cmp	r2, #0
  4049ce:	f280 817b 	bge.w	404cc8 <_malloc_r+0x3f4>
  4049d2:	68db      	ldr	r3, [r3, #12]
  4049d4:	459c      	cmp	ip, r3
  4049d6:	f000 8167 	beq.w	404ca8 <_malloc_r+0x3d4>
  4049da:	6859      	ldr	r1, [r3, #4]
  4049dc:	f021 0103 	bic.w	r1, r1, #3
  4049e0:	1b8a      	subs	r2, r1, r6
  4049e2:	2a0f      	cmp	r2, #15
  4049e4:	ddf2      	ble.n	4049cc <_malloc_r+0xf8>
  4049e6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4049ea:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4049ee:	9300      	str	r3, [sp, #0]
  4049f0:	199c      	adds	r4, r3, r6
  4049f2:	4628      	mov	r0, r5
  4049f4:	f046 0601 	orr.w	r6, r6, #1
  4049f8:	f042 0501 	orr.w	r5, r2, #1
  4049fc:	605e      	str	r6, [r3, #4]
  4049fe:	f8c8 c00c 	str.w	ip, [r8, #12]
  404a02:	f8cc 8008 	str.w	r8, [ip, #8]
  404a06:	617c      	str	r4, [r7, #20]
  404a08:	613c      	str	r4, [r7, #16]
  404a0a:	f8c4 e00c 	str.w	lr, [r4, #12]
  404a0e:	f8c4 e008 	str.w	lr, [r4, #8]
  404a12:	6065      	str	r5, [r4, #4]
  404a14:	505a      	str	r2, [r3, r1]
  404a16:	f000 fb03 	bl	405020 <__malloc_unlock>
  404a1a:	9b00      	ldr	r3, [sp, #0]
  404a1c:	f103 0408 	add.w	r4, r3, #8
  404a20:	e01e      	b.n	404a60 <_malloc_r+0x18c>
  404a22:	2910      	cmp	r1, #16
  404a24:	d820      	bhi.n	404a68 <_malloc_r+0x194>
  404a26:	f000 faf5 	bl	405014 <__malloc_lock>
  404a2a:	2610      	movs	r6, #16
  404a2c:	2318      	movs	r3, #24
  404a2e:	2002      	movs	r0, #2
  404a30:	4f79      	ldr	r7, [pc, #484]	; (404c18 <_malloc_r+0x344>)
  404a32:	443b      	add	r3, r7
  404a34:	f1a3 0208 	sub.w	r2, r3, #8
  404a38:	685c      	ldr	r4, [r3, #4]
  404a3a:	4294      	cmp	r4, r2
  404a3c:	f000 813d 	beq.w	404cba <_malloc_r+0x3e6>
  404a40:	6863      	ldr	r3, [r4, #4]
  404a42:	68e1      	ldr	r1, [r4, #12]
  404a44:	68a6      	ldr	r6, [r4, #8]
  404a46:	f023 0303 	bic.w	r3, r3, #3
  404a4a:	4423      	add	r3, r4
  404a4c:	4628      	mov	r0, r5
  404a4e:	685a      	ldr	r2, [r3, #4]
  404a50:	60f1      	str	r1, [r6, #12]
  404a52:	f042 0201 	orr.w	r2, r2, #1
  404a56:	608e      	str	r6, [r1, #8]
  404a58:	605a      	str	r2, [r3, #4]
  404a5a:	f000 fae1 	bl	405020 <__malloc_unlock>
  404a5e:	3408      	adds	r4, #8
  404a60:	4620      	mov	r0, r4
  404a62:	b003      	add	sp, #12
  404a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a68:	2400      	movs	r4, #0
  404a6a:	230c      	movs	r3, #12
  404a6c:	4620      	mov	r0, r4
  404a6e:	602b      	str	r3, [r5, #0]
  404a70:	b003      	add	sp, #12
  404a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a76:	2040      	movs	r0, #64	; 0x40
  404a78:	f44f 7300 	mov.w	r3, #512	; 0x200
  404a7c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404a80:	e74a      	b.n	404918 <_malloc_r+0x44>
  404a82:	4423      	add	r3, r4
  404a84:	68e1      	ldr	r1, [r4, #12]
  404a86:	685a      	ldr	r2, [r3, #4]
  404a88:	68a6      	ldr	r6, [r4, #8]
  404a8a:	f042 0201 	orr.w	r2, r2, #1
  404a8e:	60f1      	str	r1, [r6, #12]
  404a90:	4628      	mov	r0, r5
  404a92:	608e      	str	r6, [r1, #8]
  404a94:	605a      	str	r2, [r3, #4]
  404a96:	f000 fac3 	bl	405020 <__malloc_unlock>
  404a9a:	3408      	adds	r4, #8
  404a9c:	4620      	mov	r0, r4
  404a9e:	b003      	add	sp, #12
  404aa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404aa4:	4423      	add	r3, r4
  404aa6:	4628      	mov	r0, r5
  404aa8:	685a      	ldr	r2, [r3, #4]
  404aaa:	f042 0201 	orr.w	r2, r2, #1
  404aae:	605a      	str	r2, [r3, #4]
  404ab0:	f000 fab6 	bl	405020 <__malloc_unlock>
  404ab4:	3408      	adds	r4, #8
  404ab6:	4620      	mov	r0, r4
  404ab8:	b003      	add	sp, #12
  404aba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404abe:	68bc      	ldr	r4, [r7, #8]
  404ac0:	6863      	ldr	r3, [r4, #4]
  404ac2:	f023 0803 	bic.w	r8, r3, #3
  404ac6:	45b0      	cmp	r8, r6
  404ac8:	d304      	bcc.n	404ad4 <_malloc_r+0x200>
  404aca:	eba8 0306 	sub.w	r3, r8, r6
  404ace:	2b0f      	cmp	r3, #15
  404ad0:	f300 8085 	bgt.w	404bde <_malloc_r+0x30a>
  404ad4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404c30 <_malloc_r+0x35c>
  404ad8:	4b50      	ldr	r3, [pc, #320]	; (404c1c <_malloc_r+0x348>)
  404ada:	f8d9 2000 	ldr.w	r2, [r9]
  404ade:	681b      	ldr	r3, [r3, #0]
  404ae0:	3201      	adds	r2, #1
  404ae2:	4433      	add	r3, r6
  404ae4:	eb04 0a08 	add.w	sl, r4, r8
  404ae8:	f000 8155 	beq.w	404d96 <_malloc_r+0x4c2>
  404aec:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404af0:	330f      	adds	r3, #15
  404af2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404af6:	f02b 0b0f 	bic.w	fp, fp, #15
  404afa:	4659      	mov	r1, fp
  404afc:	4628      	mov	r0, r5
  404afe:	f000 fd8f 	bl	405620 <_sbrk_r>
  404b02:	1c41      	adds	r1, r0, #1
  404b04:	4602      	mov	r2, r0
  404b06:	f000 80fc 	beq.w	404d02 <_malloc_r+0x42e>
  404b0a:	4582      	cmp	sl, r0
  404b0c:	f200 80f7 	bhi.w	404cfe <_malloc_r+0x42a>
  404b10:	4b43      	ldr	r3, [pc, #268]	; (404c20 <_malloc_r+0x34c>)
  404b12:	6819      	ldr	r1, [r3, #0]
  404b14:	4459      	add	r1, fp
  404b16:	6019      	str	r1, [r3, #0]
  404b18:	f000 814d 	beq.w	404db6 <_malloc_r+0x4e2>
  404b1c:	f8d9 0000 	ldr.w	r0, [r9]
  404b20:	3001      	adds	r0, #1
  404b22:	bf1b      	ittet	ne
  404b24:	eba2 0a0a 	subne.w	sl, r2, sl
  404b28:	4451      	addne	r1, sl
  404b2a:	f8c9 2000 	streq.w	r2, [r9]
  404b2e:	6019      	strne	r1, [r3, #0]
  404b30:	f012 0107 	ands.w	r1, r2, #7
  404b34:	f000 8115 	beq.w	404d62 <_malloc_r+0x48e>
  404b38:	f1c1 0008 	rsb	r0, r1, #8
  404b3c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404b40:	4402      	add	r2, r0
  404b42:	3108      	adds	r1, #8
  404b44:	eb02 090b 	add.w	r9, r2, fp
  404b48:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404b4c:	eba1 0909 	sub.w	r9, r1, r9
  404b50:	4649      	mov	r1, r9
  404b52:	4628      	mov	r0, r5
  404b54:	9301      	str	r3, [sp, #4]
  404b56:	9200      	str	r2, [sp, #0]
  404b58:	f000 fd62 	bl	405620 <_sbrk_r>
  404b5c:	1c43      	adds	r3, r0, #1
  404b5e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404b62:	f000 8143 	beq.w	404dec <_malloc_r+0x518>
  404b66:	1a80      	subs	r0, r0, r2
  404b68:	4448      	add	r0, r9
  404b6a:	f040 0001 	orr.w	r0, r0, #1
  404b6e:	6819      	ldr	r1, [r3, #0]
  404b70:	60ba      	str	r2, [r7, #8]
  404b72:	4449      	add	r1, r9
  404b74:	42bc      	cmp	r4, r7
  404b76:	6050      	str	r0, [r2, #4]
  404b78:	6019      	str	r1, [r3, #0]
  404b7a:	d017      	beq.n	404bac <_malloc_r+0x2d8>
  404b7c:	f1b8 0f0f 	cmp.w	r8, #15
  404b80:	f240 80fb 	bls.w	404d7a <_malloc_r+0x4a6>
  404b84:	6860      	ldr	r0, [r4, #4]
  404b86:	f1a8 020c 	sub.w	r2, r8, #12
  404b8a:	f022 0207 	bic.w	r2, r2, #7
  404b8e:	eb04 0e02 	add.w	lr, r4, r2
  404b92:	f000 0001 	and.w	r0, r0, #1
  404b96:	f04f 0c05 	mov.w	ip, #5
  404b9a:	4310      	orrs	r0, r2
  404b9c:	2a0f      	cmp	r2, #15
  404b9e:	6060      	str	r0, [r4, #4]
  404ba0:	f8ce c004 	str.w	ip, [lr, #4]
  404ba4:	f8ce c008 	str.w	ip, [lr, #8]
  404ba8:	f200 8117 	bhi.w	404dda <_malloc_r+0x506>
  404bac:	4b1d      	ldr	r3, [pc, #116]	; (404c24 <_malloc_r+0x350>)
  404bae:	68bc      	ldr	r4, [r7, #8]
  404bb0:	681a      	ldr	r2, [r3, #0]
  404bb2:	4291      	cmp	r1, r2
  404bb4:	bf88      	it	hi
  404bb6:	6019      	strhi	r1, [r3, #0]
  404bb8:	4b1b      	ldr	r3, [pc, #108]	; (404c28 <_malloc_r+0x354>)
  404bba:	681a      	ldr	r2, [r3, #0]
  404bbc:	4291      	cmp	r1, r2
  404bbe:	6862      	ldr	r2, [r4, #4]
  404bc0:	bf88      	it	hi
  404bc2:	6019      	strhi	r1, [r3, #0]
  404bc4:	f022 0203 	bic.w	r2, r2, #3
  404bc8:	4296      	cmp	r6, r2
  404bca:	eba2 0306 	sub.w	r3, r2, r6
  404bce:	d801      	bhi.n	404bd4 <_malloc_r+0x300>
  404bd0:	2b0f      	cmp	r3, #15
  404bd2:	dc04      	bgt.n	404bde <_malloc_r+0x30a>
  404bd4:	4628      	mov	r0, r5
  404bd6:	f000 fa23 	bl	405020 <__malloc_unlock>
  404bda:	2400      	movs	r4, #0
  404bdc:	e740      	b.n	404a60 <_malloc_r+0x18c>
  404bde:	19a2      	adds	r2, r4, r6
  404be0:	f043 0301 	orr.w	r3, r3, #1
  404be4:	f046 0601 	orr.w	r6, r6, #1
  404be8:	6066      	str	r6, [r4, #4]
  404bea:	4628      	mov	r0, r5
  404bec:	60ba      	str	r2, [r7, #8]
  404bee:	6053      	str	r3, [r2, #4]
  404bf0:	f000 fa16 	bl	405020 <__malloc_unlock>
  404bf4:	3408      	adds	r4, #8
  404bf6:	4620      	mov	r0, r4
  404bf8:	b003      	add	sp, #12
  404bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404bfe:	2b14      	cmp	r3, #20
  404c00:	d971      	bls.n	404ce6 <_malloc_r+0x412>
  404c02:	2b54      	cmp	r3, #84	; 0x54
  404c04:	f200 80a3 	bhi.w	404d4e <_malloc_r+0x47a>
  404c08:	0b33      	lsrs	r3, r6, #12
  404c0a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404c0e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404c12:	00c3      	lsls	r3, r0, #3
  404c14:	e680      	b.n	404918 <_malloc_r+0x44>
  404c16:	bf00      	nop
  404c18:	20400454 	.word	0x20400454
  404c1c:	20400cac 	.word	0x20400cac
  404c20:	20400c7c 	.word	0x20400c7c
  404c24:	20400ca4 	.word	0x20400ca4
  404c28:	20400ca8 	.word	0x20400ca8
  404c2c:	2040045c 	.word	0x2040045c
  404c30:	2040085c 	.word	0x2040085c
  404c34:	0a5a      	lsrs	r2, r3, #9
  404c36:	2a04      	cmp	r2, #4
  404c38:	d95b      	bls.n	404cf2 <_malloc_r+0x41e>
  404c3a:	2a14      	cmp	r2, #20
  404c3c:	f200 80ae 	bhi.w	404d9c <_malloc_r+0x4c8>
  404c40:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404c44:	00c9      	lsls	r1, r1, #3
  404c46:	325b      	adds	r2, #91	; 0x5b
  404c48:	eb07 0c01 	add.w	ip, r7, r1
  404c4c:	5879      	ldr	r1, [r7, r1]
  404c4e:	f1ac 0c08 	sub.w	ip, ip, #8
  404c52:	458c      	cmp	ip, r1
  404c54:	f000 8088 	beq.w	404d68 <_malloc_r+0x494>
  404c58:	684a      	ldr	r2, [r1, #4]
  404c5a:	f022 0203 	bic.w	r2, r2, #3
  404c5e:	4293      	cmp	r3, r2
  404c60:	d273      	bcs.n	404d4a <_malloc_r+0x476>
  404c62:	6889      	ldr	r1, [r1, #8]
  404c64:	458c      	cmp	ip, r1
  404c66:	d1f7      	bne.n	404c58 <_malloc_r+0x384>
  404c68:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404c6c:	687b      	ldr	r3, [r7, #4]
  404c6e:	60e2      	str	r2, [r4, #12]
  404c70:	f8c4 c008 	str.w	ip, [r4, #8]
  404c74:	6094      	str	r4, [r2, #8]
  404c76:	f8cc 400c 	str.w	r4, [ip, #12]
  404c7a:	e68f      	b.n	40499c <_malloc_r+0xc8>
  404c7c:	19a1      	adds	r1, r4, r6
  404c7e:	f046 0c01 	orr.w	ip, r6, #1
  404c82:	f042 0601 	orr.w	r6, r2, #1
  404c86:	f8c4 c004 	str.w	ip, [r4, #4]
  404c8a:	4628      	mov	r0, r5
  404c8c:	6179      	str	r1, [r7, #20]
  404c8e:	6139      	str	r1, [r7, #16]
  404c90:	f8c1 e00c 	str.w	lr, [r1, #12]
  404c94:	f8c1 e008 	str.w	lr, [r1, #8]
  404c98:	604e      	str	r6, [r1, #4]
  404c9a:	50e2      	str	r2, [r4, r3]
  404c9c:	f000 f9c0 	bl	405020 <__malloc_unlock>
  404ca0:	3408      	adds	r4, #8
  404ca2:	e6dd      	b.n	404a60 <_malloc_r+0x18c>
  404ca4:	687b      	ldr	r3, [r7, #4]
  404ca6:	e679      	b.n	40499c <_malloc_r+0xc8>
  404ca8:	f108 0801 	add.w	r8, r8, #1
  404cac:	f018 0f03 	tst.w	r8, #3
  404cb0:	f10c 0c08 	add.w	ip, ip, #8
  404cb4:	f47f ae85 	bne.w	4049c2 <_malloc_r+0xee>
  404cb8:	e02d      	b.n	404d16 <_malloc_r+0x442>
  404cba:	68dc      	ldr	r4, [r3, #12]
  404cbc:	42a3      	cmp	r3, r4
  404cbe:	bf08      	it	eq
  404cc0:	3002      	addeq	r0, #2
  404cc2:	f43f ae3e 	beq.w	404942 <_malloc_r+0x6e>
  404cc6:	e6bb      	b.n	404a40 <_malloc_r+0x16c>
  404cc8:	4419      	add	r1, r3
  404cca:	461c      	mov	r4, r3
  404ccc:	684a      	ldr	r2, [r1, #4]
  404cce:	68db      	ldr	r3, [r3, #12]
  404cd0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404cd4:	f042 0201 	orr.w	r2, r2, #1
  404cd8:	604a      	str	r2, [r1, #4]
  404cda:	4628      	mov	r0, r5
  404cdc:	60f3      	str	r3, [r6, #12]
  404cde:	609e      	str	r6, [r3, #8]
  404ce0:	f000 f99e 	bl	405020 <__malloc_unlock>
  404ce4:	e6bc      	b.n	404a60 <_malloc_r+0x18c>
  404ce6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404cea:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404cee:	00c3      	lsls	r3, r0, #3
  404cf0:	e612      	b.n	404918 <_malloc_r+0x44>
  404cf2:	099a      	lsrs	r2, r3, #6
  404cf4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404cf8:	00c9      	lsls	r1, r1, #3
  404cfa:	3238      	adds	r2, #56	; 0x38
  404cfc:	e7a4      	b.n	404c48 <_malloc_r+0x374>
  404cfe:	42bc      	cmp	r4, r7
  404d00:	d054      	beq.n	404dac <_malloc_r+0x4d8>
  404d02:	68bc      	ldr	r4, [r7, #8]
  404d04:	6862      	ldr	r2, [r4, #4]
  404d06:	f022 0203 	bic.w	r2, r2, #3
  404d0a:	e75d      	b.n	404bc8 <_malloc_r+0x2f4>
  404d0c:	f859 3908 	ldr.w	r3, [r9], #-8
  404d10:	4599      	cmp	r9, r3
  404d12:	f040 8086 	bne.w	404e22 <_malloc_r+0x54e>
  404d16:	f010 0f03 	tst.w	r0, #3
  404d1a:	f100 30ff 	add.w	r0, r0, #4294967295
  404d1e:	d1f5      	bne.n	404d0c <_malloc_r+0x438>
  404d20:	687b      	ldr	r3, [r7, #4]
  404d22:	ea23 0304 	bic.w	r3, r3, r4
  404d26:	607b      	str	r3, [r7, #4]
  404d28:	0064      	lsls	r4, r4, #1
  404d2a:	429c      	cmp	r4, r3
  404d2c:	f63f aec7 	bhi.w	404abe <_malloc_r+0x1ea>
  404d30:	2c00      	cmp	r4, #0
  404d32:	f43f aec4 	beq.w	404abe <_malloc_r+0x1ea>
  404d36:	421c      	tst	r4, r3
  404d38:	4640      	mov	r0, r8
  404d3a:	f47f ae3e 	bne.w	4049ba <_malloc_r+0xe6>
  404d3e:	0064      	lsls	r4, r4, #1
  404d40:	421c      	tst	r4, r3
  404d42:	f100 0004 	add.w	r0, r0, #4
  404d46:	d0fa      	beq.n	404d3e <_malloc_r+0x46a>
  404d48:	e637      	b.n	4049ba <_malloc_r+0xe6>
  404d4a:	468c      	mov	ip, r1
  404d4c:	e78c      	b.n	404c68 <_malloc_r+0x394>
  404d4e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404d52:	d815      	bhi.n	404d80 <_malloc_r+0x4ac>
  404d54:	0bf3      	lsrs	r3, r6, #15
  404d56:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404d5a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404d5e:	00c3      	lsls	r3, r0, #3
  404d60:	e5da      	b.n	404918 <_malloc_r+0x44>
  404d62:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404d66:	e6ed      	b.n	404b44 <_malloc_r+0x270>
  404d68:	687b      	ldr	r3, [r7, #4]
  404d6a:	1092      	asrs	r2, r2, #2
  404d6c:	2101      	movs	r1, #1
  404d6e:	fa01 f202 	lsl.w	r2, r1, r2
  404d72:	4313      	orrs	r3, r2
  404d74:	607b      	str	r3, [r7, #4]
  404d76:	4662      	mov	r2, ip
  404d78:	e779      	b.n	404c6e <_malloc_r+0x39a>
  404d7a:	2301      	movs	r3, #1
  404d7c:	6053      	str	r3, [r2, #4]
  404d7e:	e729      	b.n	404bd4 <_malloc_r+0x300>
  404d80:	f240 5254 	movw	r2, #1364	; 0x554
  404d84:	4293      	cmp	r3, r2
  404d86:	d822      	bhi.n	404dce <_malloc_r+0x4fa>
  404d88:	0cb3      	lsrs	r3, r6, #18
  404d8a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404d8e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404d92:	00c3      	lsls	r3, r0, #3
  404d94:	e5c0      	b.n	404918 <_malloc_r+0x44>
  404d96:	f103 0b10 	add.w	fp, r3, #16
  404d9a:	e6ae      	b.n	404afa <_malloc_r+0x226>
  404d9c:	2a54      	cmp	r2, #84	; 0x54
  404d9e:	d829      	bhi.n	404df4 <_malloc_r+0x520>
  404da0:	0b1a      	lsrs	r2, r3, #12
  404da2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404da6:	00c9      	lsls	r1, r1, #3
  404da8:	326e      	adds	r2, #110	; 0x6e
  404daa:	e74d      	b.n	404c48 <_malloc_r+0x374>
  404dac:	4b20      	ldr	r3, [pc, #128]	; (404e30 <_malloc_r+0x55c>)
  404dae:	6819      	ldr	r1, [r3, #0]
  404db0:	4459      	add	r1, fp
  404db2:	6019      	str	r1, [r3, #0]
  404db4:	e6b2      	b.n	404b1c <_malloc_r+0x248>
  404db6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404dba:	2800      	cmp	r0, #0
  404dbc:	f47f aeae 	bne.w	404b1c <_malloc_r+0x248>
  404dc0:	eb08 030b 	add.w	r3, r8, fp
  404dc4:	68ba      	ldr	r2, [r7, #8]
  404dc6:	f043 0301 	orr.w	r3, r3, #1
  404dca:	6053      	str	r3, [r2, #4]
  404dcc:	e6ee      	b.n	404bac <_malloc_r+0x2d8>
  404dce:	207f      	movs	r0, #127	; 0x7f
  404dd0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404dd4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404dd8:	e59e      	b.n	404918 <_malloc_r+0x44>
  404dda:	f104 0108 	add.w	r1, r4, #8
  404dde:	4628      	mov	r0, r5
  404de0:	9300      	str	r3, [sp, #0]
  404de2:	f000 fe1b 	bl	405a1c <_free_r>
  404de6:	9b00      	ldr	r3, [sp, #0]
  404de8:	6819      	ldr	r1, [r3, #0]
  404dea:	e6df      	b.n	404bac <_malloc_r+0x2d8>
  404dec:	2001      	movs	r0, #1
  404dee:	f04f 0900 	mov.w	r9, #0
  404df2:	e6bc      	b.n	404b6e <_malloc_r+0x29a>
  404df4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404df8:	d805      	bhi.n	404e06 <_malloc_r+0x532>
  404dfa:	0bda      	lsrs	r2, r3, #15
  404dfc:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404e00:	00c9      	lsls	r1, r1, #3
  404e02:	3277      	adds	r2, #119	; 0x77
  404e04:	e720      	b.n	404c48 <_malloc_r+0x374>
  404e06:	f240 5154 	movw	r1, #1364	; 0x554
  404e0a:	428a      	cmp	r2, r1
  404e0c:	d805      	bhi.n	404e1a <_malloc_r+0x546>
  404e0e:	0c9a      	lsrs	r2, r3, #18
  404e10:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404e14:	00c9      	lsls	r1, r1, #3
  404e16:	327c      	adds	r2, #124	; 0x7c
  404e18:	e716      	b.n	404c48 <_malloc_r+0x374>
  404e1a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404e1e:	227e      	movs	r2, #126	; 0x7e
  404e20:	e712      	b.n	404c48 <_malloc_r+0x374>
  404e22:	687b      	ldr	r3, [r7, #4]
  404e24:	e780      	b.n	404d28 <_malloc_r+0x454>
  404e26:	08f0      	lsrs	r0, r6, #3
  404e28:	f106 0308 	add.w	r3, r6, #8
  404e2c:	e600      	b.n	404a30 <_malloc_r+0x15c>
  404e2e:	bf00      	nop
  404e30:	20400c7c 	.word	0x20400c7c
	...

00404e40 <memchr>:
  404e40:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404e44:	2a10      	cmp	r2, #16
  404e46:	db2b      	blt.n	404ea0 <memchr+0x60>
  404e48:	f010 0f07 	tst.w	r0, #7
  404e4c:	d008      	beq.n	404e60 <memchr+0x20>
  404e4e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404e52:	3a01      	subs	r2, #1
  404e54:	428b      	cmp	r3, r1
  404e56:	d02d      	beq.n	404eb4 <memchr+0x74>
  404e58:	f010 0f07 	tst.w	r0, #7
  404e5c:	b342      	cbz	r2, 404eb0 <memchr+0x70>
  404e5e:	d1f6      	bne.n	404e4e <memchr+0xe>
  404e60:	b4f0      	push	{r4, r5, r6, r7}
  404e62:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404e66:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404e6a:	f022 0407 	bic.w	r4, r2, #7
  404e6e:	f07f 0700 	mvns.w	r7, #0
  404e72:	2300      	movs	r3, #0
  404e74:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404e78:	3c08      	subs	r4, #8
  404e7a:	ea85 0501 	eor.w	r5, r5, r1
  404e7e:	ea86 0601 	eor.w	r6, r6, r1
  404e82:	fa85 f547 	uadd8	r5, r5, r7
  404e86:	faa3 f587 	sel	r5, r3, r7
  404e8a:	fa86 f647 	uadd8	r6, r6, r7
  404e8e:	faa5 f687 	sel	r6, r5, r7
  404e92:	b98e      	cbnz	r6, 404eb8 <memchr+0x78>
  404e94:	d1ee      	bne.n	404e74 <memchr+0x34>
  404e96:	bcf0      	pop	{r4, r5, r6, r7}
  404e98:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404e9c:	f002 0207 	and.w	r2, r2, #7
  404ea0:	b132      	cbz	r2, 404eb0 <memchr+0x70>
  404ea2:	f810 3b01 	ldrb.w	r3, [r0], #1
  404ea6:	3a01      	subs	r2, #1
  404ea8:	ea83 0301 	eor.w	r3, r3, r1
  404eac:	b113      	cbz	r3, 404eb4 <memchr+0x74>
  404eae:	d1f8      	bne.n	404ea2 <memchr+0x62>
  404eb0:	2000      	movs	r0, #0
  404eb2:	4770      	bx	lr
  404eb4:	3801      	subs	r0, #1
  404eb6:	4770      	bx	lr
  404eb8:	2d00      	cmp	r5, #0
  404eba:	bf06      	itte	eq
  404ebc:	4635      	moveq	r5, r6
  404ebe:	3803      	subeq	r0, #3
  404ec0:	3807      	subne	r0, #7
  404ec2:	f015 0f01 	tst.w	r5, #1
  404ec6:	d107      	bne.n	404ed8 <memchr+0x98>
  404ec8:	3001      	adds	r0, #1
  404eca:	f415 7f80 	tst.w	r5, #256	; 0x100
  404ece:	bf02      	ittt	eq
  404ed0:	3001      	addeq	r0, #1
  404ed2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404ed6:	3001      	addeq	r0, #1
  404ed8:	bcf0      	pop	{r4, r5, r6, r7}
  404eda:	3801      	subs	r0, #1
  404edc:	4770      	bx	lr
  404ede:	bf00      	nop

00404ee0 <memcpy>:
  404ee0:	4684      	mov	ip, r0
  404ee2:	ea41 0300 	orr.w	r3, r1, r0
  404ee6:	f013 0303 	ands.w	r3, r3, #3
  404eea:	d16d      	bne.n	404fc8 <memcpy+0xe8>
  404eec:	3a40      	subs	r2, #64	; 0x40
  404eee:	d341      	bcc.n	404f74 <memcpy+0x94>
  404ef0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ef4:	f840 3b04 	str.w	r3, [r0], #4
  404ef8:	f851 3b04 	ldr.w	r3, [r1], #4
  404efc:	f840 3b04 	str.w	r3, [r0], #4
  404f00:	f851 3b04 	ldr.w	r3, [r1], #4
  404f04:	f840 3b04 	str.w	r3, [r0], #4
  404f08:	f851 3b04 	ldr.w	r3, [r1], #4
  404f0c:	f840 3b04 	str.w	r3, [r0], #4
  404f10:	f851 3b04 	ldr.w	r3, [r1], #4
  404f14:	f840 3b04 	str.w	r3, [r0], #4
  404f18:	f851 3b04 	ldr.w	r3, [r1], #4
  404f1c:	f840 3b04 	str.w	r3, [r0], #4
  404f20:	f851 3b04 	ldr.w	r3, [r1], #4
  404f24:	f840 3b04 	str.w	r3, [r0], #4
  404f28:	f851 3b04 	ldr.w	r3, [r1], #4
  404f2c:	f840 3b04 	str.w	r3, [r0], #4
  404f30:	f851 3b04 	ldr.w	r3, [r1], #4
  404f34:	f840 3b04 	str.w	r3, [r0], #4
  404f38:	f851 3b04 	ldr.w	r3, [r1], #4
  404f3c:	f840 3b04 	str.w	r3, [r0], #4
  404f40:	f851 3b04 	ldr.w	r3, [r1], #4
  404f44:	f840 3b04 	str.w	r3, [r0], #4
  404f48:	f851 3b04 	ldr.w	r3, [r1], #4
  404f4c:	f840 3b04 	str.w	r3, [r0], #4
  404f50:	f851 3b04 	ldr.w	r3, [r1], #4
  404f54:	f840 3b04 	str.w	r3, [r0], #4
  404f58:	f851 3b04 	ldr.w	r3, [r1], #4
  404f5c:	f840 3b04 	str.w	r3, [r0], #4
  404f60:	f851 3b04 	ldr.w	r3, [r1], #4
  404f64:	f840 3b04 	str.w	r3, [r0], #4
  404f68:	f851 3b04 	ldr.w	r3, [r1], #4
  404f6c:	f840 3b04 	str.w	r3, [r0], #4
  404f70:	3a40      	subs	r2, #64	; 0x40
  404f72:	d2bd      	bcs.n	404ef0 <memcpy+0x10>
  404f74:	3230      	adds	r2, #48	; 0x30
  404f76:	d311      	bcc.n	404f9c <memcpy+0xbc>
  404f78:	f851 3b04 	ldr.w	r3, [r1], #4
  404f7c:	f840 3b04 	str.w	r3, [r0], #4
  404f80:	f851 3b04 	ldr.w	r3, [r1], #4
  404f84:	f840 3b04 	str.w	r3, [r0], #4
  404f88:	f851 3b04 	ldr.w	r3, [r1], #4
  404f8c:	f840 3b04 	str.w	r3, [r0], #4
  404f90:	f851 3b04 	ldr.w	r3, [r1], #4
  404f94:	f840 3b04 	str.w	r3, [r0], #4
  404f98:	3a10      	subs	r2, #16
  404f9a:	d2ed      	bcs.n	404f78 <memcpy+0x98>
  404f9c:	320c      	adds	r2, #12
  404f9e:	d305      	bcc.n	404fac <memcpy+0xcc>
  404fa0:	f851 3b04 	ldr.w	r3, [r1], #4
  404fa4:	f840 3b04 	str.w	r3, [r0], #4
  404fa8:	3a04      	subs	r2, #4
  404faa:	d2f9      	bcs.n	404fa0 <memcpy+0xc0>
  404fac:	3204      	adds	r2, #4
  404fae:	d008      	beq.n	404fc2 <memcpy+0xe2>
  404fb0:	07d2      	lsls	r2, r2, #31
  404fb2:	bf1c      	itt	ne
  404fb4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404fb8:	f800 3b01 	strbne.w	r3, [r0], #1
  404fbc:	d301      	bcc.n	404fc2 <memcpy+0xe2>
  404fbe:	880b      	ldrh	r3, [r1, #0]
  404fc0:	8003      	strh	r3, [r0, #0]
  404fc2:	4660      	mov	r0, ip
  404fc4:	4770      	bx	lr
  404fc6:	bf00      	nop
  404fc8:	2a08      	cmp	r2, #8
  404fca:	d313      	bcc.n	404ff4 <memcpy+0x114>
  404fcc:	078b      	lsls	r3, r1, #30
  404fce:	d08d      	beq.n	404eec <memcpy+0xc>
  404fd0:	f010 0303 	ands.w	r3, r0, #3
  404fd4:	d08a      	beq.n	404eec <memcpy+0xc>
  404fd6:	f1c3 0304 	rsb	r3, r3, #4
  404fda:	1ad2      	subs	r2, r2, r3
  404fdc:	07db      	lsls	r3, r3, #31
  404fde:	bf1c      	itt	ne
  404fe0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404fe4:	f800 3b01 	strbne.w	r3, [r0], #1
  404fe8:	d380      	bcc.n	404eec <memcpy+0xc>
  404fea:	f831 3b02 	ldrh.w	r3, [r1], #2
  404fee:	f820 3b02 	strh.w	r3, [r0], #2
  404ff2:	e77b      	b.n	404eec <memcpy+0xc>
  404ff4:	3a04      	subs	r2, #4
  404ff6:	d3d9      	bcc.n	404fac <memcpy+0xcc>
  404ff8:	3a01      	subs	r2, #1
  404ffa:	f811 3b01 	ldrb.w	r3, [r1], #1
  404ffe:	f800 3b01 	strb.w	r3, [r0], #1
  405002:	d2f9      	bcs.n	404ff8 <memcpy+0x118>
  405004:	780b      	ldrb	r3, [r1, #0]
  405006:	7003      	strb	r3, [r0, #0]
  405008:	784b      	ldrb	r3, [r1, #1]
  40500a:	7043      	strb	r3, [r0, #1]
  40500c:	788b      	ldrb	r3, [r1, #2]
  40500e:	7083      	strb	r3, [r0, #2]
  405010:	4660      	mov	r0, ip
  405012:	4770      	bx	lr

00405014 <__malloc_lock>:
  405014:	4801      	ldr	r0, [pc, #4]	; (40501c <__malloc_lock+0x8>)
  405016:	f7ff bc59 	b.w	4048cc <__retarget_lock_acquire_recursive>
  40501a:	bf00      	nop
  40501c:	20400d40 	.word	0x20400d40

00405020 <__malloc_unlock>:
  405020:	4801      	ldr	r0, [pc, #4]	; (405028 <__malloc_unlock+0x8>)
  405022:	f7ff bc55 	b.w	4048d0 <__retarget_lock_release_recursive>
  405026:	bf00      	nop
  405028:	20400d40 	.word	0x20400d40

0040502c <_Balloc>:
  40502c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40502e:	b570      	push	{r4, r5, r6, lr}
  405030:	4605      	mov	r5, r0
  405032:	460c      	mov	r4, r1
  405034:	b14b      	cbz	r3, 40504a <_Balloc+0x1e>
  405036:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40503a:	b180      	cbz	r0, 40505e <_Balloc+0x32>
  40503c:	6802      	ldr	r2, [r0, #0]
  40503e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405042:	2300      	movs	r3, #0
  405044:	6103      	str	r3, [r0, #16]
  405046:	60c3      	str	r3, [r0, #12]
  405048:	bd70      	pop	{r4, r5, r6, pc}
  40504a:	2221      	movs	r2, #33	; 0x21
  40504c:	2104      	movs	r1, #4
  40504e:	f000 fc65 	bl	40591c <_calloc_r>
  405052:	64e8      	str	r0, [r5, #76]	; 0x4c
  405054:	4603      	mov	r3, r0
  405056:	2800      	cmp	r0, #0
  405058:	d1ed      	bne.n	405036 <_Balloc+0xa>
  40505a:	2000      	movs	r0, #0
  40505c:	bd70      	pop	{r4, r5, r6, pc}
  40505e:	2101      	movs	r1, #1
  405060:	fa01 f604 	lsl.w	r6, r1, r4
  405064:	1d72      	adds	r2, r6, #5
  405066:	4628      	mov	r0, r5
  405068:	0092      	lsls	r2, r2, #2
  40506a:	f000 fc57 	bl	40591c <_calloc_r>
  40506e:	2800      	cmp	r0, #0
  405070:	d0f3      	beq.n	40505a <_Balloc+0x2e>
  405072:	6044      	str	r4, [r0, #4]
  405074:	6086      	str	r6, [r0, #8]
  405076:	e7e4      	b.n	405042 <_Balloc+0x16>

00405078 <_Bfree>:
  405078:	b131      	cbz	r1, 405088 <_Bfree+0x10>
  40507a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40507c:	684a      	ldr	r2, [r1, #4]
  40507e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405082:	6008      	str	r0, [r1, #0]
  405084:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  405088:	4770      	bx	lr
  40508a:	bf00      	nop

0040508c <__multadd>:
  40508c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40508e:	690c      	ldr	r4, [r1, #16]
  405090:	b083      	sub	sp, #12
  405092:	460d      	mov	r5, r1
  405094:	4606      	mov	r6, r0
  405096:	f101 0e14 	add.w	lr, r1, #20
  40509a:	2700      	movs	r7, #0
  40509c:	f8de 0000 	ldr.w	r0, [lr]
  4050a0:	b281      	uxth	r1, r0
  4050a2:	fb02 3301 	mla	r3, r2, r1, r3
  4050a6:	0c01      	lsrs	r1, r0, #16
  4050a8:	0c18      	lsrs	r0, r3, #16
  4050aa:	fb02 0101 	mla	r1, r2, r1, r0
  4050ae:	b29b      	uxth	r3, r3
  4050b0:	3701      	adds	r7, #1
  4050b2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4050b6:	42bc      	cmp	r4, r7
  4050b8:	f84e 3b04 	str.w	r3, [lr], #4
  4050bc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4050c0:	dcec      	bgt.n	40509c <__multadd+0x10>
  4050c2:	b13b      	cbz	r3, 4050d4 <__multadd+0x48>
  4050c4:	68aa      	ldr	r2, [r5, #8]
  4050c6:	4294      	cmp	r4, r2
  4050c8:	da07      	bge.n	4050da <__multadd+0x4e>
  4050ca:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4050ce:	3401      	adds	r4, #1
  4050d0:	6153      	str	r3, [r2, #20]
  4050d2:	612c      	str	r4, [r5, #16]
  4050d4:	4628      	mov	r0, r5
  4050d6:	b003      	add	sp, #12
  4050d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4050da:	6869      	ldr	r1, [r5, #4]
  4050dc:	9301      	str	r3, [sp, #4]
  4050de:	3101      	adds	r1, #1
  4050e0:	4630      	mov	r0, r6
  4050e2:	f7ff ffa3 	bl	40502c <_Balloc>
  4050e6:	692a      	ldr	r2, [r5, #16]
  4050e8:	3202      	adds	r2, #2
  4050ea:	f105 010c 	add.w	r1, r5, #12
  4050ee:	4607      	mov	r7, r0
  4050f0:	0092      	lsls	r2, r2, #2
  4050f2:	300c      	adds	r0, #12
  4050f4:	f7ff fef4 	bl	404ee0 <memcpy>
  4050f8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  4050fa:	6869      	ldr	r1, [r5, #4]
  4050fc:	9b01      	ldr	r3, [sp, #4]
  4050fe:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405102:	6028      	str	r0, [r5, #0]
  405104:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405108:	463d      	mov	r5, r7
  40510a:	e7de      	b.n	4050ca <__multadd+0x3e>

0040510c <__hi0bits>:
  40510c:	0c02      	lsrs	r2, r0, #16
  40510e:	0412      	lsls	r2, r2, #16
  405110:	4603      	mov	r3, r0
  405112:	b9b2      	cbnz	r2, 405142 <__hi0bits+0x36>
  405114:	0403      	lsls	r3, r0, #16
  405116:	2010      	movs	r0, #16
  405118:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40511c:	bf04      	itt	eq
  40511e:	021b      	lsleq	r3, r3, #8
  405120:	3008      	addeq	r0, #8
  405122:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405126:	bf04      	itt	eq
  405128:	011b      	lsleq	r3, r3, #4
  40512a:	3004      	addeq	r0, #4
  40512c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405130:	bf04      	itt	eq
  405132:	009b      	lsleq	r3, r3, #2
  405134:	3002      	addeq	r0, #2
  405136:	2b00      	cmp	r3, #0
  405138:	db02      	blt.n	405140 <__hi0bits+0x34>
  40513a:	005b      	lsls	r3, r3, #1
  40513c:	d403      	bmi.n	405146 <__hi0bits+0x3a>
  40513e:	2020      	movs	r0, #32
  405140:	4770      	bx	lr
  405142:	2000      	movs	r0, #0
  405144:	e7e8      	b.n	405118 <__hi0bits+0xc>
  405146:	3001      	adds	r0, #1
  405148:	4770      	bx	lr
  40514a:	bf00      	nop

0040514c <__lo0bits>:
  40514c:	6803      	ldr	r3, [r0, #0]
  40514e:	f013 0207 	ands.w	r2, r3, #7
  405152:	4601      	mov	r1, r0
  405154:	d007      	beq.n	405166 <__lo0bits+0x1a>
  405156:	07da      	lsls	r2, r3, #31
  405158:	d421      	bmi.n	40519e <__lo0bits+0x52>
  40515a:	0798      	lsls	r0, r3, #30
  40515c:	d421      	bmi.n	4051a2 <__lo0bits+0x56>
  40515e:	089b      	lsrs	r3, r3, #2
  405160:	600b      	str	r3, [r1, #0]
  405162:	2002      	movs	r0, #2
  405164:	4770      	bx	lr
  405166:	b298      	uxth	r0, r3
  405168:	b198      	cbz	r0, 405192 <__lo0bits+0x46>
  40516a:	4610      	mov	r0, r2
  40516c:	f013 0fff 	tst.w	r3, #255	; 0xff
  405170:	bf04      	itt	eq
  405172:	0a1b      	lsreq	r3, r3, #8
  405174:	3008      	addeq	r0, #8
  405176:	071a      	lsls	r2, r3, #28
  405178:	bf04      	itt	eq
  40517a:	091b      	lsreq	r3, r3, #4
  40517c:	3004      	addeq	r0, #4
  40517e:	079a      	lsls	r2, r3, #30
  405180:	bf04      	itt	eq
  405182:	089b      	lsreq	r3, r3, #2
  405184:	3002      	addeq	r0, #2
  405186:	07da      	lsls	r2, r3, #31
  405188:	d407      	bmi.n	40519a <__lo0bits+0x4e>
  40518a:	085b      	lsrs	r3, r3, #1
  40518c:	d104      	bne.n	405198 <__lo0bits+0x4c>
  40518e:	2020      	movs	r0, #32
  405190:	4770      	bx	lr
  405192:	0c1b      	lsrs	r3, r3, #16
  405194:	2010      	movs	r0, #16
  405196:	e7e9      	b.n	40516c <__lo0bits+0x20>
  405198:	3001      	adds	r0, #1
  40519a:	600b      	str	r3, [r1, #0]
  40519c:	4770      	bx	lr
  40519e:	2000      	movs	r0, #0
  4051a0:	4770      	bx	lr
  4051a2:	085b      	lsrs	r3, r3, #1
  4051a4:	600b      	str	r3, [r1, #0]
  4051a6:	2001      	movs	r0, #1
  4051a8:	4770      	bx	lr
  4051aa:	bf00      	nop

004051ac <__i2b>:
  4051ac:	b510      	push	{r4, lr}
  4051ae:	460c      	mov	r4, r1
  4051b0:	2101      	movs	r1, #1
  4051b2:	f7ff ff3b 	bl	40502c <_Balloc>
  4051b6:	2201      	movs	r2, #1
  4051b8:	6144      	str	r4, [r0, #20]
  4051ba:	6102      	str	r2, [r0, #16]
  4051bc:	bd10      	pop	{r4, pc}
  4051be:	bf00      	nop

004051c0 <__multiply>:
  4051c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4051c4:	690c      	ldr	r4, [r1, #16]
  4051c6:	6915      	ldr	r5, [r2, #16]
  4051c8:	42ac      	cmp	r4, r5
  4051ca:	b083      	sub	sp, #12
  4051cc:	468b      	mov	fp, r1
  4051ce:	4616      	mov	r6, r2
  4051d0:	da04      	bge.n	4051dc <__multiply+0x1c>
  4051d2:	4622      	mov	r2, r4
  4051d4:	46b3      	mov	fp, r6
  4051d6:	462c      	mov	r4, r5
  4051d8:	460e      	mov	r6, r1
  4051da:	4615      	mov	r5, r2
  4051dc:	f8db 3008 	ldr.w	r3, [fp, #8]
  4051e0:	f8db 1004 	ldr.w	r1, [fp, #4]
  4051e4:	eb04 0805 	add.w	r8, r4, r5
  4051e8:	4598      	cmp	r8, r3
  4051ea:	bfc8      	it	gt
  4051ec:	3101      	addgt	r1, #1
  4051ee:	f7ff ff1d 	bl	40502c <_Balloc>
  4051f2:	f100 0914 	add.w	r9, r0, #20
  4051f6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  4051fa:	45d1      	cmp	r9, sl
  4051fc:	9000      	str	r0, [sp, #0]
  4051fe:	d205      	bcs.n	40520c <__multiply+0x4c>
  405200:	464b      	mov	r3, r9
  405202:	2100      	movs	r1, #0
  405204:	f843 1b04 	str.w	r1, [r3], #4
  405208:	459a      	cmp	sl, r3
  40520a:	d8fb      	bhi.n	405204 <__multiply+0x44>
  40520c:	f106 0c14 	add.w	ip, r6, #20
  405210:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405214:	f10b 0b14 	add.w	fp, fp, #20
  405218:	459c      	cmp	ip, r3
  40521a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40521e:	d24c      	bcs.n	4052ba <__multiply+0xfa>
  405220:	f8cd a004 	str.w	sl, [sp, #4]
  405224:	469a      	mov	sl, r3
  405226:	f8dc 5000 	ldr.w	r5, [ip]
  40522a:	b2af      	uxth	r7, r5
  40522c:	b1ef      	cbz	r7, 40526a <__multiply+0xaa>
  40522e:	2100      	movs	r1, #0
  405230:	464d      	mov	r5, r9
  405232:	465e      	mov	r6, fp
  405234:	460c      	mov	r4, r1
  405236:	f856 2b04 	ldr.w	r2, [r6], #4
  40523a:	6828      	ldr	r0, [r5, #0]
  40523c:	b293      	uxth	r3, r2
  40523e:	b281      	uxth	r1, r0
  405240:	fb07 1303 	mla	r3, r7, r3, r1
  405244:	0c12      	lsrs	r2, r2, #16
  405246:	0c01      	lsrs	r1, r0, #16
  405248:	4423      	add	r3, r4
  40524a:	fb07 1102 	mla	r1, r7, r2, r1
  40524e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405252:	b29b      	uxth	r3, r3
  405254:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405258:	45b6      	cmp	lr, r6
  40525a:	f845 3b04 	str.w	r3, [r5], #4
  40525e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405262:	d8e8      	bhi.n	405236 <__multiply+0x76>
  405264:	602c      	str	r4, [r5, #0]
  405266:	f8dc 5000 	ldr.w	r5, [ip]
  40526a:	0c2d      	lsrs	r5, r5, #16
  40526c:	d01d      	beq.n	4052aa <__multiply+0xea>
  40526e:	f8d9 3000 	ldr.w	r3, [r9]
  405272:	4648      	mov	r0, r9
  405274:	461c      	mov	r4, r3
  405276:	4659      	mov	r1, fp
  405278:	2200      	movs	r2, #0
  40527a:	880e      	ldrh	r6, [r1, #0]
  40527c:	0c24      	lsrs	r4, r4, #16
  40527e:	fb05 4406 	mla	r4, r5, r6, r4
  405282:	4422      	add	r2, r4
  405284:	b29b      	uxth	r3, r3
  405286:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40528a:	f840 3b04 	str.w	r3, [r0], #4
  40528e:	f851 3b04 	ldr.w	r3, [r1], #4
  405292:	6804      	ldr	r4, [r0, #0]
  405294:	0c1b      	lsrs	r3, r3, #16
  405296:	b2a6      	uxth	r6, r4
  405298:	fb05 6303 	mla	r3, r5, r3, r6
  40529c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  4052a0:	458e      	cmp	lr, r1
  4052a2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  4052a6:	d8e8      	bhi.n	40527a <__multiply+0xba>
  4052a8:	6003      	str	r3, [r0, #0]
  4052aa:	f10c 0c04 	add.w	ip, ip, #4
  4052ae:	45e2      	cmp	sl, ip
  4052b0:	f109 0904 	add.w	r9, r9, #4
  4052b4:	d8b7      	bhi.n	405226 <__multiply+0x66>
  4052b6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4052ba:	f1b8 0f00 	cmp.w	r8, #0
  4052be:	dd0b      	ble.n	4052d8 <__multiply+0x118>
  4052c0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4052c4:	f1aa 0a04 	sub.w	sl, sl, #4
  4052c8:	b11b      	cbz	r3, 4052d2 <__multiply+0x112>
  4052ca:	e005      	b.n	4052d8 <__multiply+0x118>
  4052cc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4052d0:	b913      	cbnz	r3, 4052d8 <__multiply+0x118>
  4052d2:	f1b8 0801 	subs.w	r8, r8, #1
  4052d6:	d1f9      	bne.n	4052cc <__multiply+0x10c>
  4052d8:	9800      	ldr	r0, [sp, #0]
  4052da:	f8c0 8010 	str.w	r8, [r0, #16]
  4052de:	b003      	add	sp, #12
  4052e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004052e4 <__pow5mult>:
  4052e4:	f012 0303 	ands.w	r3, r2, #3
  4052e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4052ec:	4614      	mov	r4, r2
  4052ee:	4607      	mov	r7, r0
  4052f0:	d12e      	bne.n	405350 <__pow5mult+0x6c>
  4052f2:	460d      	mov	r5, r1
  4052f4:	10a4      	asrs	r4, r4, #2
  4052f6:	d01c      	beq.n	405332 <__pow5mult+0x4e>
  4052f8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  4052fa:	b396      	cbz	r6, 405362 <__pow5mult+0x7e>
  4052fc:	07e3      	lsls	r3, r4, #31
  4052fe:	f04f 0800 	mov.w	r8, #0
  405302:	d406      	bmi.n	405312 <__pow5mult+0x2e>
  405304:	1064      	asrs	r4, r4, #1
  405306:	d014      	beq.n	405332 <__pow5mult+0x4e>
  405308:	6830      	ldr	r0, [r6, #0]
  40530a:	b1a8      	cbz	r0, 405338 <__pow5mult+0x54>
  40530c:	4606      	mov	r6, r0
  40530e:	07e3      	lsls	r3, r4, #31
  405310:	d5f8      	bpl.n	405304 <__pow5mult+0x20>
  405312:	4632      	mov	r2, r6
  405314:	4629      	mov	r1, r5
  405316:	4638      	mov	r0, r7
  405318:	f7ff ff52 	bl	4051c0 <__multiply>
  40531c:	b1b5      	cbz	r5, 40534c <__pow5mult+0x68>
  40531e:	686a      	ldr	r2, [r5, #4]
  405320:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405322:	1064      	asrs	r4, r4, #1
  405324:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405328:	6029      	str	r1, [r5, #0]
  40532a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40532e:	4605      	mov	r5, r0
  405330:	d1ea      	bne.n	405308 <__pow5mult+0x24>
  405332:	4628      	mov	r0, r5
  405334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405338:	4632      	mov	r2, r6
  40533a:	4631      	mov	r1, r6
  40533c:	4638      	mov	r0, r7
  40533e:	f7ff ff3f 	bl	4051c0 <__multiply>
  405342:	6030      	str	r0, [r6, #0]
  405344:	f8c0 8000 	str.w	r8, [r0]
  405348:	4606      	mov	r6, r0
  40534a:	e7e0      	b.n	40530e <__pow5mult+0x2a>
  40534c:	4605      	mov	r5, r0
  40534e:	e7d9      	b.n	405304 <__pow5mult+0x20>
  405350:	1e5a      	subs	r2, r3, #1
  405352:	4d0b      	ldr	r5, [pc, #44]	; (405380 <__pow5mult+0x9c>)
  405354:	2300      	movs	r3, #0
  405356:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40535a:	f7ff fe97 	bl	40508c <__multadd>
  40535e:	4605      	mov	r5, r0
  405360:	e7c8      	b.n	4052f4 <__pow5mult+0x10>
  405362:	2101      	movs	r1, #1
  405364:	4638      	mov	r0, r7
  405366:	f7ff fe61 	bl	40502c <_Balloc>
  40536a:	f240 2171 	movw	r1, #625	; 0x271
  40536e:	2201      	movs	r2, #1
  405370:	2300      	movs	r3, #0
  405372:	6141      	str	r1, [r0, #20]
  405374:	6102      	str	r2, [r0, #16]
  405376:	4606      	mov	r6, r0
  405378:	64b8      	str	r0, [r7, #72]	; 0x48
  40537a:	6003      	str	r3, [r0, #0]
  40537c:	e7be      	b.n	4052fc <__pow5mult+0x18>
  40537e:	bf00      	nop
  405380:	00406fa8 	.word	0x00406fa8

00405384 <__lshift>:
  405384:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405388:	4691      	mov	r9, r2
  40538a:	690a      	ldr	r2, [r1, #16]
  40538c:	688b      	ldr	r3, [r1, #8]
  40538e:	ea4f 1469 	mov.w	r4, r9, asr #5
  405392:	eb04 0802 	add.w	r8, r4, r2
  405396:	f108 0501 	add.w	r5, r8, #1
  40539a:	429d      	cmp	r5, r3
  40539c:	460e      	mov	r6, r1
  40539e:	4607      	mov	r7, r0
  4053a0:	6849      	ldr	r1, [r1, #4]
  4053a2:	dd04      	ble.n	4053ae <__lshift+0x2a>
  4053a4:	005b      	lsls	r3, r3, #1
  4053a6:	429d      	cmp	r5, r3
  4053a8:	f101 0101 	add.w	r1, r1, #1
  4053ac:	dcfa      	bgt.n	4053a4 <__lshift+0x20>
  4053ae:	4638      	mov	r0, r7
  4053b0:	f7ff fe3c 	bl	40502c <_Balloc>
  4053b4:	2c00      	cmp	r4, #0
  4053b6:	f100 0314 	add.w	r3, r0, #20
  4053ba:	dd06      	ble.n	4053ca <__lshift+0x46>
  4053bc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4053c0:	2100      	movs	r1, #0
  4053c2:	f843 1b04 	str.w	r1, [r3], #4
  4053c6:	429a      	cmp	r2, r3
  4053c8:	d1fb      	bne.n	4053c2 <__lshift+0x3e>
  4053ca:	6934      	ldr	r4, [r6, #16]
  4053cc:	f106 0114 	add.w	r1, r6, #20
  4053d0:	f019 091f 	ands.w	r9, r9, #31
  4053d4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4053d8:	d01d      	beq.n	405416 <__lshift+0x92>
  4053da:	f1c9 0c20 	rsb	ip, r9, #32
  4053de:	2200      	movs	r2, #0
  4053e0:	680c      	ldr	r4, [r1, #0]
  4053e2:	fa04 f409 	lsl.w	r4, r4, r9
  4053e6:	4314      	orrs	r4, r2
  4053e8:	f843 4b04 	str.w	r4, [r3], #4
  4053ec:	f851 2b04 	ldr.w	r2, [r1], #4
  4053f0:	458e      	cmp	lr, r1
  4053f2:	fa22 f20c 	lsr.w	r2, r2, ip
  4053f6:	d8f3      	bhi.n	4053e0 <__lshift+0x5c>
  4053f8:	601a      	str	r2, [r3, #0]
  4053fa:	b10a      	cbz	r2, 405400 <__lshift+0x7c>
  4053fc:	f108 0502 	add.w	r5, r8, #2
  405400:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405402:	6872      	ldr	r2, [r6, #4]
  405404:	3d01      	subs	r5, #1
  405406:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40540a:	6105      	str	r5, [r0, #16]
  40540c:	6031      	str	r1, [r6, #0]
  40540e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405412:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405416:	3b04      	subs	r3, #4
  405418:	f851 2b04 	ldr.w	r2, [r1], #4
  40541c:	f843 2f04 	str.w	r2, [r3, #4]!
  405420:	458e      	cmp	lr, r1
  405422:	d8f9      	bhi.n	405418 <__lshift+0x94>
  405424:	e7ec      	b.n	405400 <__lshift+0x7c>
  405426:	bf00      	nop

00405428 <__mcmp>:
  405428:	b430      	push	{r4, r5}
  40542a:	690b      	ldr	r3, [r1, #16]
  40542c:	4605      	mov	r5, r0
  40542e:	6900      	ldr	r0, [r0, #16]
  405430:	1ac0      	subs	r0, r0, r3
  405432:	d10f      	bne.n	405454 <__mcmp+0x2c>
  405434:	009b      	lsls	r3, r3, #2
  405436:	3514      	adds	r5, #20
  405438:	3114      	adds	r1, #20
  40543a:	4419      	add	r1, r3
  40543c:	442b      	add	r3, r5
  40543e:	e001      	b.n	405444 <__mcmp+0x1c>
  405440:	429d      	cmp	r5, r3
  405442:	d207      	bcs.n	405454 <__mcmp+0x2c>
  405444:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405448:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40544c:	4294      	cmp	r4, r2
  40544e:	d0f7      	beq.n	405440 <__mcmp+0x18>
  405450:	d302      	bcc.n	405458 <__mcmp+0x30>
  405452:	2001      	movs	r0, #1
  405454:	bc30      	pop	{r4, r5}
  405456:	4770      	bx	lr
  405458:	f04f 30ff 	mov.w	r0, #4294967295
  40545c:	e7fa      	b.n	405454 <__mcmp+0x2c>
  40545e:	bf00      	nop

00405460 <__mdiff>:
  405460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405464:	690f      	ldr	r7, [r1, #16]
  405466:	460e      	mov	r6, r1
  405468:	6911      	ldr	r1, [r2, #16]
  40546a:	1a7f      	subs	r7, r7, r1
  40546c:	2f00      	cmp	r7, #0
  40546e:	4690      	mov	r8, r2
  405470:	d117      	bne.n	4054a2 <__mdiff+0x42>
  405472:	0089      	lsls	r1, r1, #2
  405474:	f106 0514 	add.w	r5, r6, #20
  405478:	f102 0e14 	add.w	lr, r2, #20
  40547c:	186b      	adds	r3, r5, r1
  40547e:	4471      	add	r1, lr
  405480:	e001      	b.n	405486 <__mdiff+0x26>
  405482:	429d      	cmp	r5, r3
  405484:	d25c      	bcs.n	405540 <__mdiff+0xe0>
  405486:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40548a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40548e:	42a2      	cmp	r2, r4
  405490:	d0f7      	beq.n	405482 <__mdiff+0x22>
  405492:	d25e      	bcs.n	405552 <__mdiff+0xf2>
  405494:	4633      	mov	r3, r6
  405496:	462c      	mov	r4, r5
  405498:	4646      	mov	r6, r8
  40549a:	4675      	mov	r5, lr
  40549c:	4698      	mov	r8, r3
  40549e:	2701      	movs	r7, #1
  4054a0:	e005      	b.n	4054ae <__mdiff+0x4e>
  4054a2:	db58      	blt.n	405556 <__mdiff+0xf6>
  4054a4:	f106 0514 	add.w	r5, r6, #20
  4054a8:	f108 0414 	add.w	r4, r8, #20
  4054ac:	2700      	movs	r7, #0
  4054ae:	6871      	ldr	r1, [r6, #4]
  4054b0:	f7ff fdbc 	bl	40502c <_Balloc>
  4054b4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4054b8:	6936      	ldr	r6, [r6, #16]
  4054ba:	60c7      	str	r7, [r0, #12]
  4054bc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4054c0:	46a6      	mov	lr, r4
  4054c2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4054c6:	f100 0414 	add.w	r4, r0, #20
  4054ca:	2300      	movs	r3, #0
  4054cc:	f85e 1b04 	ldr.w	r1, [lr], #4
  4054d0:	f855 8b04 	ldr.w	r8, [r5], #4
  4054d4:	b28a      	uxth	r2, r1
  4054d6:	fa13 f388 	uxtah	r3, r3, r8
  4054da:	0c09      	lsrs	r1, r1, #16
  4054dc:	1a9a      	subs	r2, r3, r2
  4054de:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4054e2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4054e6:	b292      	uxth	r2, r2
  4054e8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4054ec:	45f4      	cmp	ip, lr
  4054ee:	f844 2b04 	str.w	r2, [r4], #4
  4054f2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4054f6:	d8e9      	bhi.n	4054cc <__mdiff+0x6c>
  4054f8:	42af      	cmp	r7, r5
  4054fa:	d917      	bls.n	40552c <__mdiff+0xcc>
  4054fc:	46a4      	mov	ip, r4
  4054fe:	46ae      	mov	lr, r5
  405500:	f85e 2b04 	ldr.w	r2, [lr], #4
  405504:	fa13 f382 	uxtah	r3, r3, r2
  405508:	1419      	asrs	r1, r3, #16
  40550a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40550e:	b29b      	uxth	r3, r3
  405510:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405514:	4577      	cmp	r7, lr
  405516:	f84c 2b04 	str.w	r2, [ip], #4
  40551a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40551e:	d8ef      	bhi.n	405500 <__mdiff+0xa0>
  405520:	43ed      	mvns	r5, r5
  405522:	442f      	add	r7, r5
  405524:	f027 0703 	bic.w	r7, r7, #3
  405528:	3704      	adds	r7, #4
  40552a:	443c      	add	r4, r7
  40552c:	3c04      	subs	r4, #4
  40552e:	b922      	cbnz	r2, 40553a <__mdiff+0xda>
  405530:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405534:	3e01      	subs	r6, #1
  405536:	2b00      	cmp	r3, #0
  405538:	d0fa      	beq.n	405530 <__mdiff+0xd0>
  40553a:	6106      	str	r6, [r0, #16]
  40553c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405540:	2100      	movs	r1, #0
  405542:	f7ff fd73 	bl	40502c <_Balloc>
  405546:	2201      	movs	r2, #1
  405548:	2300      	movs	r3, #0
  40554a:	6102      	str	r2, [r0, #16]
  40554c:	6143      	str	r3, [r0, #20]
  40554e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405552:	4674      	mov	r4, lr
  405554:	e7ab      	b.n	4054ae <__mdiff+0x4e>
  405556:	4633      	mov	r3, r6
  405558:	f106 0414 	add.w	r4, r6, #20
  40555c:	f102 0514 	add.w	r5, r2, #20
  405560:	4616      	mov	r6, r2
  405562:	2701      	movs	r7, #1
  405564:	4698      	mov	r8, r3
  405566:	e7a2      	b.n	4054ae <__mdiff+0x4e>

00405568 <__d2b>:
  405568:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40556c:	b082      	sub	sp, #8
  40556e:	2101      	movs	r1, #1
  405570:	461c      	mov	r4, r3
  405572:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405576:	4615      	mov	r5, r2
  405578:	9e08      	ldr	r6, [sp, #32]
  40557a:	f7ff fd57 	bl	40502c <_Balloc>
  40557e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405582:	4680      	mov	r8, r0
  405584:	b10f      	cbz	r7, 40558a <__d2b+0x22>
  405586:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40558a:	9401      	str	r4, [sp, #4]
  40558c:	b31d      	cbz	r5, 4055d6 <__d2b+0x6e>
  40558e:	a802      	add	r0, sp, #8
  405590:	f840 5d08 	str.w	r5, [r0, #-8]!
  405594:	f7ff fdda 	bl	40514c <__lo0bits>
  405598:	2800      	cmp	r0, #0
  40559a:	d134      	bne.n	405606 <__d2b+0x9e>
  40559c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4055a0:	f8c8 2014 	str.w	r2, [r8, #20]
  4055a4:	2b00      	cmp	r3, #0
  4055a6:	bf0c      	ite	eq
  4055a8:	2101      	moveq	r1, #1
  4055aa:	2102      	movne	r1, #2
  4055ac:	f8c8 3018 	str.w	r3, [r8, #24]
  4055b0:	f8c8 1010 	str.w	r1, [r8, #16]
  4055b4:	b9df      	cbnz	r7, 4055ee <__d2b+0x86>
  4055b6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4055ba:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4055be:	6030      	str	r0, [r6, #0]
  4055c0:	6918      	ldr	r0, [r3, #16]
  4055c2:	f7ff fda3 	bl	40510c <__hi0bits>
  4055c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4055c8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4055cc:	6018      	str	r0, [r3, #0]
  4055ce:	4640      	mov	r0, r8
  4055d0:	b002      	add	sp, #8
  4055d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4055d6:	a801      	add	r0, sp, #4
  4055d8:	f7ff fdb8 	bl	40514c <__lo0bits>
  4055dc:	9b01      	ldr	r3, [sp, #4]
  4055de:	f8c8 3014 	str.w	r3, [r8, #20]
  4055e2:	2101      	movs	r1, #1
  4055e4:	3020      	adds	r0, #32
  4055e6:	f8c8 1010 	str.w	r1, [r8, #16]
  4055ea:	2f00      	cmp	r7, #0
  4055ec:	d0e3      	beq.n	4055b6 <__d2b+0x4e>
  4055ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4055f0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4055f4:	4407      	add	r7, r0
  4055f6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4055fa:	6037      	str	r7, [r6, #0]
  4055fc:	6018      	str	r0, [r3, #0]
  4055fe:	4640      	mov	r0, r8
  405600:	b002      	add	sp, #8
  405602:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405606:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40560a:	f1c0 0220 	rsb	r2, r0, #32
  40560e:	fa03 f202 	lsl.w	r2, r3, r2
  405612:	430a      	orrs	r2, r1
  405614:	40c3      	lsrs	r3, r0
  405616:	9301      	str	r3, [sp, #4]
  405618:	f8c8 2014 	str.w	r2, [r8, #20]
  40561c:	e7c2      	b.n	4055a4 <__d2b+0x3c>
  40561e:	bf00      	nop

00405620 <_sbrk_r>:
  405620:	b538      	push	{r3, r4, r5, lr}
  405622:	4c07      	ldr	r4, [pc, #28]	; (405640 <_sbrk_r+0x20>)
  405624:	2300      	movs	r3, #0
  405626:	4605      	mov	r5, r0
  405628:	4608      	mov	r0, r1
  40562a:	6023      	str	r3, [r4, #0]
  40562c:	f7fb ff96 	bl	40155c <_sbrk>
  405630:	1c43      	adds	r3, r0, #1
  405632:	d000      	beq.n	405636 <_sbrk_r+0x16>
  405634:	bd38      	pop	{r3, r4, r5, pc}
  405636:	6823      	ldr	r3, [r4, #0]
  405638:	2b00      	cmp	r3, #0
  40563a:	d0fb      	beq.n	405634 <_sbrk_r+0x14>
  40563c:	602b      	str	r3, [r5, #0]
  40563e:	bd38      	pop	{r3, r4, r5, pc}
  405640:	20400d54 	.word	0x20400d54
	...

00405680 <strlen>:
  405680:	f890 f000 	pld	[r0]
  405684:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405688:	f020 0107 	bic.w	r1, r0, #7
  40568c:	f06f 0c00 	mvn.w	ip, #0
  405690:	f010 0407 	ands.w	r4, r0, #7
  405694:	f891 f020 	pld	[r1, #32]
  405698:	f040 8049 	bne.w	40572e <strlen+0xae>
  40569c:	f04f 0400 	mov.w	r4, #0
  4056a0:	f06f 0007 	mvn.w	r0, #7
  4056a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4056a8:	f891 f040 	pld	[r1, #64]	; 0x40
  4056ac:	f100 0008 	add.w	r0, r0, #8
  4056b0:	fa82 f24c 	uadd8	r2, r2, ip
  4056b4:	faa4 f28c 	sel	r2, r4, ip
  4056b8:	fa83 f34c 	uadd8	r3, r3, ip
  4056bc:	faa2 f38c 	sel	r3, r2, ip
  4056c0:	bb4b      	cbnz	r3, 405716 <strlen+0x96>
  4056c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  4056c6:	fa82 f24c 	uadd8	r2, r2, ip
  4056ca:	f100 0008 	add.w	r0, r0, #8
  4056ce:	faa4 f28c 	sel	r2, r4, ip
  4056d2:	fa83 f34c 	uadd8	r3, r3, ip
  4056d6:	faa2 f38c 	sel	r3, r2, ip
  4056da:	b9e3      	cbnz	r3, 405716 <strlen+0x96>
  4056dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4056e0:	fa82 f24c 	uadd8	r2, r2, ip
  4056e4:	f100 0008 	add.w	r0, r0, #8
  4056e8:	faa4 f28c 	sel	r2, r4, ip
  4056ec:	fa83 f34c 	uadd8	r3, r3, ip
  4056f0:	faa2 f38c 	sel	r3, r2, ip
  4056f4:	b97b      	cbnz	r3, 405716 <strlen+0x96>
  4056f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4056fa:	f101 0120 	add.w	r1, r1, #32
  4056fe:	fa82 f24c 	uadd8	r2, r2, ip
  405702:	f100 0008 	add.w	r0, r0, #8
  405706:	faa4 f28c 	sel	r2, r4, ip
  40570a:	fa83 f34c 	uadd8	r3, r3, ip
  40570e:	faa2 f38c 	sel	r3, r2, ip
  405712:	2b00      	cmp	r3, #0
  405714:	d0c6      	beq.n	4056a4 <strlen+0x24>
  405716:	2a00      	cmp	r2, #0
  405718:	bf04      	itt	eq
  40571a:	3004      	addeq	r0, #4
  40571c:	461a      	moveq	r2, r3
  40571e:	ba12      	rev	r2, r2
  405720:	fab2 f282 	clz	r2, r2
  405724:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405728:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40572c:	4770      	bx	lr
  40572e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405732:	f004 0503 	and.w	r5, r4, #3
  405736:	f1c4 0000 	rsb	r0, r4, #0
  40573a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40573e:	f014 0f04 	tst.w	r4, #4
  405742:	f891 f040 	pld	[r1, #64]	; 0x40
  405746:	fa0c f505 	lsl.w	r5, ip, r5
  40574a:	ea62 0205 	orn	r2, r2, r5
  40574e:	bf1c      	itt	ne
  405750:	ea63 0305 	ornne	r3, r3, r5
  405754:	4662      	movne	r2, ip
  405756:	f04f 0400 	mov.w	r4, #0
  40575a:	e7a9      	b.n	4056b0 <strlen+0x30>

0040575c <__ssprint_r>:
  40575c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405760:	6893      	ldr	r3, [r2, #8]
  405762:	b083      	sub	sp, #12
  405764:	4690      	mov	r8, r2
  405766:	2b00      	cmp	r3, #0
  405768:	d070      	beq.n	40584c <__ssprint_r+0xf0>
  40576a:	4682      	mov	sl, r0
  40576c:	460c      	mov	r4, r1
  40576e:	6817      	ldr	r7, [r2, #0]
  405770:	688d      	ldr	r5, [r1, #8]
  405772:	6808      	ldr	r0, [r1, #0]
  405774:	e042      	b.n	4057fc <__ssprint_r+0xa0>
  405776:	89a3      	ldrh	r3, [r4, #12]
  405778:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40577c:	d02e      	beq.n	4057dc <__ssprint_r+0x80>
  40577e:	6965      	ldr	r5, [r4, #20]
  405780:	6921      	ldr	r1, [r4, #16]
  405782:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405786:	eba0 0b01 	sub.w	fp, r0, r1
  40578a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40578e:	f10b 0001 	add.w	r0, fp, #1
  405792:	106d      	asrs	r5, r5, #1
  405794:	4430      	add	r0, r6
  405796:	42a8      	cmp	r0, r5
  405798:	462a      	mov	r2, r5
  40579a:	bf84      	itt	hi
  40579c:	4605      	movhi	r5, r0
  40579e:	462a      	movhi	r2, r5
  4057a0:	055b      	lsls	r3, r3, #21
  4057a2:	d538      	bpl.n	405816 <__ssprint_r+0xba>
  4057a4:	4611      	mov	r1, r2
  4057a6:	4650      	mov	r0, sl
  4057a8:	f7ff f894 	bl	4048d4 <_malloc_r>
  4057ac:	2800      	cmp	r0, #0
  4057ae:	d03c      	beq.n	40582a <__ssprint_r+0xce>
  4057b0:	465a      	mov	r2, fp
  4057b2:	6921      	ldr	r1, [r4, #16]
  4057b4:	9001      	str	r0, [sp, #4]
  4057b6:	f7ff fb93 	bl	404ee0 <memcpy>
  4057ba:	89a2      	ldrh	r2, [r4, #12]
  4057bc:	9b01      	ldr	r3, [sp, #4]
  4057be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4057c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4057c6:	81a2      	strh	r2, [r4, #12]
  4057c8:	eba5 020b 	sub.w	r2, r5, fp
  4057cc:	eb03 000b 	add.w	r0, r3, fp
  4057d0:	6165      	str	r5, [r4, #20]
  4057d2:	6123      	str	r3, [r4, #16]
  4057d4:	6020      	str	r0, [r4, #0]
  4057d6:	60a2      	str	r2, [r4, #8]
  4057d8:	4635      	mov	r5, r6
  4057da:	46b3      	mov	fp, r6
  4057dc:	465a      	mov	r2, fp
  4057de:	4649      	mov	r1, r9
  4057e0:	f000 fa18 	bl	405c14 <memmove>
  4057e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4057e8:	68a2      	ldr	r2, [r4, #8]
  4057ea:	6820      	ldr	r0, [r4, #0]
  4057ec:	1b55      	subs	r5, r2, r5
  4057ee:	4458      	add	r0, fp
  4057f0:	1b9e      	subs	r6, r3, r6
  4057f2:	60a5      	str	r5, [r4, #8]
  4057f4:	6020      	str	r0, [r4, #0]
  4057f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4057fa:	b33e      	cbz	r6, 40584c <__ssprint_r+0xf0>
  4057fc:	687e      	ldr	r6, [r7, #4]
  4057fe:	463b      	mov	r3, r7
  405800:	3708      	adds	r7, #8
  405802:	2e00      	cmp	r6, #0
  405804:	d0fa      	beq.n	4057fc <__ssprint_r+0xa0>
  405806:	42ae      	cmp	r6, r5
  405808:	f8d3 9000 	ldr.w	r9, [r3]
  40580c:	46ab      	mov	fp, r5
  40580e:	d2b2      	bcs.n	405776 <__ssprint_r+0x1a>
  405810:	4635      	mov	r5, r6
  405812:	46b3      	mov	fp, r6
  405814:	e7e2      	b.n	4057dc <__ssprint_r+0x80>
  405816:	4650      	mov	r0, sl
  405818:	f000 fa60 	bl	405cdc <_realloc_r>
  40581c:	4603      	mov	r3, r0
  40581e:	2800      	cmp	r0, #0
  405820:	d1d2      	bne.n	4057c8 <__ssprint_r+0x6c>
  405822:	6921      	ldr	r1, [r4, #16]
  405824:	4650      	mov	r0, sl
  405826:	f000 f8f9 	bl	405a1c <_free_r>
  40582a:	230c      	movs	r3, #12
  40582c:	f8ca 3000 	str.w	r3, [sl]
  405830:	89a3      	ldrh	r3, [r4, #12]
  405832:	2200      	movs	r2, #0
  405834:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405838:	f04f 30ff 	mov.w	r0, #4294967295
  40583c:	81a3      	strh	r3, [r4, #12]
  40583e:	f8c8 2008 	str.w	r2, [r8, #8]
  405842:	f8c8 2004 	str.w	r2, [r8, #4]
  405846:	b003      	add	sp, #12
  405848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40584c:	2000      	movs	r0, #0
  40584e:	f8c8 0004 	str.w	r0, [r8, #4]
  405852:	b003      	add	sp, #12
  405854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405858 <__register_exitproc>:
  405858:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40585c:	4d2c      	ldr	r5, [pc, #176]	; (405910 <__register_exitproc+0xb8>)
  40585e:	4606      	mov	r6, r0
  405860:	6828      	ldr	r0, [r5, #0]
  405862:	4698      	mov	r8, r3
  405864:	460f      	mov	r7, r1
  405866:	4691      	mov	r9, r2
  405868:	f7ff f830 	bl	4048cc <__retarget_lock_acquire_recursive>
  40586c:	4b29      	ldr	r3, [pc, #164]	; (405914 <__register_exitproc+0xbc>)
  40586e:	681c      	ldr	r4, [r3, #0]
  405870:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405874:	2b00      	cmp	r3, #0
  405876:	d03e      	beq.n	4058f6 <__register_exitproc+0x9e>
  405878:	685a      	ldr	r2, [r3, #4]
  40587a:	2a1f      	cmp	r2, #31
  40587c:	dc1c      	bgt.n	4058b8 <__register_exitproc+0x60>
  40587e:	f102 0e01 	add.w	lr, r2, #1
  405882:	b176      	cbz	r6, 4058a2 <__register_exitproc+0x4a>
  405884:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405888:	2401      	movs	r4, #1
  40588a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40588e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405892:	4094      	lsls	r4, r2
  405894:	4320      	orrs	r0, r4
  405896:	2e02      	cmp	r6, #2
  405898:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40589c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4058a0:	d023      	beq.n	4058ea <__register_exitproc+0x92>
  4058a2:	3202      	adds	r2, #2
  4058a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4058a8:	6828      	ldr	r0, [r5, #0]
  4058aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4058ae:	f7ff f80f 	bl	4048d0 <__retarget_lock_release_recursive>
  4058b2:	2000      	movs	r0, #0
  4058b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4058b8:	4b17      	ldr	r3, [pc, #92]	; (405918 <__register_exitproc+0xc0>)
  4058ba:	b30b      	cbz	r3, 405900 <__register_exitproc+0xa8>
  4058bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4058c0:	f3af 8000 	nop.w
  4058c4:	4603      	mov	r3, r0
  4058c6:	b1d8      	cbz	r0, 405900 <__register_exitproc+0xa8>
  4058c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4058cc:	6002      	str	r2, [r0, #0]
  4058ce:	2100      	movs	r1, #0
  4058d0:	6041      	str	r1, [r0, #4]
  4058d2:	460a      	mov	r2, r1
  4058d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4058d8:	f04f 0e01 	mov.w	lr, #1
  4058dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4058e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4058e4:	2e00      	cmp	r6, #0
  4058e6:	d0dc      	beq.n	4058a2 <__register_exitproc+0x4a>
  4058e8:	e7cc      	b.n	405884 <__register_exitproc+0x2c>
  4058ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4058ee:	430c      	orrs	r4, r1
  4058f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4058f4:	e7d5      	b.n	4058a2 <__register_exitproc+0x4a>
  4058f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4058fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4058fe:	e7bb      	b.n	405878 <__register_exitproc+0x20>
  405900:	6828      	ldr	r0, [r5, #0]
  405902:	f7fe ffe5 	bl	4048d0 <__retarget_lock_release_recursive>
  405906:	f04f 30ff 	mov.w	r0, #4294967295
  40590a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40590e:	bf00      	nop
  405910:	20400450 	.word	0x20400450
  405914:	00406e3c 	.word	0x00406e3c
  405918:	00000000 	.word	0x00000000

0040591c <_calloc_r>:
  40591c:	b510      	push	{r4, lr}
  40591e:	fb02 f101 	mul.w	r1, r2, r1
  405922:	f7fe ffd7 	bl	4048d4 <_malloc_r>
  405926:	4604      	mov	r4, r0
  405928:	b1d8      	cbz	r0, 405962 <_calloc_r+0x46>
  40592a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40592e:	f022 0203 	bic.w	r2, r2, #3
  405932:	3a04      	subs	r2, #4
  405934:	2a24      	cmp	r2, #36	; 0x24
  405936:	d818      	bhi.n	40596a <_calloc_r+0x4e>
  405938:	2a13      	cmp	r2, #19
  40593a:	d914      	bls.n	405966 <_calloc_r+0x4a>
  40593c:	2300      	movs	r3, #0
  40593e:	2a1b      	cmp	r2, #27
  405940:	6003      	str	r3, [r0, #0]
  405942:	6043      	str	r3, [r0, #4]
  405944:	d916      	bls.n	405974 <_calloc_r+0x58>
  405946:	2a24      	cmp	r2, #36	; 0x24
  405948:	6083      	str	r3, [r0, #8]
  40594a:	60c3      	str	r3, [r0, #12]
  40594c:	bf11      	iteee	ne
  40594e:	f100 0210 	addne.w	r2, r0, #16
  405952:	6103      	streq	r3, [r0, #16]
  405954:	6143      	streq	r3, [r0, #20]
  405956:	f100 0218 	addeq.w	r2, r0, #24
  40595a:	2300      	movs	r3, #0
  40595c:	6013      	str	r3, [r2, #0]
  40595e:	6053      	str	r3, [r2, #4]
  405960:	6093      	str	r3, [r2, #8]
  405962:	4620      	mov	r0, r4
  405964:	bd10      	pop	{r4, pc}
  405966:	4602      	mov	r2, r0
  405968:	e7f7      	b.n	40595a <_calloc_r+0x3e>
  40596a:	2100      	movs	r1, #0
  40596c:	f7fc fd16 	bl	40239c <memset>
  405970:	4620      	mov	r0, r4
  405972:	bd10      	pop	{r4, pc}
  405974:	f100 0208 	add.w	r2, r0, #8
  405978:	e7ef      	b.n	40595a <_calloc_r+0x3e>
  40597a:	bf00      	nop

0040597c <_malloc_trim_r>:
  40597c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40597e:	4f24      	ldr	r7, [pc, #144]	; (405a10 <_malloc_trim_r+0x94>)
  405980:	460c      	mov	r4, r1
  405982:	4606      	mov	r6, r0
  405984:	f7ff fb46 	bl	405014 <__malloc_lock>
  405988:	68bb      	ldr	r3, [r7, #8]
  40598a:	685d      	ldr	r5, [r3, #4]
  40598c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405990:	310f      	adds	r1, #15
  405992:	f025 0503 	bic.w	r5, r5, #3
  405996:	4429      	add	r1, r5
  405998:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40599c:	f021 010f 	bic.w	r1, r1, #15
  4059a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4059a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4059a8:	db07      	blt.n	4059ba <_malloc_trim_r+0x3e>
  4059aa:	2100      	movs	r1, #0
  4059ac:	4630      	mov	r0, r6
  4059ae:	f7ff fe37 	bl	405620 <_sbrk_r>
  4059b2:	68bb      	ldr	r3, [r7, #8]
  4059b4:	442b      	add	r3, r5
  4059b6:	4298      	cmp	r0, r3
  4059b8:	d004      	beq.n	4059c4 <_malloc_trim_r+0x48>
  4059ba:	4630      	mov	r0, r6
  4059bc:	f7ff fb30 	bl	405020 <__malloc_unlock>
  4059c0:	2000      	movs	r0, #0
  4059c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4059c4:	4261      	negs	r1, r4
  4059c6:	4630      	mov	r0, r6
  4059c8:	f7ff fe2a 	bl	405620 <_sbrk_r>
  4059cc:	3001      	adds	r0, #1
  4059ce:	d00d      	beq.n	4059ec <_malloc_trim_r+0x70>
  4059d0:	4b10      	ldr	r3, [pc, #64]	; (405a14 <_malloc_trim_r+0x98>)
  4059d2:	68ba      	ldr	r2, [r7, #8]
  4059d4:	6819      	ldr	r1, [r3, #0]
  4059d6:	1b2d      	subs	r5, r5, r4
  4059d8:	f045 0501 	orr.w	r5, r5, #1
  4059dc:	4630      	mov	r0, r6
  4059de:	1b09      	subs	r1, r1, r4
  4059e0:	6055      	str	r5, [r2, #4]
  4059e2:	6019      	str	r1, [r3, #0]
  4059e4:	f7ff fb1c 	bl	405020 <__malloc_unlock>
  4059e8:	2001      	movs	r0, #1
  4059ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4059ec:	2100      	movs	r1, #0
  4059ee:	4630      	mov	r0, r6
  4059f0:	f7ff fe16 	bl	405620 <_sbrk_r>
  4059f4:	68ba      	ldr	r2, [r7, #8]
  4059f6:	1a83      	subs	r3, r0, r2
  4059f8:	2b0f      	cmp	r3, #15
  4059fa:	ddde      	ble.n	4059ba <_malloc_trim_r+0x3e>
  4059fc:	4c06      	ldr	r4, [pc, #24]	; (405a18 <_malloc_trim_r+0x9c>)
  4059fe:	4905      	ldr	r1, [pc, #20]	; (405a14 <_malloc_trim_r+0x98>)
  405a00:	6824      	ldr	r4, [r4, #0]
  405a02:	f043 0301 	orr.w	r3, r3, #1
  405a06:	1b00      	subs	r0, r0, r4
  405a08:	6053      	str	r3, [r2, #4]
  405a0a:	6008      	str	r0, [r1, #0]
  405a0c:	e7d5      	b.n	4059ba <_malloc_trim_r+0x3e>
  405a0e:	bf00      	nop
  405a10:	20400454 	.word	0x20400454
  405a14:	20400c7c 	.word	0x20400c7c
  405a18:	2040085c 	.word	0x2040085c

00405a1c <_free_r>:
  405a1c:	2900      	cmp	r1, #0
  405a1e:	d044      	beq.n	405aaa <_free_r+0x8e>
  405a20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405a24:	460d      	mov	r5, r1
  405a26:	4680      	mov	r8, r0
  405a28:	f7ff faf4 	bl	405014 <__malloc_lock>
  405a2c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405a30:	4969      	ldr	r1, [pc, #420]	; (405bd8 <_free_r+0x1bc>)
  405a32:	f027 0301 	bic.w	r3, r7, #1
  405a36:	f1a5 0408 	sub.w	r4, r5, #8
  405a3a:	18e2      	adds	r2, r4, r3
  405a3c:	688e      	ldr	r6, [r1, #8]
  405a3e:	6850      	ldr	r0, [r2, #4]
  405a40:	42b2      	cmp	r2, r6
  405a42:	f020 0003 	bic.w	r0, r0, #3
  405a46:	d05e      	beq.n	405b06 <_free_r+0xea>
  405a48:	07fe      	lsls	r6, r7, #31
  405a4a:	6050      	str	r0, [r2, #4]
  405a4c:	d40b      	bmi.n	405a66 <_free_r+0x4a>
  405a4e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405a52:	1be4      	subs	r4, r4, r7
  405a54:	f101 0e08 	add.w	lr, r1, #8
  405a58:	68a5      	ldr	r5, [r4, #8]
  405a5a:	4575      	cmp	r5, lr
  405a5c:	443b      	add	r3, r7
  405a5e:	d06d      	beq.n	405b3c <_free_r+0x120>
  405a60:	68e7      	ldr	r7, [r4, #12]
  405a62:	60ef      	str	r7, [r5, #12]
  405a64:	60bd      	str	r5, [r7, #8]
  405a66:	1815      	adds	r5, r2, r0
  405a68:	686d      	ldr	r5, [r5, #4]
  405a6a:	07ed      	lsls	r5, r5, #31
  405a6c:	d53e      	bpl.n	405aec <_free_r+0xd0>
  405a6e:	f043 0201 	orr.w	r2, r3, #1
  405a72:	6062      	str	r2, [r4, #4]
  405a74:	50e3      	str	r3, [r4, r3]
  405a76:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405a7a:	d217      	bcs.n	405aac <_free_r+0x90>
  405a7c:	08db      	lsrs	r3, r3, #3
  405a7e:	1c58      	adds	r0, r3, #1
  405a80:	109a      	asrs	r2, r3, #2
  405a82:	684d      	ldr	r5, [r1, #4]
  405a84:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405a88:	60a7      	str	r7, [r4, #8]
  405a8a:	2301      	movs	r3, #1
  405a8c:	4093      	lsls	r3, r2
  405a8e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405a92:	432b      	orrs	r3, r5
  405a94:	3a08      	subs	r2, #8
  405a96:	60e2      	str	r2, [r4, #12]
  405a98:	604b      	str	r3, [r1, #4]
  405a9a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  405a9e:	60fc      	str	r4, [r7, #12]
  405aa0:	4640      	mov	r0, r8
  405aa2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405aa6:	f7ff babb 	b.w	405020 <__malloc_unlock>
  405aaa:	4770      	bx	lr
  405aac:	0a5a      	lsrs	r2, r3, #9
  405aae:	2a04      	cmp	r2, #4
  405ab0:	d852      	bhi.n	405b58 <_free_r+0x13c>
  405ab2:	099a      	lsrs	r2, r3, #6
  405ab4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405ab8:	00ff      	lsls	r7, r7, #3
  405aba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  405abe:	19c8      	adds	r0, r1, r7
  405ac0:	59ca      	ldr	r2, [r1, r7]
  405ac2:	3808      	subs	r0, #8
  405ac4:	4290      	cmp	r0, r2
  405ac6:	d04f      	beq.n	405b68 <_free_r+0x14c>
  405ac8:	6851      	ldr	r1, [r2, #4]
  405aca:	f021 0103 	bic.w	r1, r1, #3
  405ace:	428b      	cmp	r3, r1
  405ad0:	d232      	bcs.n	405b38 <_free_r+0x11c>
  405ad2:	6892      	ldr	r2, [r2, #8]
  405ad4:	4290      	cmp	r0, r2
  405ad6:	d1f7      	bne.n	405ac8 <_free_r+0xac>
  405ad8:	68c3      	ldr	r3, [r0, #12]
  405ada:	60a0      	str	r0, [r4, #8]
  405adc:	60e3      	str	r3, [r4, #12]
  405ade:	609c      	str	r4, [r3, #8]
  405ae0:	60c4      	str	r4, [r0, #12]
  405ae2:	4640      	mov	r0, r8
  405ae4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405ae8:	f7ff ba9a 	b.w	405020 <__malloc_unlock>
  405aec:	6895      	ldr	r5, [r2, #8]
  405aee:	4f3b      	ldr	r7, [pc, #236]	; (405bdc <_free_r+0x1c0>)
  405af0:	42bd      	cmp	r5, r7
  405af2:	4403      	add	r3, r0
  405af4:	d040      	beq.n	405b78 <_free_r+0x15c>
  405af6:	68d0      	ldr	r0, [r2, #12]
  405af8:	60e8      	str	r0, [r5, #12]
  405afa:	f043 0201 	orr.w	r2, r3, #1
  405afe:	6085      	str	r5, [r0, #8]
  405b00:	6062      	str	r2, [r4, #4]
  405b02:	50e3      	str	r3, [r4, r3]
  405b04:	e7b7      	b.n	405a76 <_free_r+0x5a>
  405b06:	07ff      	lsls	r7, r7, #31
  405b08:	4403      	add	r3, r0
  405b0a:	d407      	bmi.n	405b1c <_free_r+0x100>
  405b0c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405b10:	1aa4      	subs	r4, r4, r2
  405b12:	4413      	add	r3, r2
  405b14:	68a0      	ldr	r0, [r4, #8]
  405b16:	68e2      	ldr	r2, [r4, #12]
  405b18:	60c2      	str	r2, [r0, #12]
  405b1a:	6090      	str	r0, [r2, #8]
  405b1c:	4a30      	ldr	r2, [pc, #192]	; (405be0 <_free_r+0x1c4>)
  405b1e:	6812      	ldr	r2, [r2, #0]
  405b20:	f043 0001 	orr.w	r0, r3, #1
  405b24:	4293      	cmp	r3, r2
  405b26:	6060      	str	r0, [r4, #4]
  405b28:	608c      	str	r4, [r1, #8]
  405b2a:	d3b9      	bcc.n	405aa0 <_free_r+0x84>
  405b2c:	4b2d      	ldr	r3, [pc, #180]	; (405be4 <_free_r+0x1c8>)
  405b2e:	4640      	mov	r0, r8
  405b30:	6819      	ldr	r1, [r3, #0]
  405b32:	f7ff ff23 	bl	40597c <_malloc_trim_r>
  405b36:	e7b3      	b.n	405aa0 <_free_r+0x84>
  405b38:	4610      	mov	r0, r2
  405b3a:	e7cd      	b.n	405ad8 <_free_r+0xbc>
  405b3c:	1811      	adds	r1, r2, r0
  405b3e:	6849      	ldr	r1, [r1, #4]
  405b40:	07c9      	lsls	r1, r1, #31
  405b42:	d444      	bmi.n	405bce <_free_r+0x1b2>
  405b44:	6891      	ldr	r1, [r2, #8]
  405b46:	68d2      	ldr	r2, [r2, #12]
  405b48:	60ca      	str	r2, [r1, #12]
  405b4a:	4403      	add	r3, r0
  405b4c:	f043 0001 	orr.w	r0, r3, #1
  405b50:	6091      	str	r1, [r2, #8]
  405b52:	6060      	str	r0, [r4, #4]
  405b54:	50e3      	str	r3, [r4, r3]
  405b56:	e7a3      	b.n	405aa0 <_free_r+0x84>
  405b58:	2a14      	cmp	r2, #20
  405b5a:	d816      	bhi.n	405b8a <_free_r+0x16e>
  405b5c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405b60:	00ff      	lsls	r7, r7, #3
  405b62:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405b66:	e7aa      	b.n	405abe <_free_r+0xa2>
  405b68:	10aa      	asrs	r2, r5, #2
  405b6a:	2301      	movs	r3, #1
  405b6c:	684d      	ldr	r5, [r1, #4]
  405b6e:	4093      	lsls	r3, r2
  405b70:	432b      	orrs	r3, r5
  405b72:	604b      	str	r3, [r1, #4]
  405b74:	4603      	mov	r3, r0
  405b76:	e7b0      	b.n	405ada <_free_r+0xbe>
  405b78:	f043 0201 	orr.w	r2, r3, #1
  405b7c:	614c      	str	r4, [r1, #20]
  405b7e:	610c      	str	r4, [r1, #16]
  405b80:	60e5      	str	r5, [r4, #12]
  405b82:	60a5      	str	r5, [r4, #8]
  405b84:	6062      	str	r2, [r4, #4]
  405b86:	50e3      	str	r3, [r4, r3]
  405b88:	e78a      	b.n	405aa0 <_free_r+0x84>
  405b8a:	2a54      	cmp	r2, #84	; 0x54
  405b8c:	d806      	bhi.n	405b9c <_free_r+0x180>
  405b8e:	0b1a      	lsrs	r2, r3, #12
  405b90:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405b94:	00ff      	lsls	r7, r7, #3
  405b96:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405b9a:	e790      	b.n	405abe <_free_r+0xa2>
  405b9c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405ba0:	d806      	bhi.n	405bb0 <_free_r+0x194>
  405ba2:	0bda      	lsrs	r2, r3, #15
  405ba4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405ba8:	00ff      	lsls	r7, r7, #3
  405baa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405bae:	e786      	b.n	405abe <_free_r+0xa2>
  405bb0:	f240 5054 	movw	r0, #1364	; 0x554
  405bb4:	4282      	cmp	r2, r0
  405bb6:	d806      	bhi.n	405bc6 <_free_r+0x1aa>
  405bb8:	0c9a      	lsrs	r2, r3, #18
  405bba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405bbe:	00ff      	lsls	r7, r7, #3
  405bc0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405bc4:	e77b      	b.n	405abe <_free_r+0xa2>
  405bc6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405bca:	257e      	movs	r5, #126	; 0x7e
  405bcc:	e777      	b.n	405abe <_free_r+0xa2>
  405bce:	f043 0101 	orr.w	r1, r3, #1
  405bd2:	6061      	str	r1, [r4, #4]
  405bd4:	6013      	str	r3, [r2, #0]
  405bd6:	e763      	b.n	405aa0 <_free_r+0x84>
  405bd8:	20400454 	.word	0x20400454
  405bdc:	2040045c 	.word	0x2040045c
  405be0:	20400860 	.word	0x20400860
  405be4:	20400cac 	.word	0x20400cac

00405be8 <__ascii_mbtowc>:
  405be8:	b082      	sub	sp, #8
  405bea:	b149      	cbz	r1, 405c00 <__ascii_mbtowc+0x18>
  405bec:	b15a      	cbz	r2, 405c06 <__ascii_mbtowc+0x1e>
  405bee:	b16b      	cbz	r3, 405c0c <__ascii_mbtowc+0x24>
  405bf0:	7813      	ldrb	r3, [r2, #0]
  405bf2:	600b      	str	r3, [r1, #0]
  405bf4:	7812      	ldrb	r2, [r2, #0]
  405bf6:	1c10      	adds	r0, r2, #0
  405bf8:	bf18      	it	ne
  405bfa:	2001      	movne	r0, #1
  405bfc:	b002      	add	sp, #8
  405bfe:	4770      	bx	lr
  405c00:	a901      	add	r1, sp, #4
  405c02:	2a00      	cmp	r2, #0
  405c04:	d1f3      	bne.n	405bee <__ascii_mbtowc+0x6>
  405c06:	4610      	mov	r0, r2
  405c08:	b002      	add	sp, #8
  405c0a:	4770      	bx	lr
  405c0c:	f06f 0001 	mvn.w	r0, #1
  405c10:	e7f4      	b.n	405bfc <__ascii_mbtowc+0x14>
  405c12:	bf00      	nop

00405c14 <memmove>:
  405c14:	4288      	cmp	r0, r1
  405c16:	b5f0      	push	{r4, r5, r6, r7, lr}
  405c18:	d90d      	bls.n	405c36 <memmove+0x22>
  405c1a:	188b      	adds	r3, r1, r2
  405c1c:	4298      	cmp	r0, r3
  405c1e:	d20a      	bcs.n	405c36 <memmove+0x22>
  405c20:	1884      	adds	r4, r0, r2
  405c22:	2a00      	cmp	r2, #0
  405c24:	d051      	beq.n	405cca <memmove+0xb6>
  405c26:	4622      	mov	r2, r4
  405c28:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405c2c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405c30:	4299      	cmp	r1, r3
  405c32:	d1f9      	bne.n	405c28 <memmove+0x14>
  405c34:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c36:	2a0f      	cmp	r2, #15
  405c38:	d948      	bls.n	405ccc <memmove+0xb8>
  405c3a:	ea41 0300 	orr.w	r3, r1, r0
  405c3e:	079b      	lsls	r3, r3, #30
  405c40:	d146      	bne.n	405cd0 <memmove+0xbc>
  405c42:	f100 0410 	add.w	r4, r0, #16
  405c46:	f101 0310 	add.w	r3, r1, #16
  405c4a:	4615      	mov	r5, r2
  405c4c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405c50:	f844 6c10 	str.w	r6, [r4, #-16]
  405c54:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405c58:	f844 6c0c 	str.w	r6, [r4, #-12]
  405c5c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405c60:	f844 6c08 	str.w	r6, [r4, #-8]
  405c64:	3d10      	subs	r5, #16
  405c66:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405c6a:	f844 6c04 	str.w	r6, [r4, #-4]
  405c6e:	2d0f      	cmp	r5, #15
  405c70:	f103 0310 	add.w	r3, r3, #16
  405c74:	f104 0410 	add.w	r4, r4, #16
  405c78:	d8e8      	bhi.n	405c4c <memmove+0x38>
  405c7a:	f1a2 0310 	sub.w	r3, r2, #16
  405c7e:	f023 030f 	bic.w	r3, r3, #15
  405c82:	f002 0e0f 	and.w	lr, r2, #15
  405c86:	3310      	adds	r3, #16
  405c88:	f1be 0f03 	cmp.w	lr, #3
  405c8c:	4419      	add	r1, r3
  405c8e:	4403      	add	r3, r0
  405c90:	d921      	bls.n	405cd6 <memmove+0xc2>
  405c92:	1f1e      	subs	r6, r3, #4
  405c94:	460d      	mov	r5, r1
  405c96:	4674      	mov	r4, lr
  405c98:	3c04      	subs	r4, #4
  405c9a:	f855 7b04 	ldr.w	r7, [r5], #4
  405c9e:	f846 7f04 	str.w	r7, [r6, #4]!
  405ca2:	2c03      	cmp	r4, #3
  405ca4:	d8f8      	bhi.n	405c98 <memmove+0x84>
  405ca6:	f1ae 0404 	sub.w	r4, lr, #4
  405caa:	f024 0403 	bic.w	r4, r4, #3
  405cae:	3404      	adds	r4, #4
  405cb0:	4421      	add	r1, r4
  405cb2:	4423      	add	r3, r4
  405cb4:	f002 0203 	and.w	r2, r2, #3
  405cb8:	b162      	cbz	r2, 405cd4 <memmove+0xc0>
  405cba:	3b01      	subs	r3, #1
  405cbc:	440a      	add	r2, r1
  405cbe:	f811 4b01 	ldrb.w	r4, [r1], #1
  405cc2:	f803 4f01 	strb.w	r4, [r3, #1]!
  405cc6:	428a      	cmp	r2, r1
  405cc8:	d1f9      	bne.n	405cbe <memmove+0xaa>
  405cca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405ccc:	4603      	mov	r3, r0
  405cce:	e7f3      	b.n	405cb8 <memmove+0xa4>
  405cd0:	4603      	mov	r3, r0
  405cd2:	e7f2      	b.n	405cba <memmove+0xa6>
  405cd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405cd6:	4672      	mov	r2, lr
  405cd8:	e7ee      	b.n	405cb8 <memmove+0xa4>
  405cda:	bf00      	nop

00405cdc <_realloc_r>:
  405cdc:	2900      	cmp	r1, #0
  405cde:	f000 8095 	beq.w	405e0c <_realloc_r+0x130>
  405ce2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405ce6:	460d      	mov	r5, r1
  405ce8:	4616      	mov	r6, r2
  405cea:	b083      	sub	sp, #12
  405cec:	4680      	mov	r8, r0
  405cee:	f106 070b 	add.w	r7, r6, #11
  405cf2:	f7ff f98f 	bl	405014 <__malloc_lock>
  405cf6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405cfa:	2f16      	cmp	r7, #22
  405cfc:	f02e 0403 	bic.w	r4, lr, #3
  405d00:	f1a5 0908 	sub.w	r9, r5, #8
  405d04:	d83c      	bhi.n	405d80 <_realloc_r+0xa4>
  405d06:	2210      	movs	r2, #16
  405d08:	4617      	mov	r7, r2
  405d0a:	42be      	cmp	r6, r7
  405d0c:	d83d      	bhi.n	405d8a <_realloc_r+0xae>
  405d0e:	4294      	cmp	r4, r2
  405d10:	da43      	bge.n	405d9a <_realloc_r+0xbe>
  405d12:	4bc4      	ldr	r3, [pc, #784]	; (406024 <_realloc_r+0x348>)
  405d14:	6899      	ldr	r1, [r3, #8]
  405d16:	eb09 0004 	add.w	r0, r9, r4
  405d1a:	4288      	cmp	r0, r1
  405d1c:	f000 80b4 	beq.w	405e88 <_realloc_r+0x1ac>
  405d20:	6843      	ldr	r3, [r0, #4]
  405d22:	f023 0101 	bic.w	r1, r3, #1
  405d26:	4401      	add	r1, r0
  405d28:	6849      	ldr	r1, [r1, #4]
  405d2a:	07c9      	lsls	r1, r1, #31
  405d2c:	d54c      	bpl.n	405dc8 <_realloc_r+0xec>
  405d2e:	f01e 0f01 	tst.w	lr, #1
  405d32:	f000 809b 	beq.w	405e6c <_realloc_r+0x190>
  405d36:	4631      	mov	r1, r6
  405d38:	4640      	mov	r0, r8
  405d3a:	f7fe fdcb 	bl	4048d4 <_malloc_r>
  405d3e:	4606      	mov	r6, r0
  405d40:	2800      	cmp	r0, #0
  405d42:	d03a      	beq.n	405dba <_realloc_r+0xde>
  405d44:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405d48:	f023 0301 	bic.w	r3, r3, #1
  405d4c:	444b      	add	r3, r9
  405d4e:	f1a0 0208 	sub.w	r2, r0, #8
  405d52:	429a      	cmp	r2, r3
  405d54:	f000 8121 	beq.w	405f9a <_realloc_r+0x2be>
  405d58:	1f22      	subs	r2, r4, #4
  405d5a:	2a24      	cmp	r2, #36	; 0x24
  405d5c:	f200 8107 	bhi.w	405f6e <_realloc_r+0x292>
  405d60:	2a13      	cmp	r2, #19
  405d62:	f200 80db 	bhi.w	405f1c <_realloc_r+0x240>
  405d66:	4603      	mov	r3, r0
  405d68:	462a      	mov	r2, r5
  405d6a:	6811      	ldr	r1, [r2, #0]
  405d6c:	6019      	str	r1, [r3, #0]
  405d6e:	6851      	ldr	r1, [r2, #4]
  405d70:	6059      	str	r1, [r3, #4]
  405d72:	6892      	ldr	r2, [r2, #8]
  405d74:	609a      	str	r2, [r3, #8]
  405d76:	4629      	mov	r1, r5
  405d78:	4640      	mov	r0, r8
  405d7a:	f7ff fe4f 	bl	405a1c <_free_r>
  405d7e:	e01c      	b.n	405dba <_realloc_r+0xde>
  405d80:	f027 0707 	bic.w	r7, r7, #7
  405d84:	2f00      	cmp	r7, #0
  405d86:	463a      	mov	r2, r7
  405d88:	dabf      	bge.n	405d0a <_realloc_r+0x2e>
  405d8a:	2600      	movs	r6, #0
  405d8c:	230c      	movs	r3, #12
  405d8e:	4630      	mov	r0, r6
  405d90:	f8c8 3000 	str.w	r3, [r8]
  405d94:	b003      	add	sp, #12
  405d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405d9a:	462e      	mov	r6, r5
  405d9c:	1be3      	subs	r3, r4, r7
  405d9e:	2b0f      	cmp	r3, #15
  405da0:	d81e      	bhi.n	405de0 <_realloc_r+0x104>
  405da2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405da6:	f003 0301 	and.w	r3, r3, #1
  405daa:	4323      	orrs	r3, r4
  405dac:	444c      	add	r4, r9
  405dae:	f8c9 3004 	str.w	r3, [r9, #4]
  405db2:	6863      	ldr	r3, [r4, #4]
  405db4:	f043 0301 	orr.w	r3, r3, #1
  405db8:	6063      	str	r3, [r4, #4]
  405dba:	4640      	mov	r0, r8
  405dbc:	f7ff f930 	bl	405020 <__malloc_unlock>
  405dc0:	4630      	mov	r0, r6
  405dc2:	b003      	add	sp, #12
  405dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405dc8:	f023 0303 	bic.w	r3, r3, #3
  405dcc:	18e1      	adds	r1, r4, r3
  405dce:	4291      	cmp	r1, r2
  405dd0:	db1f      	blt.n	405e12 <_realloc_r+0x136>
  405dd2:	68c3      	ldr	r3, [r0, #12]
  405dd4:	6882      	ldr	r2, [r0, #8]
  405dd6:	462e      	mov	r6, r5
  405dd8:	60d3      	str	r3, [r2, #12]
  405dda:	460c      	mov	r4, r1
  405ddc:	609a      	str	r2, [r3, #8]
  405dde:	e7dd      	b.n	405d9c <_realloc_r+0xc0>
  405de0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405de4:	eb09 0107 	add.w	r1, r9, r7
  405de8:	f002 0201 	and.w	r2, r2, #1
  405dec:	444c      	add	r4, r9
  405dee:	f043 0301 	orr.w	r3, r3, #1
  405df2:	4317      	orrs	r7, r2
  405df4:	f8c9 7004 	str.w	r7, [r9, #4]
  405df8:	604b      	str	r3, [r1, #4]
  405dfa:	6863      	ldr	r3, [r4, #4]
  405dfc:	f043 0301 	orr.w	r3, r3, #1
  405e00:	3108      	adds	r1, #8
  405e02:	6063      	str	r3, [r4, #4]
  405e04:	4640      	mov	r0, r8
  405e06:	f7ff fe09 	bl	405a1c <_free_r>
  405e0a:	e7d6      	b.n	405dba <_realloc_r+0xde>
  405e0c:	4611      	mov	r1, r2
  405e0e:	f7fe bd61 	b.w	4048d4 <_malloc_r>
  405e12:	f01e 0f01 	tst.w	lr, #1
  405e16:	d18e      	bne.n	405d36 <_realloc_r+0x5a>
  405e18:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405e1c:	eba9 0a01 	sub.w	sl, r9, r1
  405e20:	f8da 1004 	ldr.w	r1, [sl, #4]
  405e24:	f021 0103 	bic.w	r1, r1, #3
  405e28:	440b      	add	r3, r1
  405e2a:	4423      	add	r3, r4
  405e2c:	4293      	cmp	r3, r2
  405e2e:	db25      	blt.n	405e7c <_realloc_r+0x1a0>
  405e30:	68c2      	ldr	r2, [r0, #12]
  405e32:	6881      	ldr	r1, [r0, #8]
  405e34:	4656      	mov	r6, sl
  405e36:	60ca      	str	r2, [r1, #12]
  405e38:	6091      	str	r1, [r2, #8]
  405e3a:	f8da 100c 	ldr.w	r1, [sl, #12]
  405e3e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405e42:	1f22      	subs	r2, r4, #4
  405e44:	2a24      	cmp	r2, #36	; 0x24
  405e46:	60c1      	str	r1, [r0, #12]
  405e48:	6088      	str	r0, [r1, #8]
  405e4a:	f200 8094 	bhi.w	405f76 <_realloc_r+0x29a>
  405e4e:	2a13      	cmp	r2, #19
  405e50:	d96f      	bls.n	405f32 <_realloc_r+0x256>
  405e52:	6829      	ldr	r1, [r5, #0]
  405e54:	f8ca 1008 	str.w	r1, [sl, #8]
  405e58:	6869      	ldr	r1, [r5, #4]
  405e5a:	f8ca 100c 	str.w	r1, [sl, #12]
  405e5e:	2a1b      	cmp	r2, #27
  405e60:	f200 80a2 	bhi.w	405fa8 <_realloc_r+0x2cc>
  405e64:	3508      	adds	r5, #8
  405e66:	f10a 0210 	add.w	r2, sl, #16
  405e6a:	e063      	b.n	405f34 <_realloc_r+0x258>
  405e6c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405e70:	eba9 0a03 	sub.w	sl, r9, r3
  405e74:	f8da 1004 	ldr.w	r1, [sl, #4]
  405e78:	f021 0103 	bic.w	r1, r1, #3
  405e7c:	1863      	adds	r3, r4, r1
  405e7e:	4293      	cmp	r3, r2
  405e80:	f6ff af59 	blt.w	405d36 <_realloc_r+0x5a>
  405e84:	4656      	mov	r6, sl
  405e86:	e7d8      	b.n	405e3a <_realloc_r+0x15e>
  405e88:	6841      	ldr	r1, [r0, #4]
  405e8a:	f021 0b03 	bic.w	fp, r1, #3
  405e8e:	44a3      	add	fp, r4
  405e90:	f107 0010 	add.w	r0, r7, #16
  405e94:	4583      	cmp	fp, r0
  405e96:	da56      	bge.n	405f46 <_realloc_r+0x26a>
  405e98:	f01e 0f01 	tst.w	lr, #1
  405e9c:	f47f af4b 	bne.w	405d36 <_realloc_r+0x5a>
  405ea0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405ea4:	eba9 0a01 	sub.w	sl, r9, r1
  405ea8:	f8da 1004 	ldr.w	r1, [sl, #4]
  405eac:	f021 0103 	bic.w	r1, r1, #3
  405eb0:	448b      	add	fp, r1
  405eb2:	4558      	cmp	r0, fp
  405eb4:	dce2      	bgt.n	405e7c <_realloc_r+0x1a0>
  405eb6:	4656      	mov	r6, sl
  405eb8:	f8da 100c 	ldr.w	r1, [sl, #12]
  405ebc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405ec0:	1f22      	subs	r2, r4, #4
  405ec2:	2a24      	cmp	r2, #36	; 0x24
  405ec4:	60c1      	str	r1, [r0, #12]
  405ec6:	6088      	str	r0, [r1, #8]
  405ec8:	f200 808f 	bhi.w	405fea <_realloc_r+0x30e>
  405ecc:	2a13      	cmp	r2, #19
  405ece:	f240 808a 	bls.w	405fe6 <_realloc_r+0x30a>
  405ed2:	6829      	ldr	r1, [r5, #0]
  405ed4:	f8ca 1008 	str.w	r1, [sl, #8]
  405ed8:	6869      	ldr	r1, [r5, #4]
  405eda:	f8ca 100c 	str.w	r1, [sl, #12]
  405ede:	2a1b      	cmp	r2, #27
  405ee0:	f200 808a 	bhi.w	405ff8 <_realloc_r+0x31c>
  405ee4:	3508      	adds	r5, #8
  405ee6:	f10a 0210 	add.w	r2, sl, #16
  405eea:	6829      	ldr	r1, [r5, #0]
  405eec:	6011      	str	r1, [r2, #0]
  405eee:	6869      	ldr	r1, [r5, #4]
  405ef0:	6051      	str	r1, [r2, #4]
  405ef2:	68a9      	ldr	r1, [r5, #8]
  405ef4:	6091      	str	r1, [r2, #8]
  405ef6:	eb0a 0107 	add.w	r1, sl, r7
  405efa:	ebab 0207 	sub.w	r2, fp, r7
  405efe:	f042 0201 	orr.w	r2, r2, #1
  405f02:	6099      	str	r1, [r3, #8]
  405f04:	604a      	str	r2, [r1, #4]
  405f06:	f8da 3004 	ldr.w	r3, [sl, #4]
  405f0a:	f003 0301 	and.w	r3, r3, #1
  405f0e:	431f      	orrs	r7, r3
  405f10:	4640      	mov	r0, r8
  405f12:	f8ca 7004 	str.w	r7, [sl, #4]
  405f16:	f7ff f883 	bl	405020 <__malloc_unlock>
  405f1a:	e751      	b.n	405dc0 <_realloc_r+0xe4>
  405f1c:	682b      	ldr	r3, [r5, #0]
  405f1e:	6003      	str	r3, [r0, #0]
  405f20:	686b      	ldr	r3, [r5, #4]
  405f22:	6043      	str	r3, [r0, #4]
  405f24:	2a1b      	cmp	r2, #27
  405f26:	d82d      	bhi.n	405f84 <_realloc_r+0x2a8>
  405f28:	f100 0308 	add.w	r3, r0, #8
  405f2c:	f105 0208 	add.w	r2, r5, #8
  405f30:	e71b      	b.n	405d6a <_realloc_r+0x8e>
  405f32:	4632      	mov	r2, r6
  405f34:	6829      	ldr	r1, [r5, #0]
  405f36:	6011      	str	r1, [r2, #0]
  405f38:	6869      	ldr	r1, [r5, #4]
  405f3a:	6051      	str	r1, [r2, #4]
  405f3c:	68a9      	ldr	r1, [r5, #8]
  405f3e:	6091      	str	r1, [r2, #8]
  405f40:	461c      	mov	r4, r3
  405f42:	46d1      	mov	r9, sl
  405f44:	e72a      	b.n	405d9c <_realloc_r+0xc0>
  405f46:	eb09 0107 	add.w	r1, r9, r7
  405f4a:	ebab 0b07 	sub.w	fp, fp, r7
  405f4e:	f04b 0201 	orr.w	r2, fp, #1
  405f52:	6099      	str	r1, [r3, #8]
  405f54:	604a      	str	r2, [r1, #4]
  405f56:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405f5a:	f003 0301 	and.w	r3, r3, #1
  405f5e:	431f      	orrs	r7, r3
  405f60:	4640      	mov	r0, r8
  405f62:	f845 7c04 	str.w	r7, [r5, #-4]
  405f66:	f7ff f85b 	bl	405020 <__malloc_unlock>
  405f6a:	462e      	mov	r6, r5
  405f6c:	e728      	b.n	405dc0 <_realloc_r+0xe4>
  405f6e:	4629      	mov	r1, r5
  405f70:	f7ff fe50 	bl	405c14 <memmove>
  405f74:	e6ff      	b.n	405d76 <_realloc_r+0x9a>
  405f76:	4629      	mov	r1, r5
  405f78:	4630      	mov	r0, r6
  405f7a:	461c      	mov	r4, r3
  405f7c:	46d1      	mov	r9, sl
  405f7e:	f7ff fe49 	bl	405c14 <memmove>
  405f82:	e70b      	b.n	405d9c <_realloc_r+0xc0>
  405f84:	68ab      	ldr	r3, [r5, #8]
  405f86:	6083      	str	r3, [r0, #8]
  405f88:	68eb      	ldr	r3, [r5, #12]
  405f8a:	60c3      	str	r3, [r0, #12]
  405f8c:	2a24      	cmp	r2, #36	; 0x24
  405f8e:	d017      	beq.n	405fc0 <_realloc_r+0x2e4>
  405f90:	f100 0310 	add.w	r3, r0, #16
  405f94:	f105 0210 	add.w	r2, r5, #16
  405f98:	e6e7      	b.n	405d6a <_realloc_r+0x8e>
  405f9a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405f9e:	f023 0303 	bic.w	r3, r3, #3
  405fa2:	441c      	add	r4, r3
  405fa4:	462e      	mov	r6, r5
  405fa6:	e6f9      	b.n	405d9c <_realloc_r+0xc0>
  405fa8:	68a9      	ldr	r1, [r5, #8]
  405faa:	f8ca 1010 	str.w	r1, [sl, #16]
  405fae:	68e9      	ldr	r1, [r5, #12]
  405fb0:	f8ca 1014 	str.w	r1, [sl, #20]
  405fb4:	2a24      	cmp	r2, #36	; 0x24
  405fb6:	d00c      	beq.n	405fd2 <_realloc_r+0x2f6>
  405fb8:	3510      	adds	r5, #16
  405fba:	f10a 0218 	add.w	r2, sl, #24
  405fbe:	e7b9      	b.n	405f34 <_realloc_r+0x258>
  405fc0:	692b      	ldr	r3, [r5, #16]
  405fc2:	6103      	str	r3, [r0, #16]
  405fc4:	696b      	ldr	r3, [r5, #20]
  405fc6:	6143      	str	r3, [r0, #20]
  405fc8:	f105 0218 	add.w	r2, r5, #24
  405fcc:	f100 0318 	add.w	r3, r0, #24
  405fd0:	e6cb      	b.n	405d6a <_realloc_r+0x8e>
  405fd2:	692a      	ldr	r2, [r5, #16]
  405fd4:	f8ca 2018 	str.w	r2, [sl, #24]
  405fd8:	696a      	ldr	r2, [r5, #20]
  405fda:	f8ca 201c 	str.w	r2, [sl, #28]
  405fde:	3518      	adds	r5, #24
  405fe0:	f10a 0220 	add.w	r2, sl, #32
  405fe4:	e7a6      	b.n	405f34 <_realloc_r+0x258>
  405fe6:	4632      	mov	r2, r6
  405fe8:	e77f      	b.n	405eea <_realloc_r+0x20e>
  405fea:	4629      	mov	r1, r5
  405fec:	4630      	mov	r0, r6
  405fee:	9301      	str	r3, [sp, #4]
  405ff0:	f7ff fe10 	bl	405c14 <memmove>
  405ff4:	9b01      	ldr	r3, [sp, #4]
  405ff6:	e77e      	b.n	405ef6 <_realloc_r+0x21a>
  405ff8:	68a9      	ldr	r1, [r5, #8]
  405ffa:	f8ca 1010 	str.w	r1, [sl, #16]
  405ffe:	68e9      	ldr	r1, [r5, #12]
  406000:	f8ca 1014 	str.w	r1, [sl, #20]
  406004:	2a24      	cmp	r2, #36	; 0x24
  406006:	d003      	beq.n	406010 <_realloc_r+0x334>
  406008:	3510      	adds	r5, #16
  40600a:	f10a 0218 	add.w	r2, sl, #24
  40600e:	e76c      	b.n	405eea <_realloc_r+0x20e>
  406010:	692a      	ldr	r2, [r5, #16]
  406012:	f8ca 2018 	str.w	r2, [sl, #24]
  406016:	696a      	ldr	r2, [r5, #20]
  406018:	f8ca 201c 	str.w	r2, [sl, #28]
  40601c:	3518      	adds	r5, #24
  40601e:	f10a 0220 	add.w	r2, sl, #32
  406022:	e762      	b.n	405eea <_realloc_r+0x20e>
  406024:	20400454 	.word	0x20400454

00406028 <__ascii_wctomb>:
  406028:	b121      	cbz	r1, 406034 <__ascii_wctomb+0xc>
  40602a:	2aff      	cmp	r2, #255	; 0xff
  40602c:	d804      	bhi.n	406038 <__ascii_wctomb+0x10>
  40602e:	700a      	strb	r2, [r1, #0]
  406030:	2001      	movs	r0, #1
  406032:	4770      	bx	lr
  406034:	4608      	mov	r0, r1
  406036:	4770      	bx	lr
  406038:	238a      	movs	r3, #138	; 0x8a
  40603a:	6003      	str	r3, [r0, #0]
  40603c:	f04f 30ff 	mov.w	r0, #4294967295
  406040:	4770      	bx	lr
  406042:	bf00      	nop

00406044 <__aeabi_dcmpun>:
  406044:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406048:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40604c:	d102      	bne.n	406054 <__aeabi_dcmpun+0x10>
  40604e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406052:	d10a      	bne.n	40606a <__aeabi_dcmpun+0x26>
  406054:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406058:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40605c:	d102      	bne.n	406064 <__aeabi_dcmpun+0x20>
  40605e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406062:	d102      	bne.n	40606a <__aeabi_dcmpun+0x26>
  406064:	f04f 0000 	mov.w	r0, #0
  406068:	4770      	bx	lr
  40606a:	f04f 0001 	mov.w	r0, #1
  40606e:	4770      	bx	lr

00406070 <__aeabi_d2iz>:
  406070:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406074:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  406078:	d215      	bcs.n	4060a6 <__aeabi_d2iz+0x36>
  40607a:	d511      	bpl.n	4060a0 <__aeabi_d2iz+0x30>
  40607c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406080:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406084:	d912      	bls.n	4060ac <__aeabi_d2iz+0x3c>
  406086:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40608a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40608e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406092:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  406096:	fa23 f002 	lsr.w	r0, r3, r2
  40609a:	bf18      	it	ne
  40609c:	4240      	negne	r0, r0
  40609e:	4770      	bx	lr
  4060a0:	f04f 0000 	mov.w	r0, #0
  4060a4:	4770      	bx	lr
  4060a6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4060aa:	d105      	bne.n	4060b8 <__aeabi_d2iz+0x48>
  4060ac:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4060b0:	bf08      	it	eq
  4060b2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4060b6:	4770      	bx	lr
  4060b8:	f04f 0000 	mov.w	r0, #0
  4060bc:	4770      	bx	lr
  4060be:	bf00      	nop

004060c0 <__aeabi_uldivmod>:
  4060c0:	b953      	cbnz	r3, 4060d8 <__aeabi_uldivmod+0x18>
  4060c2:	b94a      	cbnz	r2, 4060d8 <__aeabi_uldivmod+0x18>
  4060c4:	2900      	cmp	r1, #0
  4060c6:	bf08      	it	eq
  4060c8:	2800      	cmpeq	r0, #0
  4060ca:	bf1c      	itt	ne
  4060cc:	f04f 31ff 	movne.w	r1, #4294967295
  4060d0:	f04f 30ff 	movne.w	r0, #4294967295
  4060d4:	f000 b97a 	b.w	4063cc <__aeabi_idiv0>
  4060d8:	f1ad 0c08 	sub.w	ip, sp, #8
  4060dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4060e0:	f000 f806 	bl	4060f0 <__udivmoddi4>
  4060e4:	f8dd e004 	ldr.w	lr, [sp, #4]
  4060e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4060ec:	b004      	add	sp, #16
  4060ee:	4770      	bx	lr

004060f0 <__udivmoddi4>:
  4060f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4060f4:	468c      	mov	ip, r1
  4060f6:	460d      	mov	r5, r1
  4060f8:	4604      	mov	r4, r0
  4060fa:	9e08      	ldr	r6, [sp, #32]
  4060fc:	2b00      	cmp	r3, #0
  4060fe:	d151      	bne.n	4061a4 <__udivmoddi4+0xb4>
  406100:	428a      	cmp	r2, r1
  406102:	4617      	mov	r7, r2
  406104:	d96d      	bls.n	4061e2 <__udivmoddi4+0xf2>
  406106:	fab2 fe82 	clz	lr, r2
  40610a:	f1be 0f00 	cmp.w	lr, #0
  40610e:	d00b      	beq.n	406128 <__udivmoddi4+0x38>
  406110:	f1ce 0c20 	rsb	ip, lr, #32
  406114:	fa01 f50e 	lsl.w	r5, r1, lr
  406118:	fa20 fc0c 	lsr.w	ip, r0, ip
  40611c:	fa02 f70e 	lsl.w	r7, r2, lr
  406120:	ea4c 0c05 	orr.w	ip, ip, r5
  406124:	fa00 f40e 	lsl.w	r4, r0, lr
  406128:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40612c:	0c25      	lsrs	r5, r4, #16
  40612e:	fbbc f8fa 	udiv	r8, ip, sl
  406132:	fa1f f987 	uxth.w	r9, r7
  406136:	fb0a cc18 	mls	ip, sl, r8, ip
  40613a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40613e:	fb08 f309 	mul.w	r3, r8, r9
  406142:	42ab      	cmp	r3, r5
  406144:	d90a      	bls.n	40615c <__udivmoddi4+0x6c>
  406146:	19ed      	adds	r5, r5, r7
  406148:	f108 32ff 	add.w	r2, r8, #4294967295
  40614c:	f080 8123 	bcs.w	406396 <__udivmoddi4+0x2a6>
  406150:	42ab      	cmp	r3, r5
  406152:	f240 8120 	bls.w	406396 <__udivmoddi4+0x2a6>
  406156:	f1a8 0802 	sub.w	r8, r8, #2
  40615a:	443d      	add	r5, r7
  40615c:	1aed      	subs	r5, r5, r3
  40615e:	b2a4      	uxth	r4, r4
  406160:	fbb5 f0fa 	udiv	r0, r5, sl
  406164:	fb0a 5510 	mls	r5, sl, r0, r5
  406168:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40616c:	fb00 f909 	mul.w	r9, r0, r9
  406170:	45a1      	cmp	r9, r4
  406172:	d909      	bls.n	406188 <__udivmoddi4+0x98>
  406174:	19e4      	adds	r4, r4, r7
  406176:	f100 33ff 	add.w	r3, r0, #4294967295
  40617a:	f080 810a 	bcs.w	406392 <__udivmoddi4+0x2a2>
  40617e:	45a1      	cmp	r9, r4
  406180:	f240 8107 	bls.w	406392 <__udivmoddi4+0x2a2>
  406184:	3802      	subs	r0, #2
  406186:	443c      	add	r4, r7
  406188:	eba4 0409 	sub.w	r4, r4, r9
  40618c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406190:	2100      	movs	r1, #0
  406192:	2e00      	cmp	r6, #0
  406194:	d061      	beq.n	40625a <__udivmoddi4+0x16a>
  406196:	fa24 f40e 	lsr.w	r4, r4, lr
  40619a:	2300      	movs	r3, #0
  40619c:	6034      	str	r4, [r6, #0]
  40619e:	6073      	str	r3, [r6, #4]
  4061a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061a4:	428b      	cmp	r3, r1
  4061a6:	d907      	bls.n	4061b8 <__udivmoddi4+0xc8>
  4061a8:	2e00      	cmp	r6, #0
  4061aa:	d054      	beq.n	406256 <__udivmoddi4+0x166>
  4061ac:	2100      	movs	r1, #0
  4061ae:	e886 0021 	stmia.w	r6, {r0, r5}
  4061b2:	4608      	mov	r0, r1
  4061b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061b8:	fab3 f183 	clz	r1, r3
  4061bc:	2900      	cmp	r1, #0
  4061be:	f040 808e 	bne.w	4062de <__udivmoddi4+0x1ee>
  4061c2:	42ab      	cmp	r3, r5
  4061c4:	d302      	bcc.n	4061cc <__udivmoddi4+0xdc>
  4061c6:	4282      	cmp	r2, r0
  4061c8:	f200 80fa 	bhi.w	4063c0 <__udivmoddi4+0x2d0>
  4061cc:	1a84      	subs	r4, r0, r2
  4061ce:	eb65 0503 	sbc.w	r5, r5, r3
  4061d2:	2001      	movs	r0, #1
  4061d4:	46ac      	mov	ip, r5
  4061d6:	2e00      	cmp	r6, #0
  4061d8:	d03f      	beq.n	40625a <__udivmoddi4+0x16a>
  4061da:	e886 1010 	stmia.w	r6, {r4, ip}
  4061de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061e2:	b912      	cbnz	r2, 4061ea <__udivmoddi4+0xfa>
  4061e4:	2701      	movs	r7, #1
  4061e6:	fbb7 f7f2 	udiv	r7, r7, r2
  4061ea:	fab7 fe87 	clz	lr, r7
  4061ee:	f1be 0f00 	cmp.w	lr, #0
  4061f2:	d134      	bne.n	40625e <__udivmoddi4+0x16e>
  4061f4:	1beb      	subs	r3, r5, r7
  4061f6:	0c3a      	lsrs	r2, r7, #16
  4061f8:	fa1f fc87 	uxth.w	ip, r7
  4061fc:	2101      	movs	r1, #1
  4061fe:	fbb3 f8f2 	udiv	r8, r3, r2
  406202:	0c25      	lsrs	r5, r4, #16
  406204:	fb02 3318 	mls	r3, r2, r8, r3
  406208:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40620c:	fb0c f308 	mul.w	r3, ip, r8
  406210:	42ab      	cmp	r3, r5
  406212:	d907      	bls.n	406224 <__udivmoddi4+0x134>
  406214:	19ed      	adds	r5, r5, r7
  406216:	f108 30ff 	add.w	r0, r8, #4294967295
  40621a:	d202      	bcs.n	406222 <__udivmoddi4+0x132>
  40621c:	42ab      	cmp	r3, r5
  40621e:	f200 80d1 	bhi.w	4063c4 <__udivmoddi4+0x2d4>
  406222:	4680      	mov	r8, r0
  406224:	1aed      	subs	r5, r5, r3
  406226:	b2a3      	uxth	r3, r4
  406228:	fbb5 f0f2 	udiv	r0, r5, r2
  40622c:	fb02 5510 	mls	r5, r2, r0, r5
  406230:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406234:	fb0c fc00 	mul.w	ip, ip, r0
  406238:	45a4      	cmp	ip, r4
  40623a:	d907      	bls.n	40624c <__udivmoddi4+0x15c>
  40623c:	19e4      	adds	r4, r4, r7
  40623e:	f100 33ff 	add.w	r3, r0, #4294967295
  406242:	d202      	bcs.n	40624a <__udivmoddi4+0x15a>
  406244:	45a4      	cmp	ip, r4
  406246:	f200 80b8 	bhi.w	4063ba <__udivmoddi4+0x2ca>
  40624a:	4618      	mov	r0, r3
  40624c:	eba4 040c 	sub.w	r4, r4, ip
  406250:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406254:	e79d      	b.n	406192 <__udivmoddi4+0xa2>
  406256:	4631      	mov	r1, r6
  406258:	4630      	mov	r0, r6
  40625a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40625e:	f1ce 0420 	rsb	r4, lr, #32
  406262:	fa05 f30e 	lsl.w	r3, r5, lr
  406266:	fa07 f70e 	lsl.w	r7, r7, lr
  40626a:	fa20 f804 	lsr.w	r8, r0, r4
  40626e:	0c3a      	lsrs	r2, r7, #16
  406270:	fa25 f404 	lsr.w	r4, r5, r4
  406274:	ea48 0803 	orr.w	r8, r8, r3
  406278:	fbb4 f1f2 	udiv	r1, r4, r2
  40627c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406280:	fb02 4411 	mls	r4, r2, r1, r4
  406284:	fa1f fc87 	uxth.w	ip, r7
  406288:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40628c:	fb01 f30c 	mul.w	r3, r1, ip
  406290:	42ab      	cmp	r3, r5
  406292:	fa00 f40e 	lsl.w	r4, r0, lr
  406296:	d909      	bls.n	4062ac <__udivmoddi4+0x1bc>
  406298:	19ed      	adds	r5, r5, r7
  40629a:	f101 30ff 	add.w	r0, r1, #4294967295
  40629e:	f080 808a 	bcs.w	4063b6 <__udivmoddi4+0x2c6>
  4062a2:	42ab      	cmp	r3, r5
  4062a4:	f240 8087 	bls.w	4063b6 <__udivmoddi4+0x2c6>
  4062a8:	3902      	subs	r1, #2
  4062aa:	443d      	add	r5, r7
  4062ac:	1aeb      	subs	r3, r5, r3
  4062ae:	fa1f f588 	uxth.w	r5, r8
  4062b2:	fbb3 f0f2 	udiv	r0, r3, r2
  4062b6:	fb02 3310 	mls	r3, r2, r0, r3
  4062ba:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4062be:	fb00 f30c 	mul.w	r3, r0, ip
  4062c2:	42ab      	cmp	r3, r5
  4062c4:	d907      	bls.n	4062d6 <__udivmoddi4+0x1e6>
  4062c6:	19ed      	adds	r5, r5, r7
  4062c8:	f100 38ff 	add.w	r8, r0, #4294967295
  4062cc:	d26f      	bcs.n	4063ae <__udivmoddi4+0x2be>
  4062ce:	42ab      	cmp	r3, r5
  4062d0:	d96d      	bls.n	4063ae <__udivmoddi4+0x2be>
  4062d2:	3802      	subs	r0, #2
  4062d4:	443d      	add	r5, r7
  4062d6:	1aeb      	subs	r3, r5, r3
  4062d8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4062dc:	e78f      	b.n	4061fe <__udivmoddi4+0x10e>
  4062de:	f1c1 0720 	rsb	r7, r1, #32
  4062e2:	fa22 f807 	lsr.w	r8, r2, r7
  4062e6:	408b      	lsls	r3, r1
  4062e8:	fa05 f401 	lsl.w	r4, r5, r1
  4062ec:	ea48 0303 	orr.w	r3, r8, r3
  4062f0:	fa20 fe07 	lsr.w	lr, r0, r7
  4062f4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4062f8:	40fd      	lsrs	r5, r7
  4062fa:	ea4e 0e04 	orr.w	lr, lr, r4
  4062fe:	fbb5 f9fc 	udiv	r9, r5, ip
  406302:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406306:	fb0c 5519 	mls	r5, ip, r9, r5
  40630a:	fa1f f883 	uxth.w	r8, r3
  40630e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406312:	fb09 f408 	mul.w	r4, r9, r8
  406316:	42ac      	cmp	r4, r5
  406318:	fa02 f201 	lsl.w	r2, r2, r1
  40631c:	fa00 fa01 	lsl.w	sl, r0, r1
  406320:	d908      	bls.n	406334 <__udivmoddi4+0x244>
  406322:	18ed      	adds	r5, r5, r3
  406324:	f109 30ff 	add.w	r0, r9, #4294967295
  406328:	d243      	bcs.n	4063b2 <__udivmoddi4+0x2c2>
  40632a:	42ac      	cmp	r4, r5
  40632c:	d941      	bls.n	4063b2 <__udivmoddi4+0x2c2>
  40632e:	f1a9 0902 	sub.w	r9, r9, #2
  406332:	441d      	add	r5, r3
  406334:	1b2d      	subs	r5, r5, r4
  406336:	fa1f fe8e 	uxth.w	lr, lr
  40633a:	fbb5 f0fc 	udiv	r0, r5, ip
  40633e:	fb0c 5510 	mls	r5, ip, r0, r5
  406342:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406346:	fb00 f808 	mul.w	r8, r0, r8
  40634a:	45a0      	cmp	r8, r4
  40634c:	d907      	bls.n	40635e <__udivmoddi4+0x26e>
  40634e:	18e4      	adds	r4, r4, r3
  406350:	f100 35ff 	add.w	r5, r0, #4294967295
  406354:	d229      	bcs.n	4063aa <__udivmoddi4+0x2ba>
  406356:	45a0      	cmp	r8, r4
  406358:	d927      	bls.n	4063aa <__udivmoddi4+0x2ba>
  40635a:	3802      	subs	r0, #2
  40635c:	441c      	add	r4, r3
  40635e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406362:	eba4 0408 	sub.w	r4, r4, r8
  406366:	fba0 8902 	umull	r8, r9, r0, r2
  40636a:	454c      	cmp	r4, r9
  40636c:	46c6      	mov	lr, r8
  40636e:	464d      	mov	r5, r9
  406370:	d315      	bcc.n	40639e <__udivmoddi4+0x2ae>
  406372:	d012      	beq.n	40639a <__udivmoddi4+0x2aa>
  406374:	b156      	cbz	r6, 40638c <__udivmoddi4+0x29c>
  406376:	ebba 030e 	subs.w	r3, sl, lr
  40637a:	eb64 0405 	sbc.w	r4, r4, r5
  40637e:	fa04 f707 	lsl.w	r7, r4, r7
  406382:	40cb      	lsrs	r3, r1
  406384:	431f      	orrs	r7, r3
  406386:	40cc      	lsrs	r4, r1
  406388:	6037      	str	r7, [r6, #0]
  40638a:	6074      	str	r4, [r6, #4]
  40638c:	2100      	movs	r1, #0
  40638e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406392:	4618      	mov	r0, r3
  406394:	e6f8      	b.n	406188 <__udivmoddi4+0x98>
  406396:	4690      	mov	r8, r2
  406398:	e6e0      	b.n	40615c <__udivmoddi4+0x6c>
  40639a:	45c2      	cmp	sl, r8
  40639c:	d2ea      	bcs.n	406374 <__udivmoddi4+0x284>
  40639e:	ebb8 0e02 	subs.w	lr, r8, r2
  4063a2:	eb69 0503 	sbc.w	r5, r9, r3
  4063a6:	3801      	subs	r0, #1
  4063a8:	e7e4      	b.n	406374 <__udivmoddi4+0x284>
  4063aa:	4628      	mov	r0, r5
  4063ac:	e7d7      	b.n	40635e <__udivmoddi4+0x26e>
  4063ae:	4640      	mov	r0, r8
  4063b0:	e791      	b.n	4062d6 <__udivmoddi4+0x1e6>
  4063b2:	4681      	mov	r9, r0
  4063b4:	e7be      	b.n	406334 <__udivmoddi4+0x244>
  4063b6:	4601      	mov	r1, r0
  4063b8:	e778      	b.n	4062ac <__udivmoddi4+0x1bc>
  4063ba:	3802      	subs	r0, #2
  4063bc:	443c      	add	r4, r7
  4063be:	e745      	b.n	40624c <__udivmoddi4+0x15c>
  4063c0:	4608      	mov	r0, r1
  4063c2:	e708      	b.n	4061d6 <__udivmoddi4+0xe6>
  4063c4:	f1a8 0802 	sub.w	r8, r8, #2
  4063c8:	443d      	add	r5, r7
  4063ca:	e72b      	b.n	406224 <__udivmoddi4+0x134>

004063cc <__aeabi_idiv0>:
  4063cc:	4770      	bx	lr
  4063ce:	bf00      	nop

004063d0 <sysfont_glyphs>:
	...
  4063f0:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406400:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406410:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  406428:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406438:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406448:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406460:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406470:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406480:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  406498:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  4064b4:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4064c4:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4064d4:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4064e4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  40650c:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406534:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406544:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406568:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406578:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406588:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  406598:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  4065b0:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  4065c0:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4065d0:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4065e8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  4065f8:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  406608:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406620:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406630:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406640:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406658:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406668:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406678:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406690:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4066a0:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4066b0:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4066cc:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4066dc:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4066ec:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  406708:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406720:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406738:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406748:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406758:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406770:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406780:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406790:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4067a8:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4067b8:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  4067c8:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4067e0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  4067f0:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406800:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406818:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406828:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406838:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406850:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406860:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406870:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406888:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  406898:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4068a8:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  4068c0:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4068d0:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4068e0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  4068f8:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406908:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406918:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406930:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406940:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406950:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406968:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406978:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406988:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4069a0:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  4069b0:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  4069c0:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4069d8:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4069e8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  4069f8:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406a10:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406a20:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406a30:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406a48:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406a58:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406a68:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406a80:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406a90:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406aa0:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406ac8:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406ad8:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406af4:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406b0c:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406b1c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b2c:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406b44:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406b54:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406b64:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406b7c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406b8c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406b9c:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406bac:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406bbc:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406bcc:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406bdc:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406bec:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406bfc:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406c0c:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406c24:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406c34:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406c44:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406c60:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406c7c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406c98:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406ca8:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406cb8:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406cd0:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406cec:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406d08:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406d24:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406d40:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406d5c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406d78:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406d94:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406da4:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406db4:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406dc4:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406dd4:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406de4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406df4:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406e04:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406e14:	0000 0000 2020 2020 2020 2020 2020 2020     ....            
  406e24:	0020 0000 2e25 6c32 2066 6d63 0000 0000      ...%.2lf cm....
  406e34:	5245 4f52 0052 0000                         ERROR...

00406e3c <_global_impure_ptr>:
  406e3c:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406e4c:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406e5c:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406e6c:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406e7c:	296c 0000 0030 0000                         l)..0...

00406e84 <blanks.7223>:
  406e84:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406e94 <zeroes.7224>:
  406e94:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406ea4:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406eb4:	0000 0000                                   ....

00406eb8 <__mprec_bigtens>:
  406eb8:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406ec8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406ed8:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406ee0 <__mprec_tens>:
  406ee0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406ef0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406f00:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406f10:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406f20:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406f30:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406f40:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406f50:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406f60:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406f70:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406f80:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406f90:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406fa0:	9db4 79d9 7843 44ea                         ...yCx.D

00406fa8 <p05.6055>:
  406fa8:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406fb8:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406fc4 <_ctype_>:
  406fc4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406fd4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406fe4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406ff4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  407004:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  407014:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  407024:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  407034:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  407044:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004070c8 <_init>:
  4070c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4070ca:	bf00      	nop
  4070cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4070ce:	bc08      	pop	{r3}
  4070d0:	469e      	mov	lr, r3
  4070d2:	4770      	bx	lr

004070d4 <__init_array_start>:
  4070d4:	004038e1 	.word	0x004038e1

004070d8 <__frame_dummy_init_array_entry>:
  4070d8:	00400165                                e.@.

004070dc <_fini>:
  4070dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4070de:	bf00      	nop
  4070e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4070e2:	bc08      	pop	{r3}
  4070e4:	469e      	mov	lr, r3
  4070e6:	4770      	bx	lr

004070e8 <__fini_array_start>:
  4070e8:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 63d0 0040 0e0a 7d20               .....c@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <rtt_alarm>:
20400020:	3958 443c                                   X9<D

20400024 <_impure_ptr>:
20400024:	0028 2040                                   (.@ 

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0d30 2040                                   0.@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	6029 0040 5be9 0040 0000 0000 6fc4 0040     )`@..[@......o@.
20400954:	6fc0 0040 6e60 0040 6e60 0040 6e60 0040     .o@.`n@.`n@.`n@.
20400964:	6e60 0040 6e60 0040 6e60 0040 6e60 0040     `n@.`n@.`n@.`n@.
20400974:	6e60 0040 6e60 0040 ffff ffff ffff ffff     `n@.`n@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
